{"version":3,"sources":["../node_modules/@material-ui/lab/esm/TreeView/TreeViewContext.js","../node_modules/@material-ui/lab/esm/TreeView/TreeView.js","../node_modules/@material-ui/lab/esm/TreeItem/TreeItem.js","../node_modules/@material-ui/core/esm/Card/Card.js"],"names":["TreeViewContext","React","findNextFirstChar","firstChars","startIndex","char","i","length","defaultExpandedDefault","defaultSelectedDefault","TreeView","props","ref","children","classes","className","defaultCollapseIcon","defaultEndIcon","_props$defaultExpande","defaultExpanded","defaultExpandIcon","defaultParentIcon","_props$defaultSelecte","defaultSelected","_props$disableSelecti","disableSelection","_props$multiSelect","multiSelect","expandedProp","expanded","onNodeSelect","onNodeToggle","selectedProp","selected","other","_objectWithoutProperties","_React$useState","tabbable","setTabbable","_React$useState2","focusedNodeId","setFocusedNodeId","nodeMap","firstCharMap","visibleNodes","_useControlled","useControlled","controlled","default","name","_useControlled2","_slicedToArray","setExpandedState","_useControlled3","_useControlled4","setSelectedState","isExpanded","id","Array","isArray","indexOf","isSelected","getNextNode","nodeIndex","current","getPreviousNode","getLastNode","getFirstNode","focus","lastSelectedNode","lastSelectionWasRange","currentRangeSelection","handleRangeArrowSelect","event","nodes","base","start","next","filter","push","handleRangeSelect","end","range","a","b","aIndex","bIndex","Math","min","max","slice","getNodesInRange","newSelected","concat","handleMultipleSelect","value","_toConsumableArray","handleSingleSelect","selectRange","stacked","arguments","undefined","_nodes$start","getNodesToRemove","map","apply","forEach","node","removeNodeFromNodeMap","newMap","_extends","parent","parentMap","parentChildren","c","oldFocusedNodeId","prevChildIds","_React$useState3","childrenCalculated","setChildrenCalculated","childIds","child","nodeId","arr1","arr2","arrayDiff","index","buildVisible","list","item","childs","noopSelection","Provider","icons","focusFirstNode","focusLastNode","focusNextNode","focusPreviousNode","focusByFirstCharacter","lowercaseChar","toLowerCase","firstCharIds","Object","keys","firstChar","expandAllSiblings","diff","newExpanded","toggleExpansion","oldTabbable","isFocused","selectNode","multiple","selectNextNode","selectPreviousNode","rangeSelectToFirst","rangeSelectToLast","selectAllNodes","isTabbable","getParent","mapFirstChar","addNodeToNodeMap","childrenIds","currentMap","childId","currentChildMap","role","clsx","root","withStyles","padding","margin","listStyle","TreeItem","collapseIcon","endIcon","expandIcon","iconProp","icon","label","onClick","onFocus","onKeyDown","onMouseDown","_props$TransitionComp","TransitionComponent","Collapse","TransitionProps","_React$useContext","contextIcons","nodeRef","contentRef","handleRef","useForkRef","expandable","Boolean","focused","theme","useTheme","ariaSelected","handleNextArrow","handlePreviousArrow","textContent","substring","flag","key","altKey","currentTarget","target","str","ctrlPressed","ctrlKey","metaKey","shiftKey","stopPropagation","direction","match","preventDefault","tabIndex","content","iconContainer","Typography","component","unmountOnExit","group","in","outline","WebkitTapHighlightColor","backgroundColor","palette","action","hover","fade","primary","main","selectedOpacity","hoverOpacity","marginLeft","width","display","alignItems","cursor","marginRight","flexShrink","justifyContent","fontSize","paddingLeft","position","Card","_props$raised","raised","Paper","elevation","overflow"],"mappings":"4GAAA,WAKIA,EAAkBC,gBAAoB,IAM3BD,O,kCCXf,gFA6BA,IAAIE,EAAoB,SAA2BC,EAAYC,EAAYC,GACzE,IAAK,IAAIC,EAAIF,EAAYE,EAAIH,EAAWI,OAAQD,GAAK,EACnD,GAAID,IAASF,EAAWG,GACtB,OAAOA,EAIX,OAAQ,GAGNE,EAAyB,GACzBC,EAAyB,GACzBC,EAAWT,cAAiB,SAAkBU,EAAOC,GACvD,IAAIC,EAAWF,EAAME,SACjBC,EAAUH,EAAMG,QAChBC,EAAYJ,EAAMI,UAClBC,EAAsBL,EAAMK,oBAC5BC,EAAiBN,EAAMM,eACvBC,EAAwBP,EAAMQ,gBAC9BA,OAA4C,IAA1BD,EAAmCV,EAAyBU,EAC9EE,EAAoBT,EAAMS,kBAC1BC,EAAoBV,EAAMU,kBAC1BC,EAAwBX,EAAMY,gBAC9BA,OAA4C,IAA1BD,EAAmCb,EAAyBa,EAC9EE,EAAwBb,EAAMc,iBAC9BA,OAA6C,IAA1BD,GAA2CA,EAC9DE,EAAqBf,EAAMgB,YAC3BA,OAAqC,IAAvBD,GAAwCA,EACtDE,EAAejB,EAAMkB,SACrBC,EAAenB,EAAMmB,aACrBC,EAAepB,EAAMoB,aACrBC,EAAerB,EAAMsB,SACrBC,EAAQC,YAAyBxB,EAAO,CAAC,WAAY,UAAW,YAAa,sBAAuB,iBAAkB,kBAAmB,oBAAqB,oBAAqB,kBAAmB,mBAAoB,cAAe,WAAY,eAAgB,eAAgB,aAErRyB,EAAkBnC,WAAe,MACjCoC,EAAWD,EAAgB,GAC3BE,EAAcF,EAAgB,GAE9BG,EAAmBtC,WAAe,MAClCuC,EAAgBD,EAAiB,GACjCE,EAAmBF,EAAiB,GAEpCG,EAAUzC,SAAa,IACvB0C,EAAe1C,SAAa,IAC5B2C,EAAe3C,SAAa,IAE5B4C,EAAiBC,YAAc,CACjCC,WAAYnB,EACZoB,QAAS7B,EACT8B,KAAM,aAEJC,EAAkBC,YAAeN,EAAgB,GACjDhB,EAAWqB,EAAgB,GAC3BE,EAAmBF,EAAgB,GAEnCG,EAAkBP,YAAc,CAClCC,WAAYf,EACZgB,QAASzB,EACT0B,KAAM,aAEJK,EAAkBH,YAAeE,EAAiB,GAClDpB,EAAWqB,EAAgB,GAC3BC,EAAmBD,EAAgB,GAMnCE,EAAavD,eAAkB,SAAUwD,GAC3C,QAAOC,MAAMC,QAAQ9B,KAAsC,IAA1BA,EAAS+B,QAAQH,KACjD,CAAC5B,IACAgC,EAAa5D,eAAkB,SAAUwD,GAC3C,OAAOC,MAAMC,QAAQ1B,IAAsC,IAA1BA,EAAS2B,QAAQH,GAAaxB,IAAawB,IAC3E,CAACxB,IAcA6B,EAAc,SAAqBL,GACrC,IAAIM,EAAYnB,EAAaoB,QAAQJ,QAAQH,GAE7C,OAAmB,IAAfM,GAAoBA,EAAY,EAAInB,EAAaoB,QAAQzD,OACpDqC,EAAaoB,QAAQD,EAAY,GAGnC,MAGLE,EAAkB,SAAyBR,GAC7C,IAAIM,EAAYnB,EAAaoB,QAAQJ,QAAQH,GAE7C,OAAmB,IAAfM,GAAoBA,EAAY,GAAK,EAChCnB,EAAaoB,QAAQD,EAAY,GAGnC,MAGLG,GAAc,WAChB,OAAOtB,EAAaoB,QAAQpB,EAAaoB,QAAQzD,OAAS,IAGxD4D,GAAe,WACjB,OAAOvB,EAAaoB,QAAQ,IAmB1BI,GAAQ,SAAeX,GACrBA,IACFnB,EAAYmB,GACZhB,EAAiBgB,KAqHjBY,GAAmBpE,SAAa,MAChCqE,GAAwBrE,UAAa,GACrCsE,GAAwBtE,SAAa,IAErCuE,GAAyB,SAAgCC,EAAOC,GAClE,IAAIC,EAAO1C,EACP2C,EAAQF,EAAME,MACdC,EAAOH,EAAMG,KACbb,EAAUU,EAAMV,QAEfa,GAASb,KAI0C,IAApDO,GAAsBP,QAAQJ,QAAQI,KACxCO,GAAsBP,QAAU,IAG9BM,GAAsBN,SAC6B,IAAjDO,GAAsBP,QAAQJ,QAAQiB,IACxCF,EAAOA,EAAKG,QAAO,SAAUrB,GAC3B,OAAOA,IAAOmB,GAASnB,IAAOO,KAEhCO,GAAsBP,QAAUO,GAAsBP,QAAQc,QAAO,SAAUrB,GAC7E,OAAOA,IAAOmB,GAASnB,IAAOO,OAGhCW,EAAKI,KAAKF,GACVN,GAAsBP,QAAQe,KAAKF,KAGrCF,EAAKI,KAAKF,GACVN,GAAsBP,QAAQe,KAAKf,EAASa,IAG1C/C,GACFA,EAAa2C,EAAOE,GAGtBpB,EAAiBoB,KAGfK,GAAoB,SAA2BP,EAAOC,GACxD,IAAIC,EAAO1C,EACP2C,EAAQF,EAAME,MACdK,EAAMP,EAAMO,IAEZX,GAAsBN,UACxBW,EAAO1C,EAAS6C,QAAO,SAAUrB,GAC/B,OAAsD,IAA/Cc,GAAsBP,QAAQJ,QAAQH,OAIjD,IAAIyB,EAzLgB,SAAyBC,EAAGC,GAChD,IAAIC,EAASzC,EAAaoB,QAAQJ,QAAQuB,GACtCG,EAAS1C,EAAaoB,QAAQJ,QAAQwB,GACtCR,EAAQW,KAAKC,IAAIH,EAAQC,GACzBL,EAAMM,KAAKE,IAAIJ,EAAQC,GAC3B,OAAO1C,EAAaoB,QAAQ0B,MAAMd,EAAOK,EAAM,GAoLnCU,CAAgBf,EAAOK,GACnCV,GAAsBP,QAAUkB,EAChC,IAAIU,EAAcjB,EAAKkB,OAAOX,GAC9BU,EAAcA,EAAYd,QAAO,SAAUrB,EAAInD,GAC7C,OAAOsF,EAAYhC,QAAQH,KAAQnD,KAGjCwB,GACFA,EAAa2C,EAAOmB,GAGtBrC,EAAiBqC,IAGfE,GAAuB,SAA8BrB,EAAOsB,GAC9D,IAAIH,EAAc,GAGhBA,GAD+B,IAA7B3D,EAAS2B,QAAQmC,GACL9D,EAAS6C,QAAO,SAAUrB,GACtC,OAAOA,IAAOsC,KAGF,CAACA,GAAOF,OAAOG,YAAmB/D,IAG9CH,GACFA,EAAa2C,EAAOmB,GAGtBrC,EAAiBqC,IAGfK,GAAqB,SAA4BxB,EAAOsB,GAC1D,IAAIH,EAAcjE,EAAc,CAACoE,GAASA,EAEtCjE,GACFA,EAAa2C,EAAOmB,GAGtBrC,EAAiBqC,IAsBfM,GAAc,SAAqBzB,EAAOC,GAC5C,IAAIyB,EAAUC,UAAU7F,OAAS,QAAsB8F,IAAjBD,UAAU,IAAmBA,UAAU,GACzEE,EAAe5B,EAAME,MACrBA,OAAyB,IAAjB0B,EAA0BjC,GAAiBL,QAAUsC,EAC7DrB,EAAMP,EAAMO,IACZjB,EAAUU,EAAMV,QAgBpB,OAdImC,EACF3B,GAAuBC,EAAO,CAC5BG,MAAOA,EACPC,KAAMI,EACNjB,QAASA,IAGXgB,GAAkBP,EAAO,CACvBG,MAAOA,EACPK,IAAKA,IAITX,GAAsBN,SAAU,GACzB,GAmELuC,GAAmBtG,eAAkB,SAAUwD,GACjD,IAAI+C,EAAM9D,EAAQsB,QAAQP,GACtBiB,EAAQ,GAaZ,OAXI8B,IACF9B,EAAMK,KAAKtB,GAEP+C,EAAI3F,WACN6D,EAAMK,KAAK0B,MAAM/B,EAAOsB,YAAmBQ,EAAI3F,WAC/C2F,EAAI3F,SAAS6F,SAAQ,SAAUC,GAC7BjC,EAAMK,KAAK0B,MAAM/B,EAAOsB,YAAmBO,GAAiBI,UAK3DjC,IACN,IACCkC,GAAwB3G,eAAkB,SAAUwD,GACtD,IAAIiB,EAAQ6B,GAAiB9C,GAEzBoD,EAASC,YAAS,GAAIpE,EAAQsB,SAElCU,EAAMgC,SAAQ,SAAUC,GACtB,IAAIH,EAAMK,EAAOF,GAEjB,GAAIH,EAAK,CACP,GAAIA,EAAIO,OAAQ,CACd,IAAIC,EAAYH,EAAOL,EAAIO,QAE3B,GAAIC,GAAaA,EAAUnG,SAAU,CACnC,IAAIoG,EAAiBD,EAAUnG,SAASiE,QAAO,SAAUoC,GACvD,OAAOA,IAAMP,KAEfE,EAAOL,EAAIO,QAAUD,YAAS,GAAIE,EAAW,CAC3CnG,SAAUoG,YAKTJ,EAAOF,OAGlBjE,EAAQsB,QAAU6C,EAClBpE,GAAiB,SAAU0E,GACzB,OAAIA,IAAqB1D,EAChB,KAGF0D,OAER,CAACZ,KAMAa,GAAenH,SAAa,IAE5BoH,GAAmBpH,YAAe,GAClCqH,GAAqBD,GAAiB,GACtCE,GAAwBF,GAAiB,GAE7CpH,aAAgB,WACd,IAAIuH,EAAW,GACfvH,WAAeyG,QAAQ7F,GAAU,SAAU4G,GACrCxH,iBAAqBwH,IAAUA,EAAM9G,MAAM+G,QAC7CF,EAASzC,KAAK0C,EAAM9G,MAAM+G,WAjhBlC,SAAmBC,EAAMC,GACvB,GAAID,EAAKpH,SAAWqH,EAAKrH,OAAQ,OAAO,EAExC,IAAK,IAAID,EAAI,EAAGA,EAAIqH,EAAKpH,OAAQD,GAAK,EACpC,GAAIqH,EAAKrH,KAAOsH,EAAKtH,GAAI,OAAO,EAGlC,OAAO,EA8gBDuH,CAAUT,GAAapD,QAASwD,KAClC9E,EAAQsB,SAAS,GAAK,CACpB+C,OAAQ,KACRlG,SAAU2G,GAEZA,EAASd,SAAQ,SAAUjD,EAAIqE,GACf,IAAVA,GACFxF,EAAYmB,MAGhBb,EAAaoB,QAAUtB,EAAQsB,SAAS,GAAGnD,SAC3CuG,GAAapD,QAAUwD,EACvBD,IAAsB,MAEvB,CAAC1G,IACJZ,aAAgB,WAiBVqH,KACF1E,EAAaoB,QAjBI,SAAS+D,EAAarD,GAGvC,IAFA,IAAIsD,EAAO,GAEF1H,EAAI,EAAGA,EAAIoE,EAAMnE,OAAQD,GAAK,EAAG,CACxC,IAAI2H,EAAOvD,EAAMpE,GACjB0H,EAAKjD,KAAKkD,GACV,IAAIC,EAASxF,EAAQsB,QAAQiE,GAAMpH,SAE/B2C,EAAWyE,IAASC,IACtBF,EAAOA,EAAKnC,OAAOkC,EAAaG,KAIpC,OAAOF,EAIgBD,CAAarF,EAAQsB,SAAS,GAAGnD,aAEzD,CAACgB,EAAUyF,GAAoB9D,EAAY3C,IAE9C,IAAIsH,GAAgB,WAClB,OAAO,GAGT,OAAoBlI,gBAAoBD,IAAgBoI,SAAU,CAChErC,MAAO,CACLsC,MAAO,CACLrH,oBAAqBA,EACrBI,kBAAmBA,EACnBC,kBAAmBA,EACnBJ,eAAgBA,GAElBmD,MAAOA,GACPkE,eA3aiB,WACnB,OAAOlE,GAAMD,OA2aXoE,cAxagB,WAClB,OAAOnE,GAAMF,OAwaXsE,cArbgB,SAAuB/E,GACzC,OAAOW,GAAMN,EAAYL,KAqbvBgF,kBAlboB,SAA2BhF,GACjD,OAAOW,GAAMH,EAAgBR,KAkb3BiF,sBAvawB,SAA+BjF,EAAIpD,GAC7D,IAAIuE,EACAkD,EACAa,EAAgBtI,EAAKuI,cACrBC,EAAe,GACf1I,EAAa,GAEjB2I,OAAOC,KAAKpG,EAAaqB,SAAS0C,SAAQ,SAAUgB,GAClD,IAAIsB,EAAYrG,EAAaqB,QAAQ0D,GACjClB,EAAM9D,EAAQsB,QAAQ0D,KACZlB,EAAIO,QAASvD,EAAWgD,EAAIO,WAGxC8B,EAAa9D,KAAK2C,GAClBvH,EAAW4E,KAAKiE,QAIpBpE,EAAQiE,EAAajF,QAAQH,GAAM,KAErBf,EAAQsB,QAAQzD,SAC5BqE,EAAQ,IAMK,KAFfkD,EAAQ5H,EAAkBC,EAAYyE,EAAO+D,MAG3Cb,EAAQ5H,EAAkBC,EAAY,EAAGwI,IAIvCb,GAAS,GACX1D,GAAMyE,EAAaf,KAuYnBmB,kBAnWoB,SAA2BxE,EAAOhB,GACxD,IAEIyF,EAFA1C,EAAM9D,EAAQsB,QAAQP,GACtBsD,EAASrE,EAAQsB,QAAQwC,EAAIO,QAG7BA,EACFmC,EAAOnC,EAAOlG,SAASiE,QAAO,SAAU2C,GACtC,OAAQjE,EAAWiE,MAIrByB,EADoBxG,EAAQsB,SAAS,GAAGnD,SACnBiE,QAAO,SAAU6B,GACpC,OAAQnD,EAAWmD,MAIvB,IAAIwC,EAAc,GAAGtD,OAAOG,YAAmBnE,GAAWmE,YAAmBkD,IAC7E9F,EAAiB+F,GAEbpH,GACFA,EAAa0C,EAAO0E,IAgVpBC,gBAhYkB,SAAyB3E,GAC7C,IACI0E,EADApD,EAAQK,UAAU7F,OAAS,QAAsB8F,IAAjBD,UAAU,GAAmBA,UAAU,GAAK5D,GAG/C,IAA7BX,EAAS+B,QAAQmC,IACnBoD,EAActH,EAASiD,QAAO,SAAUrB,GACtC,OAAOA,IAAOsC,KAEhBzD,GAAY,SAAU+G,GACpB,IAAI7C,EAAM9D,EAAQsB,QAAQqF,GAE1B,OAAIA,IAAgB7C,GAAOA,EAAIO,OAASP,EAAIO,OAAOtD,GAAK,QAAUsC,EACzDA,EAGFsD,MAGTF,EAAc,CAACpD,GAAOF,OAAOG,YAAmBnE,IAG9CE,GACFA,EAAa0C,EAAO0E,GAGtB/F,EAAiB+F,IAwWf3F,WAAYA,EACZ8F,UAtfY,SAAmB7F,GACjC,OAAOjB,IAAkBiB,GAsfvBI,WAAYA,EACZ0F,WAAY9H,EAAmB0G,GA7OlB,SAAoB1D,EAAOhB,GAC1C,IAAI+F,EAAWpD,UAAU7F,OAAS,QAAsB8F,IAAjBD,UAAU,IAAmBA,UAAU,GAE9E,QAAI3C,IACE+F,EACF1D,GAAqBrB,EAAOhB,GAE5BwC,GAAmBxB,EAAOhB,GAG5BY,GAAiBL,QAAUP,EAC3Ba,GAAsBN,SAAU,EAChCO,GAAsBP,QAAU,IACzB,IAiOPkC,YAAazE,EAAmB0G,GAAgBjC,GAChDuD,eAAgBhI,EAAmB0G,GA5KlB,SAAwB1D,EAAOhB,GAClD,OAAOyC,GAAYzB,EAAO,CACxBQ,IAAKnB,EAAYL,GACjBO,QAASP,IACR,IAyKDiG,mBAAoBjI,EAAmB0G,GAtKlB,SAA4B1D,EAAOhB,GAC1D,OAAOyC,GAAYzB,EAAO,CACxBQ,IAAKhB,EAAgBR,GACrBO,QAASP,IACR,IAmKDkG,mBAAoBlI,EAAmB0G,GAtMlB,SAA4B1D,EAAOhB,GACrDY,GAAiBL,UACpBK,GAAiBL,QAAUP,GAG7B,IAAImB,EAAQN,GAAsBN,QAAUK,GAAiBL,QAAUP,EACvE,OAAOyC,GAAYzB,EAAO,CACxBG,MAAOA,EACPK,IAAKd,QA+LLyF,kBAAmBnI,EAAmB0G,GA3LlB,SAA2B1D,EAAOhB,GACnDY,GAAiBL,UACpBK,GAAiBL,QAAUP,GAG7B,IAAImB,EAAQN,GAAsBN,QAAUK,GAAiBL,QAAUP,EACvE,OAAOyC,GAAYzB,EAAO,CACxBG,MAAOA,EACPK,IAAKf,QAoLL2F,eAAgBpI,EAAmB0G,GAlKlB,SAAwB1D,GAC3C,OAAOyB,GAAYzB,EAAO,CACxBG,MAAOT,KACPc,IAAKf,QAgKL4F,WAngBa,SAAoBrG,GACnC,OAAOpB,IAAaoB,GAmgBlB9B,YAAaA,EACboI,UA7dY,SAAmBtG,GACjC,OAAOf,EAAQsB,QAAQP,GAAIsD,QA6dzBiD,aAxFe,SAAsBvG,EAAIuF,GAC3CrG,EAAaqB,QAAQP,GAAMuF,GAwFzBiB,iBA5JmB,SAA0BxG,EAAIyG,GACnD,IAAIC,EAAazH,EAAQsB,QAAQP,GACjCf,EAAQsB,QAAQP,GAAMqD,YAAS,GAAIqD,EAAY,CAC7CtJ,SAAUqJ,EACVzG,GAAIA,IAENyG,EAAYxD,SAAQ,SAAU0D,GAC5B,IAAIC,EAAkB3H,EAAQsB,QAAQoG,GACtC1H,EAAQsB,QAAQoG,GAAWtD,YAAS,GAAIuD,EAAiB,CACvDtD,OAAQtD,EACRA,GAAI2G,QAmJNxD,sBAAuBA,KAEX3G,gBAAoB,KAAM6G,YAAS,CACjDwD,KAAM,OACN,uBAAwB3I,EACxBZ,UAAWwJ,YAAKzJ,EAAQ0J,KAAMzJ,GAC9BH,IAAKA,GACJsB,GAAQrB,OA+FE4J,gBA5sBK,CAElBD,KAAM,CACJE,QAAS,EACTC,OAAQ,EACRC,UAAW,SAusBmB,CAChC3H,KAAM,eADOwH,CAEZ/J,I,kCCxtBH,iGAyFImK,EAAW5K,cAAiB,SAAkBU,EAAOC,GACvD,IAAIC,EAAWF,EAAME,SACjBC,EAAUH,EAAMG,QAChBC,EAAYJ,EAAMI,UAClB+J,EAAenK,EAAMmK,aACrBC,EAAUpK,EAAMoK,QAChBC,EAAarK,EAAMqK,WACnBC,EAAWtK,EAAMuK,KACjBC,EAAQxK,EAAMwK,MACdzD,EAAS/G,EAAM+G,OACf0D,EAAUzK,EAAMyK,QAChBC,EAAU1K,EAAM0K,QAChBC,EAAY3K,EAAM2K,UAClBC,EAAc5K,EAAM4K,YACpBC,EAAwB7K,EAAM8K,oBAC9BA,OAAgD,IAA1BD,EAAmCE,IAAWF,EACpEG,EAAkBhL,EAAMgL,gBACxBzJ,EAAQC,YAAyBxB,EAAO,CAAC,WAAY,UAAW,YAAa,eAAgB,UAAW,aAAc,OAAQ,QAAS,SAAU,UAAW,UAAW,YAAa,cAAe,sBAAuB,oBAE1NiL,EAAoB3L,aAAiBD,KACrC6L,EAAeD,EAAkBvD,MACjCjE,EAAQwH,EAAkBxH,MAC1BkE,EAAiBsD,EAAkBtD,eACnCC,EAAgBqD,EAAkBrD,cAClCC,EAAgBoD,EAAkBpD,cAClCC,EAAoBmD,EAAkBnD,kBACtCC,EAAwBkD,EAAkBlD,sBAC1Ca,EAAaqC,EAAkBrC,WAC/BrD,EAAc0F,EAAkB1F,YAChCuD,EAAiBmC,EAAkBnC,eACnCC,EAAqBkC,EAAkBlC,mBACvCC,EAAqBiC,EAAkBjC,mBACvCC,EAAoBgC,EAAkBhC,kBACtCC,EAAiB+B,EAAkB/B,eACnCZ,EAAoB2C,EAAkB3C,kBACtCG,EAAkBwC,EAAkBxC,gBACpC5F,EAAaoI,EAAkBpI,WAC/B8F,EAAYsC,EAAkBtC,UAC9BzF,EAAa+H,EAAkB/H,WAC/BiG,EAAa8B,EAAkB9B,WAC/BnI,EAAciK,EAAkBjK,YAChCoI,EAAY6B,EAAkB7B,UAC9BC,EAAe4B,EAAkB5B,aACjCC,EAAmB2B,EAAkB3B,iBACrCrD,EAAwBgF,EAAkBhF,sBAE1CkF,GAAU7L,SAAa,MACvB8L,GAAa9L,SAAa,MAC1B+L,GAAYC,YAAWH,GAASlL,GAChCsK,GAAOD,EACPiB,GAAaC,QAAQzI,MAAMC,QAAQ9C,GAAYA,EAASN,OAASM,GACjEgB,KAAW2B,GAAaA,EAAWkE,GACnC0E,KAAU9C,GAAYA,EAAU5B,GAChCrF,KAAWyH,GAAaA,EAAWpC,GACnCzF,KAAW4B,GAAaA,EAAW6D,GACnCW,GAAQwD,GAAgB,GACxBQ,GAAQC,cAEPpB,KACCgB,IAIAhB,GAHGrJ,GAGIiJ,GAAgBzC,GAAMrH,oBAFtBgK,GAAc3C,GAAMjH,qBAM3B8J,GAAO7C,GAAMhH,mBAGf6J,GAAOH,GAAW1C,GAAMpH,gBAI5B,IA2NIsL,GArLAC,GAAkB,SAAyB/H,GAS7C,OARIyH,KACErK,GACF2G,EAAcd,GAEd0B,EAAgB3E,KAIb,GAGLgI,GAAsB,SAA6BhI,GACrD,GAAI5C,GAEF,OADAuH,EAAgB3E,EAAOiD,IAChB,EAGT,IAAIX,EAASgD,EAAUrC,GAEvB,QAAIX,IACF3C,EAAM2C,IACC,IAwKX,OAvCA9G,aAAgB,WACd,GAAIgK,EAAkB,CACpB,IAAIzC,EAAW,GACfvH,WAAeyG,QAAQ7F,GAAU,SAAU4G,GACrCxH,iBAAqBwH,IAAUA,EAAM9G,MAAM+G,QAC7CF,EAASzC,KAAK0C,EAAM9G,MAAM+G,WAG9BuC,EAAiBvC,EAAQF,MAE1B,CAAC3G,EAAU6G,EAAQuC,IACtBhK,aAAgB,WACd,GAAI2G,EACF,OAAO,WACLA,EAAsBc,MAKzB,CAACA,EAAQd,IACZ3G,aAAgB,WACV+J,GAAgBmB,GAClBnB,EAAatC,EAAQqE,GAAW/H,QAAQ0I,YAAYC,UAAU,EAAG,GAAG/D,iBAErE,CAACoB,EAActC,EAAQyD,IAC1BlL,aAAgB,WACVmM,IACFN,GAAQ9H,QAAQI,UAEjB,CAACgI,KAGAzK,EACF4K,GAAetK,GACNA,KAETsK,IAAe,GAGGtM,gBAAoB,KAAM6G,YAAS,CACrD/F,UAAWwJ,YAAKzJ,EAAQ0J,KAAMzJ,EAAWc,IAAYf,EAAQe,SAAUI,IAAYnB,EAAQmB,UAC3FqI,KAAM,WACNgB,UArKkB,SAAuB7G,GACzC,IAAImI,GAAO,EACPC,EAAMpI,EAAMoI,IAEhB,IAAIpI,EAAMqI,QAAUrI,EAAMsI,gBAAkBtI,EAAMuI,OAAlD,CAIA,IAxJqDC,EAwJjDC,EAAczI,EAAM0I,SAAW1I,EAAM2I,QAEzC,OAAQP,GACN,IAAK,IACCf,GAAQ9H,UAAYS,EAAMsI,gBAE1BH,EADEjL,GAAe8C,EAAM4I,SAChBnH,EAAYzB,EAAO,CACxBQ,IAAKyC,IAEE/F,EACF4H,EAAW9E,EAAOiD,GAAQ,GAE1B6B,EAAW9E,EAAOiD,IAI7BjD,EAAM6I,kBACN,MAEF,IAAK,QACCxB,GAAQ9H,UAAYS,EAAMsI,eAAiBb,KAC7C9C,EAAgB3E,GAChBmI,GAAO,GAGTnI,EAAM6I,kBACN,MAEF,IAAK,YACC3L,GAAe8C,EAAM4I,UACvB5D,EAAehF,EAAOiD,GAGxBc,EAAcd,GACdkF,GAAO,EACP,MAEF,IAAK,UACCjL,GAAe8C,EAAM4I,UACvB3D,EAAmBjF,EAAOiD,GAG5Be,EAAkBf,GAClBkF,GAAO,EACP,MAEF,IAAK,aAEDA,EADsB,QAApBP,GAAMkB,UACDd,GAAoBhI,GAEpB+H,GAAgB/H,GAGzB,MAEF,IAAK,YAEDmI,EADsB,QAApBP,GAAMkB,UACDf,GAAgB/H,GAEhBgI,GAAoBhI,GAG7B,MAEF,IAAK,OACC9C,GAAeuL,GAAezI,EAAM4I,UACtC1D,EAAmBlF,EAAOiD,GAG5BY,IACAsE,GAAO,EACP,MAEF,IAAK,MACCjL,GAAeuL,GAAezI,EAAM4I,UACtCzD,EAAkBnF,EAAOiD,GAG3Ba,IACAqE,GAAO,EACP,MAEF,QACc,MAARC,GACF5D,EAAkBxE,EAAOiD,GACzBkF,GAAO,GACEjL,GAAeuL,GAAqC,MAAtBL,EAAIjE,cAC3CgE,EAAO/C,EAAepF,IACZyI,IAAgBzI,EAAM4I,YAhPeJ,EAgPkBJ,IA/O5C,IAAfI,EAAI1M,QAAgB0M,EAAIO,MAAM,SAgPpC9E,EAAsBhB,EAAQmF,GAC9BD,GAAO,GAKTA,IACFnI,EAAMgJ,iBACNhJ,EAAM6I,mBAGJhC,GACFA,EAAU7G,KAyDZ4G,QArDgB,SAAqB5G,GAChC2H,IAAW3H,EAAMsI,gBAAkBtI,EAAMuI,QAC5C5I,EAAMsD,GAGJ2D,GACFA,EAAQ5G,IAgDV,gBAAiByH,GAAarK,GAAW,KACzC,gBAAiB0K,GACjB3L,IAAKoL,GACL0B,SAAUrL,GAAW,GAAK,GACzBH,GAAqBjC,gBAAoB,MAAO,CACjDc,UAAWD,EAAQ6M,QACnBvC,QA/OgB,SAAqB3G,GAChC2H,IACHhI,EAAMsD,GAGR,IAAI8B,EAAW7H,IAAgB8C,EAAM4I,UAAY5I,EAAM0I,SAAW1I,EAAM2I,UAEpElB,IAAgB1C,GAAYhG,EAAWkE,IACzC0B,EAAgB3E,EAAOiD,GAGrB8B,EACE/E,EAAM4I,SACRnH,EAAYzB,EAAO,CACjBQ,IAAKyC,IAGP6B,EAAW9E,EAAOiD,GAAQ,GAG5B6B,EAAW9E,EAAOiD,GAGhB0D,GACFA,EAAQ3G,IAwNV8G,YApNoB,SAAyB9G,IACzCA,EAAM4I,UAAY5I,EAAM0I,SAAW1I,EAAM2I,UAC3C3I,EAAMgJ,iBAGJlC,GACFA,EAAY9G,IA+Md7D,IAAKmL,IACS9L,gBAAoB,MAAO,CACzCc,UAAWD,EAAQ8M,eAClB1C,IAAoBjL,gBAAoB4N,IAAY,CACrDC,UAAW,MACX/M,UAAWD,EAAQqK,OAClBA,IAAStK,GAAyBZ,gBAAoBwL,EAAqB3E,YAAS,CACrFiH,eAAe,EACfhN,UAAWD,EAAQkN,MACnBC,GAAIpM,GACJiM,UAAW,KACXxD,KAAM,SACLqB,GAAkB9K,OAqFR4J,iBAzeK,SAAgB4B,GAClC,MAAO,CAEL7B,KAAM,CACJI,UAAW,OACXD,OAAQ,EACRD,QAAS,EACTwD,QAAS,EACTC,wBAAyB,cACzB,4BAA6B,CAC3BC,gBAAiB/B,EAAMgC,QAAQC,OAAOC,OAExC,+BAAgC,CAC9BH,gBAAiBI,YAAKnC,EAAMgC,QAAQI,QAAQC,KAAMrC,EAAMgC,QAAQC,OAAOK,kBAEzE,yEAA0E,CACxEP,gBAAiBI,YAAKnC,EAAMgC,QAAQI,QAAQC,KAAMrC,EAAMgC,QAAQC,OAAOK,gBAAkBtC,EAAMgC,QAAQC,OAAOM,cAE9G,uBAAwB,CACtBR,gBAAiB,iBAMvBvM,SAAU,GAGVI,SAAU,GAGV+L,MAAO,CACLrD,OAAQ,EACRD,QAAS,EACTmE,WAAY,IAIdlB,QAAS,CACPmB,MAAO,OACPC,QAAS,OACTC,WAAY,SACZC,OAAQ,WAIVrB,cAAe,CACbsB,YAAa,EACbJ,MAAO,GACPC,QAAS,OACTI,WAAY,EACZC,eAAgB,SAChB,QAAS,CACPC,SAAU,KAKdlE,MAAO,CACL2D,MAAO,OACPQ,YAAa,EACbC,SAAU,WACV,UAAW,CACTnB,gBAAiB/B,EAAMgC,QAAQC,OAAOC,MAEtC,uBAAwB,CACtBH,gBAAiB,oBAuaO,CAChCnL,KAAM,eADOwH,CAEZI,I,iCCvfH,uDAaI2E,EAAOvP,cAAiB,SAAcU,EAAOC,GAC/C,IAAIE,EAAUH,EAAMG,QAChBC,EAAYJ,EAAMI,UAClB0O,EAAgB9O,EAAM+O,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CvN,EAAQC,YAAyBxB,EAAO,CAAC,UAAW,YAAa,WAErE,OAAoBV,gBAAoB0P,IAAO7I,YAAS,CACtD/F,UAAWwJ,YAAKzJ,EAAQ0J,KAAMzJ,GAC9B6O,UAAWF,EAAS,EAAI,EACxB9O,IAAKA,GACJsB,OA6BUuI,gBA9CK,CAElBD,KAAM,CACJqF,SAAU,WA2CoB,CAChC5M,KAAM,WADOwH,CAEZ+E","file":"static/js/6.f5fc4252.chunk.js","sourcesContent":["import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar TreeViewContext = React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  TreeViewContext.displayName = 'TreeViewContext';\n}\n\nexport default TreeViewContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport TreeViewContext from './TreeViewContext';\nimport { withStyles } from '@material-ui/core/styles';\nimport { useControlled } from '@material-ui/core/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  }\n};\n\nfunction arrayDiff(arr1, arr2) {\n  if (arr1.length !== arr2.length) return true;\n\n  for (var i = 0; i < arr1.length; i += 1) {\n    if (arr1[i] !== arr2[i]) return true;\n  }\n\n  return false;\n}\n\nvar findNextFirstChar = function findNextFirstChar(firstChars, startIndex, char) {\n  for (var i = startIndex; i < firstChars.length; i += 1) {\n    if (char === firstChars[i]) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\nvar defaultExpandedDefault = [];\nvar defaultSelectedDefault = [];\nvar TreeView = React.forwardRef(function TreeView(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      defaultCollapseIcon = props.defaultCollapseIcon,\n      defaultEndIcon = props.defaultEndIcon,\n      _props$defaultExpande = props.defaultExpanded,\n      defaultExpanded = _props$defaultExpande === void 0 ? defaultExpandedDefault : _props$defaultExpande,\n      defaultExpandIcon = props.defaultExpandIcon,\n      defaultParentIcon = props.defaultParentIcon,\n      _props$defaultSelecte = props.defaultSelected,\n      defaultSelected = _props$defaultSelecte === void 0 ? defaultSelectedDefault : _props$defaultSelecte,\n      _props$disableSelecti = props.disableSelection,\n      disableSelection = _props$disableSelecti === void 0 ? false : _props$disableSelecti,\n      _props$multiSelect = props.multiSelect,\n      multiSelect = _props$multiSelect === void 0 ? false : _props$multiSelect,\n      expandedProp = props.expanded,\n      onNodeSelect = props.onNodeSelect,\n      onNodeToggle = props.onNodeToggle,\n      selectedProp = props.selected,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"defaultCollapseIcon\", \"defaultEndIcon\", \"defaultExpanded\", \"defaultExpandIcon\", \"defaultParentIcon\", \"defaultSelected\", \"disableSelection\", \"multiSelect\", \"expanded\", \"onNodeSelect\", \"onNodeToggle\", \"selected\"]);\n\n  var _React$useState = React.useState(null),\n      tabbable = _React$useState[0],\n      setTabbable = _React$useState[1];\n\n  var _React$useState2 = React.useState(null),\n      focusedNodeId = _React$useState2[0],\n      setFocusedNodeId = _React$useState2[1];\n\n  var nodeMap = React.useRef({});\n  var firstCharMap = React.useRef({});\n  var visibleNodes = React.useRef([]);\n\n  var _useControlled = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'TreeView'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      expanded = _useControlled2[0],\n      setExpandedState = _useControlled2[1];\n\n  var _useControlled3 = useControlled({\n    controlled: selectedProp,\n    default: defaultSelected,\n    name: 'TreeView'\n  }),\n      _useControlled4 = _slicedToArray(_useControlled3, 2),\n      selected = _useControlled4[0],\n      setSelectedState = _useControlled4[1];\n  /*\n   * Status Helpers\n   */\n\n\n  var isExpanded = React.useCallback(function (id) {\n    return Array.isArray(expanded) ? expanded.indexOf(id) !== -1 : false;\n  }, [expanded]);\n  var isSelected = React.useCallback(function (id) {\n    return Array.isArray(selected) ? selected.indexOf(id) !== -1 : selected === id;\n  }, [selected]);\n\n  var isTabbable = function isTabbable(id) {\n    return tabbable === id;\n  };\n\n  var isFocused = function isFocused(id) {\n    return focusedNodeId === id;\n  };\n  /*\n   * Node Helpers\n   */\n\n\n  var getNextNode = function getNextNode(id) {\n    var nodeIndex = visibleNodes.current.indexOf(id);\n\n    if (nodeIndex !== -1 && nodeIndex + 1 < visibleNodes.current.length) {\n      return visibleNodes.current[nodeIndex + 1];\n    }\n\n    return null;\n  };\n\n  var getPreviousNode = function getPreviousNode(id) {\n    var nodeIndex = visibleNodes.current.indexOf(id);\n\n    if (nodeIndex !== -1 && nodeIndex - 1 >= 0) {\n      return visibleNodes.current[nodeIndex - 1];\n    }\n\n    return null;\n  };\n\n  var getLastNode = function getLastNode() {\n    return visibleNodes.current[visibleNodes.current.length - 1];\n  };\n\n  var getFirstNode = function getFirstNode() {\n    return visibleNodes.current[0];\n  };\n\n  var getParent = function getParent(id) {\n    return nodeMap.current[id].parent;\n  };\n\n  var getNodesInRange = function getNodesInRange(a, b) {\n    var aIndex = visibleNodes.current.indexOf(a);\n    var bIndex = visibleNodes.current.indexOf(b);\n    var start = Math.min(aIndex, bIndex);\n    var end = Math.max(aIndex, bIndex);\n    return visibleNodes.current.slice(start, end + 1);\n  };\n  /*\n   * Focus Helpers\n   */\n\n\n  var focus = function focus(id) {\n    if (id) {\n      setTabbable(id);\n      setFocusedNodeId(id);\n    }\n  };\n\n  var focusNextNode = function focusNextNode(id) {\n    return focus(getNextNode(id));\n  };\n\n  var focusPreviousNode = function focusPreviousNode(id) {\n    return focus(getPreviousNode(id));\n  };\n\n  var focusFirstNode = function focusFirstNode() {\n    return focus(getFirstNode());\n  };\n\n  var focusLastNode = function focusLastNode() {\n    return focus(getLastNode());\n  };\n\n  var focusByFirstCharacter = function focusByFirstCharacter(id, char) {\n    var start;\n    var index;\n    var lowercaseChar = char.toLowerCase();\n    var firstCharIds = [];\n    var firstChars = []; // This really only works since the ids are strings\n\n    Object.keys(firstCharMap.current).forEach(function (nodeId) {\n      var firstChar = firstCharMap.current[nodeId];\n      var map = nodeMap.current[nodeId];\n      var visible = map.parent ? isExpanded(map.parent) : true;\n\n      if (visible) {\n        firstCharIds.push(nodeId);\n        firstChars.push(firstChar);\n      }\n    }); // Get start index for search based on position of currentItem\n\n    start = firstCharIds.indexOf(id) + 1;\n\n    if (start === nodeMap.current.length) {\n      start = 0;\n    } // Check remaining slots in the menu\n\n\n    index = findNextFirstChar(firstChars, start, lowercaseChar); // If not found in remaining slots, check from beginning\n\n    if (index === -1) {\n      index = findNextFirstChar(firstChars, 0, lowercaseChar);\n    } // If match was found...\n\n\n    if (index > -1) {\n      focus(firstCharIds[index]);\n    }\n  };\n  /*\n   * Expansion Helpers\n   */\n\n\n  var toggleExpansion = function toggleExpansion(event) {\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : focusedNodeId;\n    var newExpanded;\n\n    if (expanded.indexOf(value) !== -1) {\n      newExpanded = expanded.filter(function (id) {\n        return id !== value;\n      });\n      setTabbable(function (oldTabbable) {\n        var map = nodeMap.current[oldTabbable];\n\n        if (oldTabbable && (map && map.parent ? map.parent.id : null) === value) {\n          return value;\n        }\n\n        return oldTabbable;\n      });\n    } else {\n      newExpanded = [value].concat(_toConsumableArray(expanded));\n    }\n\n    if (onNodeToggle) {\n      onNodeToggle(event, newExpanded);\n    }\n\n    setExpandedState(newExpanded);\n  };\n\n  var expandAllSiblings = function expandAllSiblings(event, id) {\n    var map = nodeMap.current[id];\n    var parent = nodeMap.current[map.parent];\n    var diff;\n\n    if (parent) {\n      diff = parent.children.filter(function (child) {\n        return !isExpanded(child);\n      });\n    } else {\n      var topLevelNodes = nodeMap.current[-1].children;\n      diff = topLevelNodes.filter(function (node) {\n        return !isExpanded(node);\n      });\n    }\n\n    var newExpanded = [].concat(_toConsumableArray(expanded), _toConsumableArray(diff));\n    setExpandedState(newExpanded);\n\n    if (onNodeToggle) {\n      onNodeToggle(event, newExpanded);\n    }\n  };\n  /*\n   * Selection Helpers\n   */\n\n\n  var lastSelectedNode = React.useRef(null);\n  var lastSelectionWasRange = React.useRef(false);\n  var currentRangeSelection = React.useRef([]);\n\n  var handleRangeArrowSelect = function handleRangeArrowSelect(event, nodes) {\n    var base = selected;\n    var start = nodes.start,\n        next = nodes.next,\n        current = nodes.current;\n\n    if (!next || !current) {\n      return;\n    }\n\n    if (currentRangeSelection.current.indexOf(current) === -1) {\n      currentRangeSelection.current = [];\n    }\n\n    if (lastSelectionWasRange.current) {\n      if (currentRangeSelection.current.indexOf(next) !== -1) {\n        base = base.filter(function (id) {\n          return id === start || id !== current;\n        });\n        currentRangeSelection.current = currentRangeSelection.current.filter(function (id) {\n          return id === start || id !== current;\n        });\n      } else {\n        base.push(next);\n        currentRangeSelection.current.push(next);\n      }\n    } else {\n      base.push(next);\n      currentRangeSelection.current.push(current, next);\n    }\n\n    if (onNodeSelect) {\n      onNodeSelect(event, base);\n    }\n\n    setSelectedState(base);\n  };\n\n  var handleRangeSelect = function handleRangeSelect(event, nodes) {\n    var base = selected;\n    var start = nodes.start,\n        end = nodes.end; // If last selection was a range selection ignore nodes that were selected.\n\n    if (lastSelectionWasRange.current) {\n      base = selected.filter(function (id) {\n        return currentRangeSelection.current.indexOf(id) === -1;\n      });\n    }\n\n    var range = getNodesInRange(start, end);\n    currentRangeSelection.current = range;\n    var newSelected = base.concat(range);\n    newSelected = newSelected.filter(function (id, i) {\n      return newSelected.indexOf(id) === i;\n    });\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  var handleMultipleSelect = function handleMultipleSelect(event, value) {\n    var newSelected = [];\n\n    if (selected.indexOf(value) !== -1) {\n      newSelected = selected.filter(function (id) {\n        return id !== value;\n      });\n    } else {\n      newSelected = [value].concat(_toConsumableArray(selected));\n    }\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  var handleSingleSelect = function handleSingleSelect(event, value) {\n    var newSelected = multiSelect ? [value] : value;\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  var selectNode = function selectNode(event, id) {\n    var multiple = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (id) {\n      if (multiple) {\n        handleMultipleSelect(event, id);\n      } else {\n        handleSingleSelect(event, id);\n      }\n\n      lastSelectedNode.current = id;\n      lastSelectionWasRange.current = false;\n      currentRangeSelection.current = [];\n      return true;\n    }\n\n    return false;\n  };\n\n  var selectRange = function selectRange(event, nodes) {\n    var stacked = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var _nodes$start = nodes.start,\n        start = _nodes$start === void 0 ? lastSelectedNode.current : _nodes$start,\n        end = nodes.end,\n        current = nodes.current;\n\n    if (stacked) {\n      handleRangeArrowSelect(event, {\n        start: start,\n        next: end,\n        current: current\n      });\n    } else {\n      handleRangeSelect(event, {\n        start: start,\n        end: end\n      });\n    }\n\n    lastSelectionWasRange.current = true;\n    return true;\n  };\n\n  var rangeSelectToFirst = function rangeSelectToFirst(event, id) {\n    if (!lastSelectedNode.current) {\n      lastSelectedNode.current = id;\n    }\n\n    var start = lastSelectionWasRange.current ? lastSelectedNode.current : id;\n    return selectRange(event, {\n      start: start,\n      end: getFirstNode()\n    });\n  };\n\n  var rangeSelectToLast = function rangeSelectToLast(event, id) {\n    if (!lastSelectedNode.current) {\n      lastSelectedNode.current = id;\n    }\n\n    var start = lastSelectionWasRange.current ? lastSelectedNode.current : id;\n    return selectRange(event, {\n      start: start,\n      end: getLastNode()\n    });\n  };\n\n  var selectNextNode = function selectNextNode(event, id) {\n    return selectRange(event, {\n      end: getNextNode(id),\n      current: id\n    }, true);\n  };\n\n  var selectPreviousNode = function selectPreviousNode(event, id) {\n    return selectRange(event, {\n      end: getPreviousNode(id),\n      current: id\n    }, true);\n  };\n\n  var selectAllNodes = function selectAllNodes(event) {\n    return selectRange(event, {\n      start: getFirstNode(),\n      end: getLastNode()\n    });\n  };\n  /*\n   * Mapping Helpers\n   */\n\n\n  var addNodeToNodeMap = function addNodeToNodeMap(id, childrenIds) {\n    var currentMap = nodeMap.current[id];\n    nodeMap.current[id] = _extends({}, currentMap, {\n      children: childrenIds,\n      id: id\n    });\n    childrenIds.forEach(function (childId) {\n      var currentChildMap = nodeMap.current[childId];\n      nodeMap.current[childId] = _extends({}, currentChildMap, {\n        parent: id,\n        id: childId\n      });\n    });\n  };\n\n  var getNodesToRemove = React.useCallback(function (id) {\n    var map = nodeMap.current[id];\n    var nodes = [];\n\n    if (map) {\n      nodes.push(id);\n\n      if (map.children) {\n        nodes.push.apply(nodes, _toConsumableArray(map.children));\n        map.children.forEach(function (node) {\n          nodes.push.apply(nodes, _toConsumableArray(getNodesToRemove(node)));\n        });\n      }\n    }\n\n    return nodes;\n  }, []);\n  var removeNodeFromNodeMap = React.useCallback(function (id) {\n    var nodes = getNodesToRemove(id);\n\n    var newMap = _extends({}, nodeMap.current);\n\n    nodes.forEach(function (node) {\n      var map = newMap[node];\n\n      if (map) {\n        if (map.parent) {\n          var parentMap = newMap[map.parent];\n\n          if (parentMap && parentMap.children) {\n            var parentChildren = parentMap.children.filter(function (c) {\n              return c !== node;\n            });\n            newMap[map.parent] = _extends({}, parentMap, {\n              children: parentChildren\n            });\n          }\n        }\n\n        delete newMap[node];\n      }\n    });\n    nodeMap.current = newMap;\n    setFocusedNodeId(function (oldFocusedNodeId) {\n      if (oldFocusedNodeId === id) {\n        return null;\n      }\n\n      return oldFocusedNodeId;\n    });\n  }, [getNodesToRemove]);\n\n  var mapFirstChar = function mapFirstChar(id, firstChar) {\n    firstCharMap.current[id] = firstChar;\n  };\n\n  var prevChildIds = React.useRef([]);\n\n  var _React$useState3 = React.useState(false),\n      childrenCalculated = _React$useState3[0],\n      setChildrenCalculated = _React$useState3[1];\n\n  React.useEffect(function () {\n    var childIds = [];\n    React.Children.forEach(children, function (child) {\n      if (React.isValidElement(child) && child.props.nodeId) {\n        childIds.push(child.props.nodeId);\n      }\n    });\n\n    if (arrayDiff(prevChildIds.current, childIds)) {\n      nodeMap.current[-1] = {\n        parent: null,\n        children: childIds\n      };\n      childIds.forEach(function (id, index) {\n        if (index === 0) {\n          setTabbable(id);\n        }\n      });\n      visibleNodes.current = nodeMap.current[-1].children;\n      prevChildIds.current = childIds;\n      setChildrenCalculated(true);\n    }\n  }, [children]);\n  React.useEffect(function () {\n    var buildVisible = function buildVisible(nodes) {\n      var list = [];\n\n      for (var i = 0; i < nodes.length; i += 1) {\n        var item = nodes[i];\n        list.push(item);\n        var childs = nodeMap.current[item].children;\n\n        if (isExpanded(item) && childs) {\n          list = list.concat(buildVisible(childs));\n        }\n      }\n\n      return list;\n    };\n\n    if (childrenCalculated) {\n      visibleNodes.current = buildVisible(nodeMap.current[-1].children);\n    }\n  }, [expanded, childrenCalculated, isExpanded, children]);\n\n  var noopSelection = function noopSelection() {\n    return false;\n  };\n\n  return /*#__PURE__*/React.createElement(TreeViewContext.Provider, {\n    value: {\n      icons: {\n        defaultCollapseIcon: defaultCollapseIcon,\n        defaultExpandIcon: defaultExpandIcon,\n        defaultParentIcon: defaultParentIcon,\n        defaultEndIcon: defaultEndIcon\n      },\n      focus: focus,\n      focusFirstNode: focusFirstNode,\n      focusLastNode: focusLastNode,\n      focusNextNode: focusNextNode,\n      focusPreviousNode: focusPreviousNode,\n      focusByFirstCharacter: focusByFirstCharacter,\n      expandAllSiblings: expandAllSiblings,\n      toggleExpansion: toggleExpansion,\n      isExpanded: isExpanded,\n      isFocused: isFocused,\n      isSelected: isSelected,\n      selectNode: disableSelection ? noopSelection : selectNode,\n      selectRange: disableSelection ? noopSelection : selectRange,\n      selectNextNode: disableSelection ? noopSelection : selectNextNode,\n      selectPreviousNode: disableSelection ? noopSelection : selectPreviousNode,\n      rangeSelectToFirst: disableSelection ? noopSelection : rangeSelectToFirst,\n      rangeSelectToLast: disableSelection ? noopSelection : rangeSelectToLast,\n      selectAllNodes: disableSelection ? noopSelection : selectAllNodes,\n      isTabbable: isTabbable,\n      multiSelect: multiSelect,\n      getParent: getParent,\n      mapFirstChar: mapFirstChar,\n      addNodeToNodeMap: addNodeToNodeMap,\n      removeNodeFromNodeMap: removeNodeFromNodeMap\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", _extends({\n    role: \"tree\",\n    \"aria-multiselectable\": multiSelect,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? TreeView.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The default icon used to collapse the node.\n   */\n  defaultCollapseIcon: PropTypes.node,\n\n  /**\n   * The default icon displayed next to a end node. This is applied to all\n   * tree nodes and can be overridden by the TreeItem `icon` prop.\n   */\n  defaultEndIcon: PropTypes.node,\n\n  /**\n   * Expanded node ids. (Uncontrolled)\n   */\n  defaultExpanded: PropTypes.arrayOf(PropTypes.string),\n\n  /**\n   * The default icon used to expand the node.\n   */\n  defaultExpandIcon: PropTypes.node,\n\n  /**\n   * The default icon displayed next to a parent node. This is applied to all\n   * parent nodes and can be overridden by the TreeItem `icon` prop.\n   */\n  defaultParentIcon: PropTypes.node,\n\n  /**\n   * Selected node ids. (Uncontrolled)\n   * When `multiSelect` is true this takes an array of strings; when false (default) a string.\n   */\n  defaultSelected: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.string]),\n\n  /**\n   * If `true` selection is disabled.\n   */\n  disableSelection: PropTypes.bool,\n\n  /**\n   * Expanded node ids. (Controlled)\n   */\n  expanded: PropTypes.arrayOf(PropTypes.string),\n\n  /**\n   * If true `ctrl` and `shift` will trigger multiselect.\n   */\n  multiSelect: PropTypes.bool,\n\n  /**\n   * Callback fired when tree items are selected/unselected.\n   *\n   * @param {object} event The event source of the callback\n   * @param {(array|string)} value of the selected nodes. When `multiSelect` is true\n   * this is an array of strings; when false (default) a string.\n   */\n  onNodeSelect: PropTypes.func,\n\n  /**\n   * Callback fired when tree items are expanded/collapsed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {array} nodeIds The ids of the expanded nodes.\n   */\n  onNodeToggle: PropTypes.func,\n\n  /**\n   * Selected node ids. (Controlled)\n   * When `multiSelect` is true this takes an array of strings; when false (default) a string.\n   */\n  selected: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTreeView'\n})(TreeView);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\n/* eslint-disable jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions  */\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Collapse from '@material-ui/core/Collapse';\nimport { fade, withStyles, useTheme } from '@material-ui/core/styles';\nimport { useForkRef } from '@material-ui/core/utils';\nimport TreeViewContext from '../TreeView/TreeViewContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      listStyle: 'none',\n      margin: 0,\n      padding: 0,\n      outline: 0,\n      WebkitTapHighlightColor: 'transparent',\n      '&:focus > $content $label': {\n        backgroundColor: theme.palette.action.hover\n      },\n      '&$selected > $content $label': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n      },\n      '&$selected > $content $label:hover, &$selected:focus > $content $label': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the root element when expanded. */\n    expanded: {},\n\n    /* Pseudo-class applied to the root element when selected. */\n    selected: {},\n\n    /* Styles applied to the `role=\"group\"` element. */\n    group: {\n      margin: 0,\n      padding: 0,\n      marginLeft: 17\n    },\n\n    /* Styles applied to the tree node content. */\n    content: {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'center',\n      cursor: 'pointer'\n    },\n\n    /* Styles applied to the tree node icon and collapse/expand icon. */\n    iconContainer: {\n      marginRight: 4,\n      width: 15,\n      display: 'flex',\n      flexShrink: 0,\n      justifyContent: 'center',\n      '& svg': {\n        fontSize: 18\n      }\n    },\n\n    /* Styles applied to the label element. */\n    label: {\n      width: '100%',\n      paddingLeft: 4,\n      position: 'relative',\n      '&:hover': {\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }\n  };\n};\n\nvar isPrintableCharacter = function isPrintableCharacter(str) {\n  return str && str.length === 1 && str.match(/\\S/);\n};\n\nvar TreeItem = React.forwardRef(function TreeItem(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      collapseIcon = props.collapseIcon,\n      endIcon = props.endIcon,\n      expandIcon = props.expandIcon,\n      iconProp = props.icon,\n      label = props.label,\n      nodeId = props.nodeId,\n      onClick = props.onClick,\n      onFocus = props.onFocus,\n      onKeyDown = props.onKeyDown,\n      onMouseDown = props.onMouseDown,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Collapse : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"collapseIcon\", \"endIcon\", \"expandIcon\", \"icon\", \"label\", \"nodeId\", \"onClick\", \"onFocus\", \"onKeyDown\", \"onMouseDown\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  var _React$useContext = React.useContext(TreeViewContext),\n      contextIcons = _React$useContext.icons,\n      focus = _React$useContext.focus,\n      focusFirstNode = _React$useContext.focusFirstNode,\n      focusLastNode = _React$useContext.focusLastNode,\n      focusNextNode = _React$useContext.focusNextNode,\n      focusPreviousNode = _React$useContext.focusPreviousNode,\n      focusByFirstCharacter = _React$useContext.focusByFirstCharacter,\n      selectNode = _React$useContext.selectNode,\n      selectRange = _React$useContext.selectRange,\n      selectNextNode = _React$useContext.selectNextNode,\n      selectPreviousNode = _React$useContext.selectPreviousNode,\n      rangeSelectToFirst = _React$useContext.rangeSelectToFirst,\n      rangeSelectToLast = _React$useContext.rangeSelectToLast,\n      selectAllNodes = _React$useContext.selectAllNodes,\n      expandAllSiblings = _React$useContext.expandAllSiblings,\n      toggleExpansion = _React$useContext.toggleExpansion,\n      isExpanded = _React$useContext.isExpanded,\n      isFocused = _React$useContext.isFocused,\n      isSelected = _React$useContext.isSelected,\n      isTabbable = _React$useContext.isTabbable,\n      multiSelect = _React$useContext.multiSelect,\n      getParent = _React$useContext.getParent,\n      mapFirstChar = _React$useContext.mapFirstChar,\n      addNodeToNodeMap = _React$useContext.addNodeToNodeMap,\n      removeNodeFromNodeMap = _React$useContext.removeNodeFromNodeMap;\n\n  var nodeRef = React.useRef(null);\n  var contentRef = React.useRef(null);\n  var handleRef = useForkRef(nodeRef, ref);\n  var icon = iconProp;\n  var expandable = Boolean(Array.isArray(children) ? children.length : children);\n  var expanded = isExpanded ? isExpanded(nodeId) : false;\n  var focused = isFocused ? isFocused(nodeId) : false;\n  var tabbable = isTabbable ? isTabbable(nodeId) : false;\n  var selected = isSelected ? isSelected(nodeId) : false;\n  var icons = contextIcons || {};\n  var theme = useTheme();\n\n  if (!icon) {\n    if (expandable) {\n      if (!expanded) {\n        icon = expandIcon || icons.defaultExpandIcon;\n      } else {\n        icon = collapseIcon || icons.defaultCollapseIcon;\n      }\n\n      if (!icon) {\n        icon = icons.defaultParentIcon;\n      }\n    } else {\n      icon = endIcon || icons.defaultEndIcon;\n    }\n  }\n\n  var handleClick = function handleClick(event) {\n    if (!focused) {\n      focus(nodeId);\n    }\n\n    var multiple = multiSelect && (event.shiftKey || event.ctrlKey || event.metaKey); // If already expanded and trying to toggle selection don't close\n\n    if (expandable && !(multiple && isExpanded(nodeId))) {\n      toggleExpansion(event, nodeId);\n    }\n\n    if (multiple) {\n      if (event.shiftKey) {\n        selectRange(event, {\n          end: nodeId\n        });\n      } else {\n        selectNode(event, nodeId, true);\n      }\n    } else {\n      selectNode(event, nodeId);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  var handleMouseDown = function handleMouseDown(event) {\n    if (event.shiftKey || event.ctrlKey || event.metaKey) {\n      event.preventDefault();\n    }\n\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  };\n\n  var handleNextArrow = function handleNextArrow(event) {\n    if (expandable) {\n      if (expanded) {\n        focusNextNode(nodeId);\n      } else {\n        toggleExpansion(event);\n      }\n    }\n\n    return true;\n  };\n\n  var handlePreviousArrow = function handlePreviousArrow(event) {\n    if (expanded) {\n      toggleExpansion(event, nodeId);\n      return true;\n    }\n\n    var parent = getParent(nodeId);\n\n    if (parent) {\n      focus(parent);\n      return true;\n    }\n\n    return false;\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    var flag = false;\n    var key = event.key;\n\n    if (event.altKey || event.currentTarget !== event.target) {\n      return;\n    }\n\n    var ctrlPressed = event.ctrlKey || event.metaKey;\n\n    switch (key) {\n      case ' ':\n        if (nodeRef.current === event.currentTarget) {\n          if (multiSelect && event.shiftKey) {\n            flag = selectRange(event, {\n              end: nodeId\n            });\n          } else if (multiSelect) {\n            flag = selectNode(event, nodeId, true);\n          } else {\n            flag = selectNode(event, nodeId);\n          }\n        }\n\n        event.stopPropagation();\n        break;\n\n      case 'Enter':\n        if (nodeRef.current === event.currentTarget && expandable) {\n          toggleExpansion(event);\n          flag = true;\n        }\n\n        event.stopPropagation();\n        break;\n\n      case 'ArrowDown':\n        if (multiSelect && event.shiftKey) {\n          selectNextNode(event, nodeId);\n        }\n\n        focusNextNode(nodeId);\n        flag = true;\n        break;\n\n      case 'ArrowUp':\n        if (multiSelect && event.shiftKey) {\n          selectPreviousNode(event, nodeId);\n        }\n\n        focusPreviousNode(nodeId);\n        flag = true;\n        break;\n\n      case 'ArrowRight':\n        if (theme.direction === 'rtl') {\n          flag = handlePreviousArrow(event);\n        } else {\n          flag = handleNextArrow(event);\n        }\n\n        break;\n\n      case 'ArrowLeft':\n        if (theme.direction === 'rtl') {\n          flag = handleNextArrow(event);\n        } else {\n          flag = handlePreviousArrow(event);\n        }\n\n        break;\n\n      case 'Home':\n        if (multiSelect && ctrlPressed && event.shiftKey) {\n          rangeSelectToFirst(event, nodeId);\n        }\n\n        focusFirstNode();\n        flag = true;\n        break;\n\n      case 'End':\n        if (multiSelect && ctrlPressed && event.shiftKey) {\n          rangeSelectToLast(event, nodeId);\n        }\n\n        focusLastNode();\n        flag = true;\n        break;\n\n      default:\n        if (key === '*') {\n          expandAllSiblings(event, nodeId);\n          flag = true;\n        } else if (multiSelect && ctrlPressed && key.toLowerCase() === 'a') {\n          flag = selectAllNodes(event);\n        } else if (!ctrlPressed && !event.shiftKey && isPrintableCharacter(key)) {\n          focusByFirstCharacter(nodeId, key);\n          flag = true;\n        }\n\n    }\n\n    if (flag) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (!focused && event.currentTarget === event.target) {\n      focus(nodeId);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  React.useEffect(function () {\n    if (addNodeToNodeMap) {\n      var childIds = [];\n      React.Children.forEach(children, function (child) {\n        if (React.isValidElement(child) && child.props.nodeId) {\n          childIds.push(child.props.nodeId);\n        }\n      });\n      addNodeToNodeMap(nodeId, childIds);\n    }\n  }, [children, nodeId, addNodeToNodeMap]);\n  React.useEffect(function () {\n    if (removeNodeFromNodeMap) {\n      return function () {\n        removeNodeFromNodeMap(nodeId);\n      };\n    }\n\n    return undefined;\n  }, [nodeId, removeNodeFromNodeMap]);\n  React.useEffect(function () {\n    if (mapFirstChar && label) {\n      mapFirstChar(nodeId, contentRef.current.textContent.substring(0, 1).toLowerCase());\n    }\n  }, [mapFirstChar, nodeId, label]);\n  React.useEffect(function () {\n    if (focused) {\n      nodeRef.current.focus();\n    }\n  }, [focused]);\n  var ariaSelected;\n\n  if (multiSelect) {\n    ariaSelected = selected;\n  } else if (selected) {\n    // single-selection trees unset aria-selected\n    ariaSelected = true;\n  }\n\n  return /*#__PURE__*/React.createElement(\"li\", _extends({\n    className: clsx(classes.root, className, expanded && classes.expanded, selected && classes.selected),\n    role: \"treeitem\",\n    onKeyDown: handleKeyDown,\n    onFocus: handleFocus,\n    \"aria-expanded\": expandable ? expanded : null,\n    \"aria-selected\": ariaSelected,\n    ref: handleRef,\n    tabIndex: tabbable ? 0 : -1\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content,\n    onClick: handleClick,\n    onMouseDown: handleMouseDown,\n    ref: contentRef\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.iconContainer\n  }, icon), /*#__PURE__*/React.createElement(Typography, {\n    component: \"div\",\n    className: classes.label\n  }, label)), children && /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    unmountOnExit: true,\n    className: classes.group,\n    in: expanded,\n    component: \"ul\",\n    role: \"group\"\n  }, TransitionProps), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? TreeItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon used to collapse the node.\n   */\n  collapseIcon: PropTypes.node,\n\n  /**\n   * The icon displayed next to a end node.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * The icon used to expand the node.\n   */\n  expandIcon: PropTypes.node,\n\n  /**\n   * The icon to display next to the tree node's label.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The tree node label.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The id of the node.\n   */\n  nodeId: PropTypes.string.isRequired,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTreeItem'\n})(TreeItem);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);"],"sourceRoot":""}