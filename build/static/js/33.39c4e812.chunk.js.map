{"version":3,"sources":["views/management/CustomerCreateView/Header.js","views/management/CustomerCreateView/CustomerCreateForm.js","views/management/CustomerCreateView/index.js","../node_modules/@material-ui/icons/NavigateNext.js","../node_modules/@material-ui/core/esm/internal/svg-icons/MoreHoriz.js","../node_modules/@material-ui/core/esm/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@material-ui/core/esm/Breadcrumbs/Breadcrumbs.js"],"names":["useStyles","makeStyles","root","Header","className","rest","classes","clsx","Breadcrumbs","separator","fontSize","aria-label","Link","variant","color","to","component","RouterLink","Typography","CustomerCreateForm","history","useHistory","enqueueSnackbar","useSnackbar","initialValues","email","first_name","last_name","phone","validationSchema","Yup","shape","max","required","onSubmit","values","a","resetForm","setErrors","setStatus","setSubmitting","axios","post","API_BASE_URL","CUSTOMER","CREATE","then","success","action","Button","onClick","push","catch","error","submit","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Card","CardContent","Grid","container","spacing","item","md","xs","TextField","Boolean","fullWidth","helperText","label","name","onBlur","onChange","value","state","city","address","Box","mt","type","disabled","theme","backgroundColor","palette","background","dark","minHeight","paddingTop","paddingBottom","CustomerCreateView","Page","title","Container","maxWidth","_interopRequireDefault","require","Object","defineProperty","exports","default","_react","_default","createElement","d","createSvgIcon","React","withStyles","display","marginLeft","marginRight","grey","borderRadius","cursor","boxShadow","shadows","emphasize","icon","width","height","props","other","_objectWithoutProperties","ButtonBase","_extends","focusRipple","MoreHorizIcon","ref","children","_props$component","Component","_props$expandText","expandText","_props$itemsAfterColl","itemsAfterCollapse","_props$itemsBeforeCol","itemsBeforeCollapse","_props$maxItems","maxItems","_props$separator","_React$useState","expanded","setExpanded","allItems","toArray","filter","child","map","index","li","key","concat","ol","items","reduce","acc","current","length","insertSeparators","_toConsumableArray","slice","BreadcrumbCollapsed","renderItemsBeforeAndAfter","flexWrap","alignItems","padding","margin","listStyle","userSelect"],"mappings":"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","file":"static/js/33.39c4e812.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Breadcrumbs,\r\n  Link,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nfunction Header({ className, ...rest }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Breadcrumbs\r\n        separator={<NavigateNextIcon fontSize=\"small\" />}\r\n        aria-label=\"breadcrumb\"\r\n      >\r\n        <Link\r\n          variant=\"body1\"\r\n          color=\"inherit\"\r\n          to=\"/app\"\r\n          component={RouterLink}\r\n        >\r\n          Dashboard\r\n        </Link>\r\n        <Link\r\n          variant=\"body1\"\r\n          color=\"inherit\"\r\n          to=\"/app/customers\"\r\n          component={RouterLink}\r\n        >\r\n          Customers\r\n        </Link>\r\n        <Typography\r\n          variant=\"body1\"\r\n          color=\"textPrimary\"\r\n        >\r\n          Create Customer\r\n        </Typography>\r\n      </Breadcrumbs>\r\n      <Typography\r\n        variant=\"h3\"\r\n        color=\"textPrimary\"\r\n      >\r\n        Create new customer\r\n      </Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport { useSnackbar } from 'notistack';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  TextField,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport axios from 'src/utils/axios';\r\nimport { API_BASE_URL } from 'src/config';\r\nimport { CUSTOMER } from 'src/config/endpoint';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nfunction CustomerCreateForm({\r\n  className,\r\n  ...rest\r\n}) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: '',\r\n        first_name: '',\r\n        last_name: '',\r\n        phone: '',\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n        first_name: Yup.string().max(255).required('First Name is required'),\r\n        last_name: Yup.string().max(255),\r\n        phone: Yup.string().max(15),\r\n      })}\r\n      onSubmit={async (values, {\r\n        resetForm,\r\n        setErrors,\r\n        setStatus,\r\n        setSubmitting\r\n      }) => {\r\n        const {\r\n          first_name, last_name, email, phone\r\n        } = values;\r\n        axios.post(`${API_BASE_URL}/${CUSTOMER.CREATE}`, {\r\n          first_name,\r\n          last_name,\r\n          email,\r\n          phone\r\n        })\r\n          .then(() => {\r\n            resetForm();\r\n            setStatus({ success: true });\r\n            setSubmitting(false);\r\n            enqueueSnackbar('Customer created', {\r\n              variant: 'success',\r\n              action: <Button onClick={() => { history.push('/app/customers'); }}>See all</Button>\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            setStatus({ success: false });\r\n            setErrors({ submit: error.message });\r\n            setSubmitting(false);\r\n          });\r\n      }}\r\n    >\r\n      {({\r\n        errors,\r\n        handleBlur,\r\n        handleChange,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        touched,\r\n        values\r\n      }) => (\r\n        <form\r\n          className={clsx(classes.root, className)}\r\n          onSubmit={handleSubmit}\r\n          {...rest}\r\n        >\r\n\r\n          <Card>\r\n            <CardContent>\r\n\r\n              <Grid\r\n                container\r\n                spacing={3}\r\n              >\r\n                <Grid\r\n                  item\r\n                  md={12}\r\n                  xs={12}\r\n                >\r\n                  <TextField\r\n                    error={Boolean(touched.email && errors.email)}\r\n                    fullWidth\r\n                    helperText={touched.email && errors.email}\r\n                    label=\"Email address\"\r\n                    name=\"email\"\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    required\r\n                    value={values.email}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  md={12}\r\n                  xs={12}\r\n                >\r\n                  <TextField\r\n                    error={Boolean(touched.first_name && errors.first_name)}\r\n                    fullWidth\r\n                    helperText={touched.first_name && errors.first_name}\r\n                    label=\"First name\"\r\n                    name=\"first_name\"\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    required\r\n                    value={values.first_name}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  md={12}\r\n                  xs={12}\r\n                >\r\n                  <TextField\r\n                    error={Boolean(touched.last_name && errors.last_name)}\r\n                    fullWidth\r\n                    helperText={touched.last_name && errors.last_name}\r\n                    label=\"Last name\"\r\n                    name=\"last_name\"\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    value={values.last_name}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  md={6}\r\n                  xs={12}\r\n                >\r\n                  <TextField\r\n                    error={Boolean(touched.phone && errors.phone)}\r\n                    fullWidth\r\n                    helperText={touched.phone && errors.phone}\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    value={values.phone}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  md={6}\r\n                  xs={12}\r\n                >\r\n                  <TextField\r\n                    error={Boolean(touched.state && errors.state)}\r\n                    fullWidth\r\n                    helperText={touched.state && errors.state}\r\n                    label=\"State/Region\"\r\n                    name=\"state\"\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    value={values.state}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  md={6}\r\n                  xs={12}\r\n                >\r\n                  <TextField\r\n                    error={Boolean(touched.city && errors.city)}\r\n                    fullWidth\r\n                    helperText={touched.city && errors.city}\r\n                    label=\"City\"\r\n                    name=\"city\"\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    value={values.city}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  md={6}\r\n                  xs={12}\r\n                >\r\n                  <TextField\r\n                    error={Boolean(touched.address && errors.address)}\r\n                    fullWidth\r\n                    helperText={touched.address && errors.address}\r\n                    label=\"Address\"\r\n                    name=\"address\"\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    value={values.address}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item />\r\n                {/* <Grid\r\n                  item\r\n                  md={6}\r\n                  xs={12}\r\n                >\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"textPrimary\"\r\n                  >\r\n                    Email Verified\r\n                  </Typography>\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    color=\"textSecondary\"\r\n                  >\r\n                    Disabling this will automatically send the user a verification\r\n                    email\r\n                  </Typography>\r\n                  <Switch\r\n                    checked={values.verified}\r\n                    color=\"secondary\"\r\n                    edge=\"start\"\r\n                    name=\"verified\"\r\n                    onChange={handleChange}\r\n                    value={values.verified}\r\n                  />\r\n                </Grid> */}\r\n                {/* <Grid\r\n                  item\r\n                  md={6}\r\n                  xs={12}\r\n                >\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"textPrimary\"\r\n                  >\r\n                    Discounted Prices\r\n                  </Typography>\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    color=\"textSecondary\"\r\n                  >\r\n                    This will give the user discountedprices for all products\r\n                  </Typography>\r\n                  <Switch\r\n                    checked={values.discountedPrices}\r\n                    color=\"secondary\"\r\n                    edge=\"start\"\r\n                    name=\"discountedPrices\"\r\n                    onChange={handleChange}\r\n                    value={values.discountedPrices}\r\n                  />\r\n                </Grid> */}\r\n              </Grid>\r\n              <Box mt={2}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  type=\"submit\"\r\n                  disabled={isSubmitting}\r\n                >\r\n                  Create Customer\r\n                </Button>\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nCustomerCreateForm.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default CustomerCreateForm;\r\n","import React from 'react';\r\nimport { Box, Container, makeStyles } from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport Header from './Header';\r\nimport CustomerCreateForm from './CustomerCreateForm';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingTop: theme.spacing(3),\r\n    paddingBottom: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nfunction CustomerCreateView() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Customer Create\"\r\n    >\r\n      <Container maxWidth=\"md\">\r\n        <Box mt={3}>\r\n          <Header />\r\n          <CustomerCreateForm />\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n\r\nexport default CustomerCreateView;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'NavigateNext');\n\nexports.default = _default;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(0.5),\n      backgroundColor: theme.palette.grey[100],\n      color: theme.palette.grey[700],\n      borderRadius: 2,\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: theme.palette.grey[200]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[0],\n        backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n      }\n    },\n    icon: {\n      width: 24,\n      height: 16\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction BreadcrumbCollapsed(props) {\n  var classes = props.classes,\n      other = _objectWithoutProperties(props, [\"classes\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    component: \"li\",\n    className: classes.root,\n    focusRipple: true\n  }, other), /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    className: classes.icon\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateBreadcrumbCollapsed'\n})(BreadcrumbCollapsed);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the li element. */\n  li: {},\n\n  /* Styles applied to the separator element. */\n  separator: {\n    display: 'flex',\n    userSelect: 'none',\n    marginLeft: 8,\n    marginRight: 8\n  }\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/React.createElement(\"li\", {\n        \"aria-hidden\": true,\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$expandText = props.expandText,\n      expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      expanded = _React$useState[0],\n      setExpanded = _React$useState[1];\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand() {\n      setExpanded(true);\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: you have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [/*#__PURE__*/React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: the Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return React.isValidElement(child);\n  }).map(function (child, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.li,\n      key: \"child-\".concat(index)\n    }, child);\n  });\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), /*#__PURE__*/React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   * By default, it maps the variant to a good default headline component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);"],"sourceRoot":""}