{"version":3,"sources":["views/projects/ReportCreateView/Header.js","views/projects/ReportCreateView/HeadingItem/HeadingDetail.js","views/projects/ReportCreateView/HeadingItem/index.js","views/projects/ReportCreateView/index.js","../node_modules/@material-ui/icons/NavigateNext.js","../node_modules/@material-ui/core/esm/internal/svg-icons/MoreHoriz.js","../node_modules/@material-ui/core/esm/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@material-ui/core/esm/Breadcrumbs/Breadcrumbs.js"],"names":["useStyles","makeStyles","root","Header","className","rest","classes","clsx","Breadcrumbs","separator","fontSize","aria-label","Link","variant","color","to","component","RouterLink","Typography","padding","container","headingContent","height","labelTitle","marginRight","fieldTitle","panel","treeView","treeItem","witdh","HeadingDetail","data","updateData","useState","saving","setSaving","heading","setHeading","field","setField","useEffect","HEADING_OPTIONS","some","item","name","Box","Container","mt","display","TextField","onChange","e","event","label","target","value","Autocomplete","id","options","groupBy","option","group","getOptionLabel","title","style","width","renderInput","params","newValue","Button","size","onClick","subHeading","uuidv4","children","push","newSubHeading","flexGrow","maxWidth","marginTop","minWitdh","Heading","headings","updateHeadings","expanded","setExpanded","selected","setSelected","selHeading","setSelHeading","Card","ml","Grid","TreeView","defaultCollapseIcon","defaultExpandIcon","onNodeToggle","nodeIds","onNodeSelect","nodeId","child","map","TreeItem","key","subheading","index","indexChild","theme","formButtons","flexDirection","formButton","marginLeft","spacing","ReportCreateView","setTitle","setHeadings","enqueueSnackbar","useSnackbar","Page","pl","fullWidth","margin","HeadingItem","newHeadings","axios","post","API_BASE_URL","REPORT","CREATE","then","action","console","log","_interopRequireDefault","require","Object","defineProperty","exports","default","_react","_default","createElement","d","createSvgIcon","React","withStyles","backgroundColor","palette","grey","borderRadius","cursor","boxShadow","shadows","emphasize","icon","props","other","_objectWithoutProperties","ButtonBase","_extends","focusRipple","MoreHorizIcon","ref","_props$component","Component","_props$expandText","expandText","_props$itemsAfterColl","itemsAfterCollapse","_props$itemsBeforeCol","itemsBeforeCollapse","_props$maxItems","maxItems","_props$separator","_React$useState","allItems","toArray","filter","li","concat","ol","items","reduce","acc","current","length","insertSeparators","_toConsumableArray","slice","BreadcrumbCollapsed","renderItemsBeforeAndAfter","flexWrap","alignItems","listStyle","userSelect"],"mappings":"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","file":"static/js/35.7fde3ee6.chunk.js","sourcesContent":["import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Breadcrumbs,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Breadcrumbs\n        separator={<NavigateNextIcon fontSize=\"small\" />}\n        aria-label=\"breadcrumb\"\n      >\n        <Link\n          variant=\"body1\"\n          color=\"inherit\"\n          to=\"/app\"\n          component={RouterLink}\n        >\n          Dashboard\n        </Link>\n        <Link\n          variant=\"body1\"\n          color=\"inherit\"\n          to=\"/app/workers\"\n          component={RouterLink}\n        >\n          Workers\n        </Link>\n        <Typography\n          variant=\"body1\"\n          color=\"textPrimary\"\n        >\n          Edit\n        </Typography>\n      </Breadcrumbs>\n      <Typography\n        variant=\"h3\"\n        color=\"textPrimary\"\n      >\n        Edit Worker\n      </Typography>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { v4 as uuidv4 } from 'uuid';\nimport {\n  Box,\n  Button,\n  Container,\n  Card,\n  Typography,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport { HEADING_OPTIONS } from 'src/constants';\n\nconst useStyles = makeStyles({\n  root: {\n    padding: 20,\n  },\n  container: {\n\n  },\n  headingContent: {\n    height: 300,\n  },\n  labelTitle: {\n    marginRight: 10,\n  },\n  fieldTitle: {\n    marginRight: 10,\n  },\n  panel: {\n    height: 500,\n  },\n  treeView: {\n\n  },\n  treeItem: {\n    witdh: 300,\n  }\n});\n\nfunction HeadingDetail({ data, updateData }) {\n  const classes = useStyles();\n  const [saving, setSaving] = useState(false);\n  const [heading, setHeading] = useState(data);\n  const [field, setField] = useState();\n\n  useEffect(() => {\n    setHeading(data);\n    if (data && data.field) {\n      HEADING_OPTIONS.some((item) => {\n        if (item.name === data.field) {\n          setField(item);\n        }\n      });\n    }\n  }, [data]);\n\n  if (!data) {\n    return null;\n  }\n\n  const handleChangeHeadingLabel = (event) => {\n    setHeading({ ...heading, label: event.target.value });\n  };\n\n  const handleSave = () => {\n    setSaving(false);\n    updateData({ ...heading, field: field.name });\n  };\n\n  const newSubHeading = () => {\n    const id = uuidv4();\n    const subHeading = { id, label: 'New SubHeading', field: 'label' };\n    if (heading && heading.children) {\n      heading.children.push(subHeading);\n    } else {\n      heading.children = [subHeading];\n    }\n    updateData(heading);\n  };\n\n  return (\n    <Box\n      className={classes.root}\n    >\n      {heading && (\n      <Container\n        className={classes.container}\n      >\n        <Box\n          className={classes.headingContent}\n        >\n          <Box\n            mt={3}\n            display=\"flex\"\n          >\n            <Typography\n              className={classes.labelTitle}\n              color=\"textPrimary\"\n              variant=\"h4\"\n            >\n              Label:\n            </Typography>\n            {saving\n              ? (\n                <TextField\n                  onChange={(e) => { handleChangeHeadingLabel(e); }}\n                  value={heading.label}\n                />\n              ) : (\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"h5\"\n                >\n                  {heading.label}\n                </Typography>\n              )}\n          </Box>\n          <Box\n            mt={3}\n            display=\"flex\"\n          >\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h4\"\n              className={classes.fieldTitle}\n            >\n              Field:\n            </Typography>\n            {saving\n              ? (\n                <Autocomplete\n                  id=\"grouped-demo\"\n                  value={field}\n                  options={HEADING_OPTIONS}\n                  groupBy={(option) => option.group}\n                  getOptionLabel={(option) => option.title}\n                  style={{ width: 300 }}\n                  renderInput={(params) => (<TextField {...params} label=\"With categories\" variant=\"outlined\" />)}\n                  onChange={(event, newValue) => {\n                    setField(newValue);\n                  }}\n                />\n              ) : (\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"h5\"\n                >\n                  {heading.field}\n                </Typography>\n              )}\n          </Box>\n        </Box>\n        <Box>\n          {saving\n            ? (\n              <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                size=\"small\"\n                onClick={() => { handleSave(); }}\n              >\n                Save\n              </Button>\n            ) : (\n              <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                size=\"small\"\n                onClick={() => { setSaving(true); }}\n              >\n                Edit\n              </Button>\n            )}\n          {!heading.subHeading && (\n            <Button\n              color=\"secondary\"\n              variant=\"contained\"\n              size=\"small\"\n              onClick={() => { newSubHeading(); }}\n            >\n              New SubHeading\n            </Button>\n          )}\n        </Box>\n      </Container>\n      )}\n    </Box>\n  );\n}\n\nHeadingDetail.propTypes = {\n  data: PropTypes.object,\n  updateData: PropTypes.func\n};\n\nexport default HeadingDetail;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Card,\n  Box,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport TreeView from '@material-ui/lab/TreeView';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport TreeItem from '@material-ui/lab/TreeItem';\nimport HeadingDetail from './HeadingDetail';\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    maxWidth: 1200,\n  },\n  container: {\n\n  },\n  panel: {\n    height: 500,\n  },\n  treeView: {\n    marginTop: 20,\n  },\n  treeItem: {\n    minWitdh: 300,\n  }\n});\n\nfunction Heading({ className, headings, updateHeadings }) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = useState([]);\n  const [selected, setSelected] = useState(null);\n  const [selHeading, setSelHeading] = useState(null);\n  const handleToggle = (event, nodeIds) => {\n    setExpanded(nodeIds);\n  };\n\n  const handleSelect = (event, nodeId) => {\n    setSelected(nodeId);\n    headings.some((heading) => {\n      if (heading.id === nodeId) {\n        setSelHeading(heading);\n      } else if (heading.children) {\n        heading.children.some((child) => {\n          if (child.id === nodeId) {\n            setSelHeading({ ...child, subHeading: true });\n          }\n        });\n      }\n    });\n  };\n\n  const updateHeading = (data) => {\n    headings.some((heading, index) => {\n      if (heading.id === data.id) {\n        headings[index] = data;\n        updateHeadings([...headings]);\n      } else if (heading.children) {\n        heading.children.some((child, indexChild) => {\n          if (child.id === data.id) {\n            headings[index].children[indexChild] = data;\n            updateHeadings([...headings]);\n          }\n        });\n      }\n    });\n    setSelHeading(data);\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n    >\n      <Box\n        className={classes.panel}\n        mt={3}\n        ml={1}\n        display=\"flex\"\n      >\n        <Grid\n          variant=\"outlined\"\n        >\n          <Typography\n            variant=\"h5\"\n          >\n            Headings\n          </Typography>\n          <TreeView\n            className={classes.treeView}\n            defaultCollapseIcon={<ExpandMoreIcon />}\n            defaultExpandIcon={<ChevronRightIcon />}\n            expanded={expanded}\n            selected={selected}\n            onNodeToggle={handleToggle}\n            onNodeSelect={handleSelect}\n          >\n            {headings.map((heading) => (\n              <TreeItem\n                className={classes.treeItem}\n                key={heading.id}\n                nodeId={heading.id}\n                label={heading.label}\n              >\n                { heading.children && (heading.children.map((subheading) => (\n                  <TreeItem\n                    className={classes.treeItem}\n                    key={subheading.id}\n                    nodeId={subheading.id}\n                    label={subheading.label}\n                  />\n                )))}\n              </TreeItem>\n            ))}\n          </TreeView>\n        </Grid>\n        {selHeading && (\n          <Grid>\n            <HeadingDetail\n              data={selHeading}\n              updateData={updateHeading}\n            />\n          </Grid>\n        )}\n      </Box>\n    </Card>\n  );\n}\n\nHeading.propTypes = {\n  className: PropTypes.string,\n  headings: PropTypes.array,\n  updateHeadings: PropTypes.func,\n};\n\n\nexport default Heading;\n","/* eslint-disable consistent-return */\nimport React, { useState } from 'react';\nimport axios from 'src/utils/axios';\nimport {\n  Box,\n  Button,\n  Container,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport { useSnackbar } from 'notistack';\nimport { v4 as uuidv4 } from 'uuid';\nimport Page from 'src/components/Page';\nimport { API_BASE_URL } from 'src/config';\nimport { REPORT } from 'src/config/endpoint';\nimport Header from './Header';\nimport HeadingItem from './HeadingItem';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  container: {\n\n  },\n  panel: {\n    height: 500,\n  },\n  formButtons: {\n    flexDirection: 'row-reverse',\n    marginTop: '20px',\n    display: 'flex',\n  },\n  formButton: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nfunction ReportCreateView() {\n  const classes = useStyles();\n  const [title, setTitle] = useState('');\n  const [headings, setHeadings] = useState([]);\n  const { enqueueSnackbar } = useSnackbar();\n  //  const { reports } = useSelector((state) => (state.report));\n\n  const handleCreateHeading = () => {\n    setHeadings([...headings, { id: uuidv4(), label: 'New Heading' }]);\n  };\n\n  const handleCreateReport = () => {\n    axios.post(`${API_BASE_URL}/${REPORT.CREATE}`, {\n      title,\n      headings,\n    })\n      .then(() => {\n        enqueueSnackbar('Report created', {\n          variant: 'success',\n          action: <Button onClick={() => { console.log('created'); }}>See all</Button>\n        });\n      });\n  };\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Project Create\"\n    >\n      <Container\n        className={classes.container}\n        maxWidth=\"lg\"\n        pl={2}\n        mt={2}\n      >\n        <Header />\n        <Box>\n          <TextField\n            fullWidth\n            label=\"Heading Title\"\n            margin=\"normal\"\n            name=\"title\"\n            onChange={(e) => { setTitle(e.target.value); }}\n            value={title}\n            variant=\"outlined\"\n          />\n        </Box>\n        <HeadingItem\n          className={classes.panel}\n          headings={headings}\n          updateHeadings={(newHeadings) => { setHeadings(newHeadings); }}\n        />\n        <Box\n          className={classes.formButtons}\n          mt={3}\n        >\n          <Button\n            className={classes.formButton}\n            color=\"secondary\"\n            variant=\"contained\"\n            size=\"small\"\n            onClick={handleCreateReport}\n          >\n            Create\n          </Button>\n          <Button\n            className={classes.formButton}\n            color=\"secondary\"\n            variant=\"contained\"\n            size=\"small\"\n            onClick={handleCreateHeading}\n          >\n            Create Heading\n          </Button>\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n\nexport default ReportCreateView;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'NavigateNext');\n\nexports.default = _default;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(0.5),\n      backgroundColor: theme.palette.grey[100],\n      color: theme.palette.grey[700],\n      borderRadius: 2,\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: theme.palette.grey[200]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[0],\n        backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n      }\n    },\n    icon: {\n      width: 24,\n      height: 16\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction BreadcrumbCollapsed(props) {\n  var classes = props.classes,\n      other = _objectWithoutProperties(props, [\"classes\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    component: \"li\",\n    className: classes.root,\n    focusRipple: true\n  }, other), /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    className: classes.icon\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateBreadcrumbCollapsed'\n})(BreadcrumbCollapsed);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the li element. */\n  li: {},\n\n  /* Styles applied to the separator element. */\n  separator: {\n    display: 'flex',\n    userSelect: 'none',\n    marginLeft: 8,\n    marginRight: 8\n  }\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/React.createElement(\"li\", {\n        \"aria-hidden\": true,\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$expandText = props.expandText,\n      expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      expanded = _React$useState[0],\n      setExpanded = _React$useState[1];\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand() {\n      setExpanded(true);\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: you have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [/*#__PURE__*/React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: the Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return React.isValidElement(child);\n  }).map(function (child, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.li,\n      key: \"child-\".concat(index)\n    }, child);\n  });\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), /*#__PURE__*/React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   * By default, it maps the variant to a good default headline component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);"],"sourceRoot":""}