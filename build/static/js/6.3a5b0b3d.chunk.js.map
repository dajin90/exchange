{"version":3,"sources":["utils/analytics.js","components/Page.js","views/exchange/ExchangeView.js","hooks/useIsMountedRef.js"],"names":["track","window","gtag","pageview","props","process","REACT_APP_GA_MEASUREMENT_ID","event","type","Page","forwardRef","ref","title","children","rest","location","useLocation","sendPageViewEvent","useCallback","page_path","pathname","useEffect","Helmet","useStyles","makeStyles","theme","root","justifyContent","backgroundColor","display","height","minHeight","flexDirection","paddingBottom","paddingTop","currencyContainer","position","titleText","width","color","fontSize","textAlign","fontWeight","marginBottom","topPanel","borderTopLeftRadius","borderTopRightRadius","padding","bottomPanel","borderBottomLeftRadius","borderBottomRightRadius","exchangeNotificationWrapper","top","left","border","borderRadius","paddingLeft","paddingRight","zIndex","balanceText","marginTop","exchangeButton","currencyInput","alignItems","operaterText","marginRight","valueText","input","errorText","getCurrencyCharater","CURRENCY_TYPE","fixDecimal","value","toFixed","indexOf","ExchangeView","classes","dispatch","useDispatch","isMountedRef","isMounted","useRef","current","useIsMountedRef","rates","useSelector","state","currency","useState","fromType","setFromType","toType","setToType","fromValue","setFromValue","toValue","setToValue","INIT_BALANCE","balance","setBalance","fromExceed","setFromExceed","getRates","a","currencyRates","Number","className","Container","maxWidth","Box","mb","Select","id","onChange","target","map","item","index","MenuItem","key","toString","InputLabel","TextField","variant","inputProps","style","convertedValue","Button","size","onClick","_balance"],"mappings":"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","file":"static/js/6.3a5b0b3d.chunk.js","sourcesContent":["function track(...args) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    return;\r\n  }\r\n\r\n  if (!window.gtag) {\r\n    return;\r\n  }\r\n\r\n  window.gtag(...args);\r\n}\r\n\r\nfunction pageview(props) {\r\n  track('config', process.env.REACT_APP_GA_MEASUREMENT_ID, props);\r\n}\r\n\r\nfunction event(type, props) {\r\n  track('event', type, props);\r\n}\r\n\r\nexport default {\r\n  pageview,\r\n  event\r\n};\r\n","import React, {\r\n  forwardRef,\r\n  useEffect, useCallback\r\n} from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { useLocation } from 'react-router';\r\nimport PropTypes from 'prop-types';\r\nimport track from 'src/utils/analytics';\r\n\r\nconst Page = forwardRef(({\r\n  title,\r\n  children,\r\n  ...rest\r\n}, ref) => {\r\n  const location = useLocation();\r\n\r\n  const sendPageViewEvent = useCallback(() => {\r\n    track.pageview({\r\n      page_path: location.pathname\r\n    });\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    sendPageViewEvent();\r\n  }, [sendPageViewEvent]);\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      {...rest}\r\n    >\r\n      <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet>\r\n      {children}\r\n    </div>\r\n  );\r\n});\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default Page;\r\n","import React, { useCallback, useEffect, useState } from 'react';\nimport {\n  Select,\n  MenuItem,\n  Box,\n  Container,\n  InputLabel,\n  Button,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\n\nimport Page from 'src/components/Page';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { currencyRates } from 'src/actions/currencyActions';\nimport { CURRENCY_TYPE, INIT_BALANCE } from '../../constants';\nimport useIsMountedRef from '../../hooks/useIsMountedRef';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    justifyContent: 'center',\n    backgroundColor: '#EFF2F7',\n    display: 'flex',\n    height: '100%',\n    minHeight: '100%',\n    flexDirection: 'column',\n    paddingBottom: 80,\n    paddingTop: 80\n  },\n  currencyContainer: {\n    position: 'relative'\n  },\n  titleText: {\n    width: '100%',\n    color: 'red',\n    fontSize: 20,\n    textAlign: 'center',\n    fontWeight: 'bold',\n    marginBottom: 30\n  },\n  topPanel: {\n    borderTopLeftRadius: 10,\n    borderTopRightRadius: 10,\n    backgroundColor: '#ffffff',\n    padding: 40,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    height: 120\n  },\n  bottomPanel: {\n    borderBottomLeftRadius: 10,\n    borderBottomRightRadius: 10,\n    backgroundColor: '#D0D0D0',\n    padding: 40,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    height: 120\n  },\n  exchangeNotificationWrapper: {\n    position: 'absolute',\n    backgroundColor: '#ffffff',\n    top: 160,\n    width: 150,\n    left: 'calc(50% - 70px)',\n    border: '1px solid #00ff00',\n    borderRadius: 20,\n    paddingTop: 5,\n    paddingBottom: 5,\n    paddingLeft: 20,\n    paddingRight: 20,\n    textAlign: 'center',\n    zIndex: 10,\n  },\n  balanceText: {\n    color: '#1E1E1E',\n    fontSize: 14,\n    marginTop: 15\n  },\n  exchangeButton: {\n    marginTop: 10,\n  },\n  currencyInput: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  operaterText: {\n    fontWeight: 'bold',\n    fontSize: 24,\n    color: '#1E1E1E',\n    marginRight: 15\n  },\n  valueText: {\n    width: 100,\n  },\n  input: {\n    textAlign: 'center'\n  },\n  errorText: {\n    color: '#ff0000',\n    fontSize: 14,\n    marginTop: 5,\n    textAlign: 'right'\n  }\n}));\n\nexport const getCurrencyCharater = (type) => {\n  if (type === CURRENCY_TYPE[0]) {\n    return '€';\n  } if (type === CURRENCY_TYPE[1]) {\n    return '$';\n  }\n  return '£';\n};\n\nexport const fixDecimal = (value) => {\n  if (value) {\n    if (value.toFixed(4).indexOf('.0000') >= 0) {\n      return value.toFixed(0);\n    } else {\n      return value.toFixed(4);\n    }\n  }\n  return '';\n}\n\nfunction ExchangeView() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const isMountedRef = useIsMountedRef();\n  const { rates } = useSelector((state) => state.currency);\n\n  const [fromType, setFromType] = useState(CURRENCY_TYPE[0]);\n  const [toType, setToType] = useState(CURRENCY_TYPE[1]);\n  const [fromValue, setFromValue] = useState('');\n  const [toValue, setToValue] = useState('');\n  const [balance, setBalance] = useState(INIT_BALANCE);\n  const [fromExceed, setFromExceed] = useState(false);\n\n  const getRates = useCallback(async (type) => {\n    await dispatch(currencyRates(type));\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getRates(fromType);\n  }, [getRates]);\n\n  useEffect(() => {\n    if (fromValue !== '') {\n      setToValue(fixDecimal(rates[toType] * Number(fromValue)));\n      if (Number(fromValue) > balance[fromType]) {\n        setFromExceed(true);\n      } else {\n        setFromExceed(false);\n      }\n    }\n  }, [rates]);\n\n  useEffect(() => {\n    if (fromValue !== '') {\n      if (Number(fromValue) > balance[fromType]) {\n        setFromExceed(true);\n      } else {\n        setFromExceed(false);\n      }\n    }\n  }, [fromValue]);\n\n  const onChangeFromType = (event) => {\n    const type = event.target.value;\n    getRates(type);\n    setFromType(type);\n  };\n\n  const onChangeToType = (event) => {\n    const type = event.target.value;\n    setToType(type);\n    if (rates[type]) {\n      const convertedValue = Number(toValue) / rates[type];\n      setFromValue(fixDecimal(convertedValue));\n    }\n  };\n\n  const onChangeFromValue = (event) => {\n    const { value } = event.target;\n    setFromValue(value);\n    setToValue(fixDecimal(rates[toType] * Number(value)));\n  };\n\n  const onChangeToValue = (event) => {\n    const { value } = event.target;\n    setToValue(value);\n    if (rates[toType]) {\n      const convertedValue = Number(value) / rates[toType];\n      setFromValue(fixDecimal(convertedValue));\n    }\n  };\n\n  const onExchange = () => {\n    if (!fromExceed) {\n      const _balance = { ...balance };\n      _balance[fromType] = Number((_balance[fromType] - Number(fromValue)).toFixed(2));\n      _balance[toType] = Number((_balance[toType] + Number(toValue)).toFixed(2));\n      setBalance(_balance);\n      if (fromValue !== '') {\n        if (Number(fromValue) > _balance[fromType]) {\n          setFromExceed(true);\n        } else {\n          setFromExceed(false);\n        }\n      }\n    }\n  };\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Exchange\"\n    >\n      <Container maxWidth=\"md\">\n        <Box mb={8} className={classes.currencyContainer}>\n          <div className={classes.titleText}>Currency Exchange</div>\n          <div className={classes.topPanel}>\n            <div>\n              <Select\n                id=\"currency-from\"\n                value={fromType}\n                onChange={onChangeFromType}\n              >\n                {CURRENCY_TYPE.map((item, index) => (\n                  <MenuItem value={item} key={`from_${index.toString()}`}>{item}</MenuItem>\n                ))}\n              </Select>\n              <InputLabel className={classes.balanceText}>\n                Balance:\n                {' '}\n                {getCurrencyCharater(fromType)}\n                {balance[fromType]}\n              </InputLabel>\n            </div>\n            <div>\n              <div className={classes.currencyInput}>\n                <InputLabel className={classes.operaterText}>−</InputLabel>\n                <TextField\n                  className={classes.valueText}\n                  id=\"from-value\"\n                  variant=\"standard\"\n                  value={fromValue}\n                  onChange={onChangeFromValue}\n                  inputProps={{ style: { textAlign: 'right', fontSize: 24 } }}\n                />\n              </div>\n              {fromExceed && <InputLabel className={classes.errorText}>Exceeds balance</InputLabel>}\n            </div>\n          </div>\n          <div className={classes.exchangeNotificationWrapper}>\n            {getCurrencyCharater(fromType)}\n            1 =\n            {getCurrencyCharater(toType)}\n            {rates[toType]}\n          </div>\n          <div className={classes.bottomPanel}>\n            <div>\n              <Select\n                id=\"currency-to\"\n                value={toType}\n                onChange={onChangeToType}\n              >\n                {CURRENCY_TYPE.map((item, index) => (\n                  <MenuItem value={item} key={`to_${index.toString()}`}>{item}</MenuItem>\n                ))}\n              </Select>\n              <InputLabel className={classes.balanceText}>\n                Balance:\n                {' '}\n                {getCurrencyCharater(toType)}\n                {balance[toType]}\n              </InputLabel>\n            </div>\n            <div>\n              <div className={classes.currencyInput}>\n                <InputLabel className={classes.operaterText}>+</InputLabel>\n                <TextField\n                  className={classes.valueText}\n                  id=\"to-value\"\n                  variant=\"standard\"\n                  value={toValue}\n                  onChange={onChangeToValue}\n                  inputProps={{ style: { textAlign: 'right', fontSize: 24 } }}\n                />\n              </div>\n            </div>\n\n          </div>\n          <Button\n            className={classes.exchangeButton}\n            color=\"primary\"\n            variant=\"contained\"\n            size=\"small\"\n            onClick={onExchange}\n          >\n            Exchange\n          </Button>\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n\nexport default ExchangeView;\n","import { useRef, useEffect } from 'react';\r\n\r\nexport default function useIsMountedRef() {\r\n  const isMounted = useRef(true);\r\n\r\n  useEffect(() => () => {\r\n    isMounted.current = false;\r\n  }, []);\r\n\r\n  return isMounted;\r\n}\r\n"],"sourceRoot":""}