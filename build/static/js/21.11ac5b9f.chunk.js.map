{"version":3,"sources":["../node_modules/@material-ui/lab/esm/TreeView/TreeViewContext.js","../node_modules/@material-ui/core/esm/internal/svg-icons/KeyboardArrowLeft.js","../node_modules/@material-ui/core/esm/internal/svg-icons/KeyboardArrowRight.js","../node_modules/@material-ui/lab/esm/TreeView/TreeView.js","../node_modules/@material-ui/lab/esm/TreeItem/TreeItem.js","views/projects/ProjectDetailsView/Overview/ProjectCard.js","views/projects/ProjectDetailsView/Overview/index.js","views/projects/ProjectDetailsView/CheckList.js","views/projects/ProjectDetailsView/HeadingDetails/HeadingDetail.js","views/projects/ProjectDetailsView/HeadingDetails/index.js","views/projects/ProjectDetailsView/ReportTemplate.js","views/projects/ProjectDetailsView/index.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardMedia/CardMedia.js","components/CheckItem.js"],"names":["TreeViewContext","React","createSvgIcon","d","findNextFirstChar","firstChars","startIndex","char","i","length","defaultExpandedDefault","defaultSelectedDefault","TreeView","props","ref","children","classes","className","defaultCollapseIcon","defaultEndIcon","_props$defaultExpande","defaultExpanded","defaultExpandIcon","defaultParentIcon","_props$defaultSelecte","defaultSelected","_props$disableSelecti","disableSelection","_props$multiSelect","multiSelect","expandedProp","expanded","onNodeSelect","onNodeToggle","selectedProp","selected","other","_objectWithoutProperties","_React$useState","tabbable","setTabbable","_React$useState2","focusedNodeId","setFocusedNodeId","nodeMap","firstCharMap","visibleNodes","_useControlled","useControlled","controlled","default","name","_useControlled2","_slicedToArray","setExpandedState","_useControlled3","_useControlled4","setSelectedState","isExpanded","id","Array","isArray","indexOf","isSelected","getNextNode","nodeIndex","current","getPreviousNode","getLastNode","getFirstNode","focus","lastSelectedNode","lastSelectionWasRange","currentRangeSelection","handleRangeArrowSelect","event","nodes","base","start","next","filter","push","handleRangeSelect","end","range","a","b","aIndex","bIndex","Math","min","max","slice","getNodesInRange","newSelected","concat","handleMultipleSelect","value","_toConsumableArray","handleSingleSelect","selectRange","stacked","arguments","undefined","_nodes$start","getNodesToRemove","map","apply","forEach","node","removeNodeFromNodeMap","newMap","_extends","parent","parentMap","parentChildren","c","oldFocusedNodeId","prevChildIds","_React$useState3","childrenCalculated","setChildrenCalculated","childIds","child","nodeId","arr1","arr2","arrayDiff","index","buildVisible","list","item","childs","noopSelection","Provider","icons","focusFirstNode","focusLastNode","focusNextNode","focusPreviousNode","focusByFirstCharacter","lowercaseChar","toLowerCase","firstCharIds","Object","keys","firstChar","expandAllSiblings","diff","newExpanded","toggleExpansion","oldTabbable","isFocused","selectNode","multiple","selectNextNode","selectPreviousNode","rangeSelectToFirst","rangeSelectToLast","selectAllNodes","isTabbable","getParent","mapFirstChar","addNodeToNodeMap","childrenIds","currentMap","childId","currentChildMap","role","clsx","root","withStyles","padding","margin","listStyle","TreeItem","collapseIcon","endIcon","expandIcon","iconProp","icon","label","onClick","onFocus","onKeyDown","onMouseDown","_props$TransitionComp","TransitionComponent","Collapse","TransitionProps","_React$useContext","contextIcons","nodeRef","contentRef","handleRef","useForkRef","expandable","Boolean","focused","theme","useTheme","ariaSelected","handleNextArrow","handlePreviousArrow","textContent","substring","flag","key","altKey","currentTarget","target","str","ctrlPressed","ctrlKey","metaKey","shiftKey","stopPropagation","direction","match","preventDefault","tabIndex","content","iconContainer","Typography","component","unmountOnExit","group","in","outline","WebkitTapHighlightColor","backgroundColor","palette","action","hover","fade","primary","main","selectedOpacity","hoverOpacity","marginLeft","width","display","alignItems","cursor","marginRight","flexShrink","justifyContent","fontSize","paddingLeft","position","useStyles","makeStyles","media","height","background","dark","likedButton","color","colors","red","subscribersIcon","spacing","editBox","descriptionArea","maxWidth","fontWeight","fontFamily","ProjectCard","project","rest","pickerInput","useRef","useState","saving","setSaving","file","setFile","cover","setCover","title","setTitle","description","setDescription","dispatch","useDispatch","Card","Box","p","type","style","onChange","e","newFile","files","url","URL","createObjectURL","_onFileInputHandler","click","CardMedia","image","mt","px","TextField","defaultValue","variant","pb","TextareaAutosize","rowsMin","py","SvgIcon","customers","Button","data","service","serviceId","setService","updateOverview","Overview","_id","Sortable","mount","MultiDrag","Swap","heading","todo","actionButton","CheckList","checkItems","headings","checkList","setCheckList","enqueueSnackbar","useSnackbar","Container","multiDrag","swap","setList","CheckItem","checkItem","updateItem","newTodo","removeItem","newCheckList","some","check_item","splice","removeCheckItem","flexDirection","axios","put","API_BASE_URL","SERVICE","UPDATE","check_list","then","SET_SERVICE","payload","catch","error","console","log","uuidv4","form","container","headingContent","labelTitle","fieldTitle","panel","treeView","treeItem","witdh","HeadingDetail","updateData","removeData","setHeading","field","setField","setValue","useEffect","HEADING_OPTIONS","Autocomplete","options","groupBy","option","getOptionLabel","renderInput","params","newValue","multiline","fullWidth","rows","Select","MenuItem","ml","size","subHeading","newSubHeading","flexGrow","minHeight","marginTop","Heading","updateHeadings","setExpanded","setSelected","selHeading","setSelHeading","Grid","nodeIds","subheading","newHeadings","indexChild","paddingRight","formButton","ReportTemplate","serviceHeadings","setHeadings","getReports","HeadingDetails","SET_HEADINGS","paddingTop","paddingBottom","ProjectDetailsView","currentTab","setCurrentTab","useSelector","state","getService","Page","Tabs","scrollButtons","textColor","tab","Tab","Divider","_props$raised","raised","Paper","elevation","overflow","MEDIA_COMPONENTS","_props$component","Component","src","isMediaComponent","composedStyle","backgroundImage","img","backgroundSize","backgroundRepeat","backgroundPosition","objectFit","flexWrap","panelBody","setForm","TABLE_COLUMNS","columns","setColumns","TABLE_DATA","tableData","setTableData","columnName","tableColumnExtensions","editingRowIds","setEditingRowIds","addedRows","setAddedRows","rowChanges","setRowChanges","inputValue","setInputValue","CHIPS","chips","setChips","table_columns","table_data","row","j","columnArray","aria-controls","xs","FORMS","FORM_DESCRIPTIONS","placeholder","column","newColumn","onUpdateItem","disableUnderline","searchInput","persist","onKeyUp","keyCode","includes","prevChips","chip","onDelete","prevChip","handleChipDelete","getRowId","onEditingRowIdsChange","onRowChangesChange","onAddedRowsChange","initialized","onCommitChanges","changedRows","added","changed","deleted","startingAddedId","deletedSet","Set","has","columnExtensions","showAddCommand","showEditCommand","showDeleteCommand"],"mappings":"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","file":"static/js/21.11ac5b9f.chunk.js","sourcesContent":["import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar TreeViewContext = React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  TreeViewContext.displayName = 'TreeViewContext';\n}\n\nexport default TreeViewContext;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"\n}), 'KeyboardArrowRight');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport TreeViewContext from './TreeViewContext';\nimport { withStyles } from '@material-ui/core/styles';\nimport { useControlled } from '@material-ui/core/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  }\n};\n\nfunction arrayDiff(arr1, arr2) {\n  if (arr1.length !== arr2.length) return true;\n\n  for (var i = 0; i < arr1.length; i += 1) {\n    if (arr1[i] !== arr2[i]) return true;\n  }\n\n  return false;\n}\n\nvar findNextFirstChar = function findNextFirstChar(firstChars, startIndex, char) {\n  for (var i = startIndex; i < firstChars.length; i += 1) {\n    if (char === firstChars[i]) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\nvar defaultExpandedDefault = [];\nvar defaultSelectedDefault = [];\nvar TreeView = React.forwardRef(function TreeView(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      defaultCollapseIcon = props.defaultCollapseIcon,\n      defaultEndIcon = props.defaultEndIcon,\n      _props$defaultExpande = props.defaultExpanded,\n      defaultExpanded = _props$defaultExpande === void 0 ? defaultExpandedDefault : _props$defaultExpande,\n      defaultExpandIcon = props.defaultExpandIcon,\n      defaultParentIcon = props.defaultParentIcon,\n      _props$defaultSelecte = props.defaultSelected,\n      defaultSelected = _props$defaultSelecte === void 0 ? defaultSelectedDefault : _props$defaultSelecte,\n      _props$disableSelecti = props.disableSelection,\n      disableSelection = _props$disableSelecti === void 0 ? false : _props$disableSelecti,\n      _props$multiSelect = props.multiSelect,\n      multiSelect = _props$multiSelect === void 0 ? false : _props$multiSelect,\n      expandedProp = props.expanded,\n      onNodeSelect = props.onNodeSelect,\n      onNodeToggle = props.onNodeToggle,\n      selectedProp = props.selected,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"defaultCollapseIcon\", \"defaultEndIcon\", \"defaultExpanded\", \"defaultExpandIcon\", \"defaultParentIcon\", \"defaultSelected\", \"disableSelection\", \"multiSelect\", \"expanded\", \"onNodeSelect\", \"onNodeToggle\", \"selected\"]);\n\n  var _React$useState = React.useState(null),\n      tabbable = _React$useState[0],\n      setTabbable = _React$useState[1];\n\n  var _React$useState2 = React.useState(null),\n      focusedNodeId = _React$useState2[0],\n      setFocusedNodeId = _React$useState2[1];\n\n  var nodeMap = React.useRef({});\n  var firstCharMap = React.useRef({});\n  var visibleNodes = React.useRef([]);\n\n  var _useControlled = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'TreeView'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      expanded = _useControlled2[0],\n      setExpandedState = _useControlled2[1];\n\n  var _useControlled3 = useControlled({\n    controlled: selectedProp,\n    default: defaultSelected,\n    name: 'TreeView'\n  }),\n      _useControlled4 = _slicedToArray(_useControlled3, 2),\n      selected = _useControlled4[0],\n      setSelectedState = _useControlled4[1];\n  /*\n   * Status Helpers\n   */\n\n\n  var isExpanded = React.useCallback(function (id) {\n    return Array.isArray(expanded) ? expanded.indexOf(id) !== -1 : false;\n  }, [expanded]);\n  var isSelected = React.useCallback(function (id) {\n    return Array.isArray(selected) ? selected.indexOf(id) !== -1 : selected === id;\n  }, [selected]);\n\n  var isTabbable = function isTabbable(id) {\n    return tabbable === id;\n  };\n\n  var isFocused = function isFocused(id) {\n    return focusedNodeId === id;\n  };\n  /*\n   * Node Helpers\n   */\n\n\n  var getNextNode = function getNextNode(id) {\n    var nodeIndex = visibleNodes.current.indexOf(id);\n\n    if (nodeIndex !== -1 && nodeIndex + 1 < visibleNodes.current.length) {\n      return visibleNodes.current[nodeIndex + 1];\n    }\n\n    return null;\n  };\n\n  var getPreviousNode = function getPreviousNode(id) {\n    var nodeIndex = visibleNodes.current.indexOf(id);\n\n    if (nodeIndex !== -1 && nodeIndex - 1 >= 0) {\n      return visibleNodes.current[nodeIndex - 1];\n    }\n\n    return null;\n  };\n\n  var getLastNode = function getLastNode() {\n    return visibleNodes.current[visibleNodes.current.length - 1];\n  };\n\n  var getFirstNode = function getFirstNode() {\n    return visibleNodes.current[0];\n  };\n\n  var getParent = function getParent(id) {\n    return nodeMap.current[id].parent;\n  };\n\n  var getNodesInRange = function getNodesInRange(a, b) {\n    var aIndex = visibleNodes.current.indexOf(a);\n    var bIndex = visibleNodes.current.indexOf(b);\n    var start = Math.min(aIndex, bIndex);\n    var end = Math.max(aIndex, bIndex);\n    return visibleNodes.current.slice(start, end + 1);\n  };\n  /*\n   * Focus Helpers\n   */\n\n\n  var focus = function focus(id) {\n    if (id) {\n      setTabbable(id);\n      setFocusedNodeId(id);\n    }\n  };\n\n  var focusNextNode = function focusNextNode(id) {\n    return focus(getNextNode(id));\n  };\n\n  var focusPreviousNode = function focusPreviousNode(id) {\n    return focus(getPreviousNode(id));\n  };\n\n  var focusFirstNode = function focusFirstNode() {\n    return focus(getFirstNode());\n  };\n\n  var focusLastNode = function focusLastNode() {\n    return focus(getLastNode());\n  };\n\n  var focusByFirstCharacter = function focusByFirstCharacter(id, char) {\n    var start;\n    var index;\n    var lowercaseChar = char.toLowerCase();\n    var firstCharIds = [];\n    var firstChars = []; // This really only works since the ids are strings\n\n    Object.keys(firstCharMap.current).forEach(function (nodeId) {\n      var firstChar = firstCharMap.current[nodeId];\n      var map = nodeMap.current[nodeId];\n      var visible = map.parent ? isExpanded(map.parent) : true;\n\n      if (visible) {\n        firstCharIds.push(nodeId);\n        firstChars.push(firstChar);\n      }\n    }); // Get start index for search based on position of currentItem\n\n    start = firstCharIds.indexOf(id) + 1;\n\n    if (start === nodeMap.current.length) {\n      start = 0;\n    } // Check remaining slots in the menu\n\n\n    index = findNextFirstChar(firstChars, start, lowercaseChar); // If not found in remaining slots, check from beginning\n\n    if (index === -1) {\n      index = findNextFirstChar(firstChars, 0, lowercaseChar);\n    } // If match was found...\n\n\n    if (index > -1) {\n      focus(firstCharIds[index]);\n    }\n  };\n  /*\n   * Expansion Helpers\n   */\n\n\n  var toggleExpansion = function toggleExpansion(event) {\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : focusedNodeId;\n    var newExpanded;\n\n    if (expanded.indexOf(value) !== -1) {\n      newExpanded = expanded.filter(function (id) {\n        return id !== value;\n      });\n      setTabbable(function (oldTabbable) {\n        var map = nodeMap.current[oldTabbable];\n\n        if (oldTabbable && (map && map.parent ? map.parent.id : null) === value) {\n          return value;\n        }\n\n        return oldTabbable;\n      });\n    } else {\n      newExpanded = [value].concat(_toConsumableArray(expanded));\n    }\n\n    if (onNodeToggle) {\n      onNodeToggle(event, newExpanded);\n    }\n\n    setExpandedState(newExpanded);\n  };\n\n  var expandAllSiblings = function expandAllSiblings(event, id) {\n    var map = nodeMap.current[id];\n    var parent = nodeMap.current[map.parent];\n    var diff;\n\n    if (parent) {\n      diff = parent.children.filter(function (child) {\n        return !isExpanded(child);\n      });\n    } else {\n      var topLevelNodes = nodeMap.current[-1].children;\n      diff = topLevelNodes.filter(function (node) {\n        return !isExpanded(node);\n      });\n    }\n\n    var newExpanded = [].concat(_toConsumableArray(expanded), _toConsumableArray(diff));\n    setExpandedState(newExpanded);\n\n    if (onNodeToggle) {\n      onNodeToggle(event, newExpanded);\n    }\n  };\n  /*\n   * Selection Helpers\n   */\n\n\n  var lastSelectedNode = React.useRef(null);\n  var lastSelectionWasRange = React.useRef(false);\n  var currentRangeSelection = React.useRef([]);\n\n  var handleRangeArrowSelect = function handleRangeArrowSelect(event, nodes) {\n    var base = selected;\n    var start = nodes.start,\n        next = nodes.next,\n        current = nodes.current;\n\n    if (!next || !current) {\n      return;\n    }\n\n    if (currentRangeSelection.current.indexOf(current) === -1) {\n      currentRangeSelection.current = [];\n    }\n\n    if (lastSelectionWasRange.current) {\n      if (currentRangeSelection.current.indexOf(next) !== -1) {\n        base = base.filter(function (id) {\n          return id === start || id !== current;\n        });\n        currentRangeSelection.current = currentRangeSelection.current.filter(function (id) {\n          return id === start || id !== current;\n        });\n      } else {\n        base.push(next);\n        currentRangeSelection.current.push(next);\n      }\n    } else {\n      base.push(next);\n      currentRangeSelection.current.push(current, next);\n    }\n\n    if (onNodeSelect) {\n      onNodeSelect(event, base);\n    }\n\n    setSelectedState(base);\n  };\n\n  var handleRangeSelect = function handleRangeSelect(event, nodes) {\n    var base = selected;\n    var start = nodes.start,\n        end = nodes.end; // If last selection was a range selection ignore nodes that were selected.\n\n    if (lastSelectionWasRange.current) {\n      base = selected.filter(function (id) {\n        return currentRangeSelection.current.indexOf(id) === -1;\n      });\n    }\n\n    var range = getNodesInRange(start, end);\n    currentRangeSelection.current = range;\n    var newSelected = base.concat(range);\n    newSelected = newSelected.filter(function (id, i) {\n      return newSelected.indexOf(id) === i;\n    });\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  var handleMultipleSelect = function handleMultipleSelect(event, value) {\n    var newSelected = [];\n\n    if (selected.indexOf(value) !== -1) {\n      newSelected = selected.filter(function (id) {\n        return id !== value;\n      });\n    } else {\n      newSelected = [value].concat(_toConsumableArray(selected));\n    }\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  var handleSingleSelect = function handleSingleSelect(event, value) {\n    var newSelected = multiSelect ? [value] : value;\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  var selectNode = function selectNode(event, id) {\n    var multiple = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (id) {\n      if (multiple) {\n        handleMultipleSelect(event, id);\n      } else {\n        handleSingleSelect(event, id);\n      }\n\n      lastSelectedNode.current = id;\n      lastSelectionWasRange.current = false;\n      currentRangeSelection.current = [];\n      return true;\n    }\n\n    return false;\n  };\n\n  var selectRange = function selectRange(event, nodes) {\n    var stacked = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var _nodes$start = nodes.start,\n        start = _nodes$start === void 0 ? lastSelectedNode.current : _nodes$start,\n        end = nodes.end,\n        current = nodes.current;\n\n    if (stacked) {\n      handleRangeArrowSelect(event, {\n        start: start,\n        next: end,\n        current: current\n      });\n    } else {\n      handleRangeSelect(event, {\n        start: start,\n        end: end\n      });\n    }\n\n    lastSelectionWasRange.current = true;\n    return true;\n  };\n\n  var rangeSelectToFirst = function rangeSelectToFirst(event, id) {\n    if (!lastSelectedNode.current) {\n      lastSelectedNode.current = id;\n    }\n\n    var start = lastSelectionWasRange.current ? lastSelectedNode.current : id;\n    return selectRange(event, {\n      start: start,\n      end: getFirstNode()\n    });\n  };\n\n  var rangeSelectToLast = function rangeSelectToLast(event, id) {\n    if (!lastSelectedNode.current) {\n      lastSelectedNode.current = id;\n    }\n\n    var start = lastSelectionWasRange.current ? lastSelectedNode.current : id;\n    return selectRange(event, {\n      start: start,\n      end: getLastNode()\n    });\n  };\n\n  var selectNextNode = function selectNextNode(event, id) {\n    return selectRange(event, {\n      end: getNextNode(id),\n      current: id\n    }, true);\n  };\n\n  var selectPreviousNode = function selectPreviousNode(event, id) {\n    return selectRange(event, {\n      end: getPreviousNode(id),\n      current: id\n    }, true);\n  };\n\n  var selectAllNodes = function selectAllNodes(event) {\n    return selectRange(event, {\n      start: getFirstNode(),\n      end: getLastNode()\n    });\n  };\n  /*\n   * Mapping Helpers\n   */\n\n\n  var addNodeToNodeMap = function addNodeToNodeMap(id, childrenIds) {\n    var currentMap = nodeMap.current[id];\n    nodeMap.current[id] = _extends({}, currentMap, {\n      children: childrenIds,\n      id: id\n    });\n    childrenIds.forEach(function (childId) {\n      var currentChildMap = nodeMap.current[childId];\n      nodeMap.current[childId] = _extends({}, currentChildMap, {\n        parent: id,\n        id: childId\n      });\n    });\n  };\n\n  var getNodesToRemove = React.useCallback(function (id) {\n    var map = nodeMap.current[id];\n    var nodes = [];\n\n    if (map) {\n      nodes.push(id);\n\n      if (map.children) {\n        nodes.push.apply(nodes, _toConsumableArray(map.children));\n        map.children.forEach(function (node) {\n          nodes.push.apply(nodes, _toConsumableArray(getNodesToRemove(node)));\n        });\n      }\n    }\n\n    return nodes;\n  }, []);\n  var removeNodeFromNodeMap = React.useCallback(function (id) {\n    var nodes = getNodesToRemove(id);\n\n    var newMap = _extends({}, nodeMap.current);\n\n    nodes.forEach(function (node) {\n      var map = newMap[node];\n\n      if (map) {\n        if (map.parent) {\n          var parentMap = newMap[map.parent];\n\n          if (parentMap && parentMap.children) {\n            var parentChildren = parentMap.children.filter(function (c) {\n              return c !== node;\n            });\n            newMap[map.parent] = _extends({}, parentMap, {\n              children: parentChildren\n            });\n          }\n        }\n\n        delete newMap[node];\n      }\n    });\n    nodeMap.current = newMap;\n    setFocusedNodeId(function (oldFocusedNodeId) {\n      if (oldFocusedNodeId === id) {\n        return null;\n      }\n\n      return oldFocusedNodeId;\n    });\n  }, [getNodesToRemove]);\n\n  var mapFirstChar = function mapFirstChar(id, firstChar) {\n    firstCharMap.current[id] = firstChar;\n  };\n\n  var prevChildIds = React.useRef([]);\n\n  var _React$useState3 = React.useState(false),\n      childrenCalculated = _React$useState3[0],\n      setChildrenCalculated = _React$useState3[1];\n\n  React.useEffect(function () {\n    var childIds = [];\n    React.Children.forEach(children, function (child) {\n      if (React.isValidElement(child) && child.props.nodeId) {\n        childIds.push(child.props.nodeId);\n      }\n    });\n\n    if (arrayDiff(prevChildIds.current, childIds)) {\n      nodeMap.current[-1] = {\n        parent: null,\n        children: childIds\n      };\n      childIds.forEach(function (id, index) {\n        if (index === 0) {\n          setTabbable(id);\n        }\n      });\n      visibleNodes.current = nodeMap.current[-1].children;\n      prevChildIds.current = childIds;\n      setChildrenCalculated(true);\n    }\n  }, [children]);\n  React.useEffect(function () {\n    var buildVisible = function buildVisible(nodes) {\n      var list = [];\n\n      for (var i = 0; i < nodes.length; i += 1) {\n        var item = nodes[i];\n        list.push(item);\n        var childs = nodeMap.current[item].children;\n\n        if (isExpanded(item) && childs) {\n          list = list.concat(buildVisible(childs));\n        }\n      }\n\n      return list;\n    };\n\n    if (childrenCalculated) {\n      visibleNodes.current = buildVisible(nodeMap.current[-1].children);\n    }\n  }, [expanded, childrenCalculated, isExpanded, children]);\n\n  var noopSelection = function noopSelection() {\n    return false;\n  };\n\n  return /*#__PURE__*/React.createElement(TreeViewContext.Provider, {\n    value: {\n      icons: {\n        defaultCollapseIcon: defaultCollapseIcon,\n        defaultExpandIcon: defaultExpandIcon,\n        defaultParentIcon: defaultParentIcon,\n        defaultEndIcon: defaultEndIcon\n      },\n      focus: focus,\n      focusFirstNode: focusFirstNode,\n      focusLastNode: focusLastNode,\n      focusNextNode: focusNextNode,\n      focusPreviousNode: focusPreviousNode,\n      focusByFirstCharacter: focusByFirstCharacter,\n      expandAllSiblings: expandAllSiblings,\n      toggleExpansion: toggleExpansion,\n      isExpanded: isExpanded,\n      isFocused: isFocused,\n      isSelected: isSelected,\n      selectNode: disableSelection ? noopSelection : selectNode,\n      selectRange: disableSelection ? noopSelection : selectRange,\n      selectNextNode: disableSelection ? noopSelection : selectNextNode,\n      selectPreviousNode: disableSelection ? noopSelection : selectPreviousNode,\n      rangeSelectToFirst: disableSelection ? noopSelection : rangeSelectToFirst,\n      rangeSelectToLast: disableSelection ? noopSelection : rangeSelectToLast,\n      selectAllNodes: disableSelection ? noopSelection : selectAllNodes,\n      isTabbable: isTabbable,\n      multiSelect: multiSelect,\n      getParent: getParent,\n      mapFirstChar: mapFirstChar,\n      addNodeToNodeMap: addNodeToNodeMap,\n      removeNodeFromNodeMap: removeNodeFromNodeMap\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", _extends({\n    role: \"tree\",\n    \"aria-multiselectable\": multiSelect,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? TreeView.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The default icon used to collapse the node.\n   */\n  defaultCollapseIcon: PropTypes.node,\n\n  /**\n   * The default icon displayed next to a end node. This is applied to all\n   * tree nodes and can be overridden by the TreeItem `icon` prop.\n   */\n  defaultEndIcon: PropTypes.node,\n\n  /**\n   * Expanded node ids. (Uncontrolled)\n   */\n  defaultExpanded: PropTypes.arrayOf(PropTypes.string),\n\n  /**\n   * The default icon used to expand the node.\n   */\n  defaultExpandIcon: PropTypes.node,\n\n  /**\n   * The default icon displayed next to a parent node. This is applied to all\n   * parent nodes and can be overridden by the TreeItem `icon` prop.\n   */\n  defaultParentIcon: PropTypes.node,\n\n  /**\n   * Selected node ids. (Uncontrolled)\n   * When `multiSelect` is true this takes an array of strings; when false (default) a string.\n   */\n  defaultSelected: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.string]),\n\n  /**\n   * If `true` selection is disabled.\n   */\n  disableSelection: PropTypes.bool,\n\n  /**\n   * Expanded node ids. (Controlled)\n   */\n  expanded: PropTypes.arrayOf(PropTypes.string),\n\n  /**\n   * If true `ctrl` and `shift` will trigger multiselect.\n   */\n  multiSelect: PropTypes.bool,\n\n  /**\n   * Callback fired when tree items are selected/unselected.\n   *\n   * @param {object} event The event source of the callback\n   * @param {(array|string)} value of the selected nodes. When `multiSelect` is true\n   * this is an array of strings; when false (default) a string.\n   */\n  onNodeSelect: PropTypes.func,\n\n  /**\n   * Callback fired when tree items are expanded/collapsed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {array} nodeIds The ids of the expanded nodes.\n   */\n  onNodeToggle: PropTypes.func,\n\n  /**\n   * Selected node ids. (Controlled)\n   * When `multiSelect` is true this takes an array of strings; when false (default) a string.\n   */\n  selected: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTreeView'\n})(TreeView);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\n/* eslint-disable jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions  */\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Collapse from '@material-ui/core/Collapse';\nimport { fade, withStyles, useTheme } from '@material-ui/core/styles';\nimport { useForkRef } from '@material-ui/core/utils';\nimport TreeViewContext from '../TreeView/TreeViewContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      listStyle: 'none',\n      margin: 0,\n      padding: 0,\n      outline: 0,\n      WebkitTapHighlightColor: 'transparent',\n      '&:focus > $content $label': {\n        backgroundColor: theme.palette.action.hover\n      },\n      '&$selected > $content $label': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n      },\n      '&$selected > $content $label:hover, &$selected:focus > $content $label': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the root element when expanded. */\n    expanded: {},\n\n    /* Pseudo-class applied to the root element when selected. */\n    selected: {},\n\n    /* Styles applied to the `role=\"group\"` element. */\n    group: {\n      margin: 0,\n      padding: 0,\n      marginLeft: 17\n    },\n\n    /* Styles applied to the tree node content. */\n    content: {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'center',\n      cursor: 'pointer'\n    },\n\n    /* Styles applied to the tree node icon and collapse/expand icon. */\n    iconContainer: {\n      marginRight: 4,\n      width: 15,\n      display: 'flex',\n      flexShrink: 0,\n      justifyContent: 'center',\n      '& svg': {\n        fontSize: 18\n      }\n    },\n\n    /* Styles applied to the label element. */\n    label: {\n      width: '100%',\n      paddingLeft: 4,\n      position: 'relative',\n      '&:hover': {\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }\n  };\n};\n\nvar isPrintableCharacter = function isPrintableCharacter(str) {\n  return str && str.length === 1 && str.match(/\\S/);\n};\n\nvar TreeItem = React.forwardRef(function TreeItem(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      collapseIcon = props.collapseIcon,\n      endIcon = props.endIcon,\n      expandIcon = props.expandIcon,\n      iconProp = props.icon,\n      label = props.label,\n      nodeId = props.nodeId,\n      onClick = props.onClick,\n      onFocus = props.onFocus,\n      onKeyDown = props.onKeyDown,\n      onMouseDown = props.onMouseDown,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Collapse : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"collapseIcon\", \"endIcon\", \"expandIcon\", \"icon\", \"label\", \"nodeId\", \"onClick\", \"onFocus\", \"onKeyDown\", \"onMouseDown\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  var _React$useContext = React.useContext(TreeViewContext),\n      contextIcons = _React$useContext.icons,\n      focus = _React$useContext.focus,\n      focusFirstNode = _React$useContext.focusFirstNode,\n      focusLastNode = _React$useContext.focusLastNode,\n      focusNextNode = _React$useContext.focusNextNode,\n      focusPreviousNode = _React$useContext.focusPreviousNode,\n      focusByFirstCharacter = _React$useContext.focusByFirstCharacter,\n      selectNode = _React$useContext.selectNode,\n      selectRange = _React$useContext.selectRange,\n      selectNextNode = _React$useContext.selectNextNode,\n      selectPreviousNode = _React$useContext.selectPreviousNode,\n      rangeSelectToFirst = _React$useContext.rangeSelectToFirst,\n      rangeSelectToLast = _React$useContext.rangeSelectToLast,\n      selectAllNodes = _React$useContext.selectAllNodes,\n      expandAllSiblings = _React$useContext.expandAllSiblings,\n      toggleExpansion = _React$useContext.toggleExpansion,\n      isExpanded = _React$useContext.isExpanded,\n      isFocused = _React$useContext.isFocused,\n      isSelected = _React$useContext.isSelected,\n      isTabbable = _React$useContext.isTabbable,\n      multiSelect = _React$useContext.multiSelect,\n      getParent = _React$useContext.getParent,\n      mapFirstChar = _React$useContext.mapFirstChar,\n      addNodeToNodeMap = _React$useContext.addNodeToNodeMap,\n      removeNodeFromNodeMap = _React$useContext.removeNodeFromNodeMap;\n\n  var nodeRef = React.useRef(null);\n  var contentRef = React.useRef(null);\n  var handleRef = useForkRef(nodeRef, ref);\n  var icon = iconProp;\n  var expandable = Boolean(Array.isArray(children) ? children.length : children);\n  var expanded = isExpanded ? isExpanded(nodeId) : false;\n  var focused = isFocused ? isFocused(nodeId) : false;\n  var tabbable = isTabbable ? isTabbable(nodeId) : false;\n  var selected = isSelected ? isSelected(nodeId) : false;\n  var icons = contextIcons || {};\n  var theme = useTheme();\n\n  if (!icon) {\n    if (expandable) {\n      if (!expanded) {\n        icon = expandIcon || icons.defaultExpandIcon;\n      } else {\n        icon = collapseIcon || icons.defaultCollapseIcon;\n      }\n\n      if (!icon) {\n        icon = icons.defaultParentIcon;\n      }\n    } else {\n      icon = endIcon || icons.defaultEndIcon;\n    }\n  }\n\n  var handleClick = function handleClick(event) {\n    if (!focused) {\n      focus(nodeId);\n    }\n\n    var multiple = multiSelect && (event.shiftKey || event.ctrlKey || event.metaKey); // If already expanded and trying to toggle selection don't close\n\n    if (expandable && !(multiple && isExpanded(nodeId))) {\n      toggleExpansion(event, nodeId);\n    }\n\n    if (multiple) {\n      if (event.shiftKey) {\n        selectRange(event, {\n          end: nodeId\n        });\n      } else {\n        selectNode(event, nodeId, true);\n      }\n    } else {\n      selectNode(event, nodeId);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  var handleMouseDown = function handleMouseDown(event) {\n    if (event.shiftKey || event.ctrlKey || event.metaKey) {\n      event.preventDefault();\n    }\n\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  };\n\n  var handleNextArrow = function handleNextArrow(event) {\n    if (expandable) {\n      if (expanded) {\n        focusNextNode(nodeId);\n      } else {\n        toggleExpansion(event);\n      }\n    }\n\n    return true;\n  };\n\n  var handlePreviousArrow = function handlePreviousArrow(event) {\n    if (expanded) {\n      toggleExpansion(event, nodeId);\n      return true;\n    }\n\n    var parent = getParent(nodeId);\n\n    if (parent) {\n      focus(parent);\n      return true;\n    }\n\n    return false;\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    var flag = false;\n    var key = event.key;\n\n    if (event.altKey || event.currentTarget !== event.target) {\n      return;\n    }\n\n    var ctrlPressed = event.ctrlKey || event.metaKey;\n\n    switch (key) {\n      case ' ':\n        if (nodeRef.current === event.currentTarget) {\n          if (multiSelect && event.shiftKey) {\n            flag = selectRange(event, {\n              end: nodeId\n            });\n          } else if (multiSelect) {\n            flag = selectNode(event, nodeId, true);\n          } else {\n            flag = selectNode(event, nodeId);\n          }\n        }\n\n        event.stopPropagation();\n        break;\n\n      case 'Enter':\n        if (nodeRef.current === event.currentTarget && expandable) {\n          toggleExpansion(event);\n          flag = true;\n        }\n\n        event.stopPropagation();\n        break;\n\n      case 'ArrowDown':\n        if (multiSelect && event.shiftKey) {\n          selectNextNode(event, nodeId);\n        }\n\n        focusNextNode(nodeId);\n        flag = true;\n        break;\n\n      case 'ArrowUp':\n        if (multiSelect && event.shiftKey) {\n          selectPreviousNode(event, nodeId);\n        }\n\n        focusPreviousNode(nodeId);\n        flag = true;\n        break;\n\n      case 'ArrowRight':\n        if (theme.direction === 'rtl') {\n          flag = handlePreviousArrow(event);\n        } else {\n          flag = handleNextArrow(event);\n        }\n\n        break;\n\n      case 'ArrowLeft':\n        if (theme.direction === 'rtl') {\n          flag = handleNextArrow(event);\n        } else {\n          flag = handlePreviousArrow(event);\n        }\n\n        break;\n\n      case 'Home':\n        if (multiSelect && ctrlPressed && event.shiftKey) {\n          rangeSelectToFirst(event, nodeId);\n        }\n\n        focusFirstNode();\n        flag = true;\n        break;\n\n      case 'End':\n        if (multiSelect && ctrlPressed && event.shiftKey) {\n          rangeSelectToLast(event, nodeId);\n        }\n\n        focusLastNode();\n        flag = true;\n        break;\n\n      default:\n        if (key === '*') {\n          expandAllSiblings(event, nodeId);\n          flag = true;\n        } else if (multiSelect && ctrlPressed && key.toLowerCase() === 'a') {\n          flag = selectAllNodes(event);\n        } else if (!ctrlPressed && !event.shiftKey && isPrintableCharacter(key)) {\n          focusByFirstCharacter(nodeId, key);\n          flag = true;\n        }\n\n    }\n\n    if (flag) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (!focused && event.currentTarget === event.target) {\n      focus(nodeId);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  React.useEffect(function () {\n    if (addNodeToNodeMap) {\n      var childIds = [];\n      React.Children.forEach(children, function (child) {\n        if (React.isValidElement(child) && child.props.nodeId) {\n          childIds.push(child.props.nodeId);\n        }\n      });\n      addNodeToNodeMap(nodeId, childIds);\n    }\n  }, [children, nodeId, addNodeToNodeMap]);\n  React.useEffect(function () {\n    if (removeNodeFromNodeMap) {\n      return function () {\n        removeNodeFromNodeMap(nodeId);\n      };\n    }\n\n    return undefined;\n  }, [nodeId, removeNodeFromNodeMap]);\n  React.useEffect(function () {\n    if (mapFirstChar && label) {\n      mapFirstChar(nodeId, contentRef.current.textContent.substring(0, 1).toLowerCase());\n    }\n  }, [mapFirstChar, nodeId, label]);\n  React.useEffect(function () {\n    if (focused) {\n      nodeRef.current.focus();\n    }\n  }, [focused]);\n  var ariaSelected;\n\n  if (multiSelect) {\n    ariaSelected = selected;\n  } else if (selected) {\n    // single-selection trees unset aria-selected\n    ariaSelected = true;\n  }\n\n  return /*#__PURE__*/React.createElement(\"li\", _extends({\n    className: clsx(classes.root, className, expanded && classes.expanded, selected && classes.selected),\n    role: \"treeitem\",\n    onKeyDown: handleKeyDown,\n    onFocus: handleFocus,\n    \"aria-expanded\": expandable ? expanded : null,\n    \"aria-selected\": ariaSelected,\n    ref: handleRef,\n    tabIndex: tabbable ? 0 : -1\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content,\n    onClick: handleClick,\n    onMouseDown: handleMouseDown,\n    ref: contentRef\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.iconContainer\n  }, icon), /*#__PURE__*/React.createElement(Typography, {\n    component: \"div\",\n    className: classes.label\n  }, label)), children && /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    unmountOnExit: true,\n    className: classes.group,\n    in: expanded,\n    component: \"ul\",\n    role: \"group\"\n  }, TransitionProps), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? TreeItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon used to collapse the node.\n   */\n  collapseIcon: PropTypes.node,\n\n  /**\n   * The icon displayed next to a end node.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * The icon used to expand the node.\n   */\n  expandIcon: PropTypes.node,\n\n  /**\n   * The icon to display next to the tree node's label.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The tree node label.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The id of the node.\n   */\n  nodeId: PropTypes.string.isRequired,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTreeItem'\n})(TreeItem);","import React, { useState, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  CardMedia,\n  Button,\n  SvgIcon,\n  TextField,\n  Typography,\n  colors,\n  makeStyles,\n  TextareaAutosize,\n} from '@material-ui/core';\nimport { Users as UsersIcon } from 'react-feather';\nimport { setService } from 'src/actions/serviceActions';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  media: {\n    height: 250,\n    backgroundColor: theme.palette.background.dark\n  },\n  likedButton: {\n    color: colors.red[600]\n  },\n  subscribersIcon: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(1)\n  },\n  editBox: {\n    justifyContent: 'space-between'\n  },\n  descriptionArea: {\n    height: 150,\n    maxWidth: 700,\n    fontSize: '1.2em',\n    fontWeight: 400,\n    fontFamily: 'inherit',\n    color: 'currentColor',\n    width: '100%',\n  }\n}));\n\nfunction ProjectCard({\n  className, project, ...rest\n}) {\n  const pickerInput = useRef();\n  const classes = useStyles();\n  const [saving, setSaving] = useState(false);\n  const [file, setFile] = useState(null);\n  const [cover, setCover] = useState(project.cover);\n  const [title, setTitle] = useState(project.title);\n  const [description, setDescription] = useState(project.description);\n  const dispatch = useDispatch();\n\n  const updateOverview = () => {\n    setSaving(false);\n    const data = {\n      service: {\n        title,\n        description,\n      },\n      file,\n      serviceId: project.id,\n    };\n    dispatch(setService(data));\n  };\n\n  const _onFileInputHandler = (event) => {\n    event.preventDefault();\n    const newFile = event.target.files[0];\n    const url = URL.createObjectURL(newFile);\n    setCover(url);\n    setFile(newFile);\n    setSaving(true);\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box p={3}>\n        <Box>\n          <input\n            ref={pickerInput}\n            type=\"file\"\n            style={{\n              display: 'none'\n            }}\n            onChange={(e) => { _onFileInputHandler(e); }}\n          />\n          <Box\n            onClick={() => {\n              pickerInput.current.click();\n            }}\n          >\n            { cover ? (\n              <CardMedia\n                className={classes.media}\n                image={cover}\n              />\n            ) : (\n              <CardMedia\n                className={classes.media}\n                image={cover}\n              />\n            )}\n          </Box>\n        </Box>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          mt={2}\n        >\n          <Box px={1}>\n            {saving\n              ? (\n                <TextField\n                  onChange={(e) => { setTitle(e.target.value); }}\n                  defaultValue={project.title}\n                />\n              ) : (\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"h5\"\n                >\n                  {project.title}\n                </Typography>\n              )}\n          </Box>\n        </Box>\n      </Box>\n      <Box\n        pb={2}\n        px={4}\n        display=\"flex\"\n      >\n        {saving\n          ? (\n            <TextareaAutosize\n              className={classes.descriptionArea}\n              onChange={(e) => { setDescription(e.target.value); }}\n              defaultValue={project.description}\n              rowsMin={3}\n            />\n          ) : (\n            <Typography\n              color=\"textSecondary\"\n              variant=\"body2\"\n            >\n              {project.description}\n            </Typography>\n          )}\n      </Box>\n      <Box\n        py={2}\n        px={3}\n        display=\"flex\"\n        className={classes.editBox}\n      >\n        <Box\n          display=\"flex\"\n        >\n          <SvgIcon\n            fontSize=\"small\"\n            color=\"action\"\n            className={classes.subscribersIcon}\n          >\n            <UsersIcon />\n          </SvgIcon>\n          <Typography\n            variant=\"subtitle2\"\n            color=\"textSecondary\"\n          >\n            {project.customers || 0}\n          </Typography>\n        </Box>\n        {saving ? <Button onClick={() => { updateOverview(); }}>Save</Button>\n          : <Button onClick={() => { setSaving(true); }}>Edit</Button>}\n      </Box>\n    </Card>\n  );\n}\n\nProjectCard.propTypes = {\n  className: PropTypes.string,\n  project: PropTypes.object.isRequired,\n  setProject: PropTypes.func,\n  setFile: PropTypes.func,\n};\n\nexport default ProjectCard;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n} from '@material-ui/core';\r\nimport ProjectCard from './ProjectCard';\r\n\r\nfunction Overview({ service }) {\r\n  return (\r\n    <Box mt={6}>\r\n      {service && (\r\n      <ProjectCard\r\n        project={{\r\n          id: service._id,\r\n          cover: service.cover,\r\n          title: service.title,\r\n          description: service.description\r\n        }}\r\n      />\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nOverview.propTypes = {\r\n  service: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Overview;\r\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport axios from 'src/utils/axios';\nimport { useSnackbar } from 'notistack';\nimport { v4 as uuidv4 } from 'uuid';\nimport {\n  ReactSortable, Sortable, MultiDrag, Swap\n} from 'react-sortablejs';\nimport {\n  Box,\n  Button,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport CheckItem from 'src/components/CheckItem';\nimport { API_BASE_URL } from 'src/config';\nimport { SERVICE } from 'src/config/endpoint';\nimport { SET_SERVICE } from 'src/actions/serviceActions';\n\nSortable.mount(new MultiDrag(), new Swap());\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  heading: {},\n  todo: {\n    backgroundColor: 'white'\n  },\n  description: {\n    maxWidth: '400px',\n    marginLeft: '20px',\n    width: '100%',\n  },\n  actionButton: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nfunction CheckList({\n  className, checkItems, headings, serviceId\n}) {\n  const classes = useStyles();\n  const [checkList, setCheckList] = useState(checkItems);\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const updateCheckList = () => {\n    axios.put(`${API_BASE_URL}/${SERVICE.UPDATE}/${serviceId}`, { check_list: checkList })\n      .then(() => {\n        dispatch({\n          type: SET_SERVICE,\n          payload: {\n            check_list: checkList,\n          }\n        });\n        enqueueSnackbar('Service updated', {\n          variant: 'success'\n        });\n      })\n      .catch((error) => {\n        console.log('service update error', error);\n      });\n  };\n\n  const removeCheckItem = (id) => {\n    const newCheckList = [...checkList];\n    newCheckList.some((check_item, index) => {\n      if (check_item._id === id) {\n        newCheckList.splice(index, 1);\n        setCheckList(newCheckList);\n      }\n    });\n  };\n\n  return (\n    <Container>\n      {checkList && (\n      <ReactSortable\n        multiDrag\n        swap\n        list={checkList}\n        setList={setCheckList}\n        className={clsx(classes.root, className)}\n      >\n        {checkList.map((todo, index) => (\n          <CheckItem\n            key={todo._id}\n            checkItem={todo}\n            headings={headings}\n            updateItem={(newTodo) => {\n              checkList[index] = newTodo;\n              setCheckList(checkList);\n            }}\n            removeItem={(id) => { removeCheckItem(id); }}\n          />\n        ))}\n      </ReactSortable>\n      )}\n      <Box\n        display=\"flex\"\n        flexDirection=\"row-reverse\"\n        mt={2}\n      >\n        <Button\n          className={classes.actionButton}\n          color=\"secondary\"\n          variant=\"contained\"\n          onClick={() => { updateCheckList(); }}\n        >\n          Update\n        </Button>\n        <Button\n          className={classes.actionButton}\n          color=\"secondary\"\n          variant=\"contained\"\n          onClick={() => {\n            if (checkList) {\n              setCheckList([...checkList, {\n                _id: uuidv4(),\n                form: '',\n                description: '',\n                expanded: true\n              }]);\n            } else {\n              setCheckList([{\n                _id: uuidv4(),\n                form: 'input',\n                description: '',\n                expanded: true\n              }]);\n            }\n          }}\n        >\n          Add To Do\n        </Button>\n      </Box>\n    </Container>\n  );\n}\n\nCheckList.propTypes = {\n  className: PropTypes.string,\n  serviceId: PropTypes.string.isRequired,\n  checkItems: PropTypes.array,\n  headings: PropTypes.array,\n};\n\nexport default CheckList;\n","/* eslint-disable react/no-array-index-key */\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { v4 as uuidv4 } from 'uuid';\nimport {\n  Box,\n  Button,\n  Container,\n  Card,\n  Typography,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { HEADING_OPTIONS } from 'src/constants';\n\nconst useStyles = makeStyles({\n  root: {\n    padding: 20,\n  },\n  container: {\n\n  },\n  headingContent: {\n    height: 300,\n  },\n  labelTitle: {\n    marginRight: 10,\n  },\n  fieldTitle: {\n    marginRight: 10,\n  },\n  panel: {\n    height: 500,\n  },\n  treeView: {\n\n  },\n  treeItem: {\n    witdh: 300,\n  }\n});\n\nfunction HeadingDetail({ data, updateData, removeData, }) {\n  const classes = useStyles();\n  const [saving, setSaving] = useState(false);\n  const [heading, setHeading] = useState(data);\n  const [field, setField] = useState(null);\n  const [value, setValue] = useState('');\n\n  useEffect(() => {\n    setHeading(data);\n    if (data && data.field) {\n      HEADING_OPTIONS.some((item) => {\n        if (item.name === data.field) {\n          setField(item);\n        }\n      });\n    }\n\n    if (data && data.value) {\n      setValue(data.value);\n    } else if (data && !data.value) {\n      setValue('');\n    }\n  }, [data]);\n\n  if (!data) {\n    return null;\n  }\n\n  const handleChangeHeadingLabel = (event) => {\n    if (value !== '') {\n      setHeading({ ...heading, label: event.target.value, value });\n    } else {\n      setHeading({ ...heading, label: event.target.value });\n    }\n  };\n\n  const handleSave = () => {\n    setSaving(false);\n    if (value !== '') {\n      updateData({ ...heading, field: field.name, value });\n    } else {\n      updateData({ ...heading, field: field.name });\n    }\n  };\n\n  const newSubHeading = () => {\n    const id = uuidv4();\n    const subHeading = { id, label: 'New SubHeading', field: 'label' };\n    if (heading && heading.children) {\n      updateData({ ...heading, children: [...heading.children, subHeading] });\n    } else {\n      updateData({ ...heading, children: [subHeading] });\n    }\n  };\n\n  return (\n    <Box\n      className={classes.root}\n    >\n      {heading && (\n      <Container\n        className={classes.container}\n      >\n        <Box\n          className={classes.headingContent}\n        >\n          <Box\n            mt={3}\n            display=\"flex\"\n          >\n            <Typography\n              className={classes.labelTitle}\n              color=\"textPrimary\"\n              variant=\"h4\"\n            >\n              Label:\n            </Typography>\n            {saving\n              ? (\n                <TextField\n                  onChange={(e) => { handleChangeHeadingLabel(e); }}\n                  value={heading.label}\n                />\n              ) : (\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"h5\"\n                >\n                  {heading.label}\n                </Typography>\n              )}\n          </Box>\n          <Box\n            mt={3}\n            display=\"flex\"\n            width={300}\n          >\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h4\"\n              className={classes.fieldTitle}\n            >\n              Field:\n            </Typography>\n            {saving\n              ? (\n                <Autocomplete\n                  id=\"grouped-demo\"\n                  value={field}\n                  options={HEADING_OPTIONS}\n                  groupBy={(option) => option.group}\n                  getOptionLabel={(option) => option.title}\n                  style={{ width: 300 }}\n                  renderInput={(params) => (<TextField {...params} label=\"With categories\" variant=\"outlined\" />)}\n                  onChange={(event, newValue) => {\n                    setField(newValue);\n                  }}\n                />\n              ) : (\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"h5\"\n                >\n                  {heading.field}\n                </Typography>\n              )}\n          </Box>\n          {(field && field.name === 'text_field') && (\n          <Box\n            mt={2}\n            display=\"flex\"\n            width={500}\n          >\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h4\"\n              className={classes.fieldTitle}\n            >\n              Input:\n            </Typography>\n            <TextField\n              value={value}\n              onChange={(event) => setValue(event.target.value)}\n              multiline\n              fullWidth\n              rows={6}\n              variant=\"outlined\"\n            />\n          </Box>\n          )}\n          {(field && field.name === 'select_field') && (\n          <Box\n            mt={2}\n            display=\"flex\"\n            width={500}\n          >\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h4\"\n              className={classes.fieldTitle}\n            >\n              Select:\n            </Typography>\n            <Select\n              value={value}\n              onChange={(event) => { setValue(event.target.value); }}\n            >\n              {HEADING_OPTIONS[2].value.map((item, index) => (\n                <MenuItem\n                  value={item}\n                  key={index}\n                >\n                  {item}\n                </MenuItem>\n              ))}\n            </Select>\n          </Box>\n          )}\n        </Box>\n        <Box\n          display=\"flex\"\n          flexDirection=\"row-reverse\"\n        >\n          <Box\n            ml={2}\n          >\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              size=\"small\"\n              onClick={() => { removeData(); }}\n            >\n              Remove\n            </Button>\n          </Box>\n          <Box\n            ml={2}\n          >\n            {saving\n              ? (\n                <Button\n                  color=\"secondary\"\n                  variant=\"contained\"\n                  size=\"small\"\n                  onClick={() => { handleSave(); }}\n                >\n                  Save\n                </Button>\n              ) : (\n                <Button\n                  color=\"secondary\"\n                  variant=\"contained\"\n                  size=\"small\"\n                  onClick={() => { setSaving(true); }}\n                >\n                  Edit\n                </Button>\n              )}\n          </Box>\n          {!heading.subHeading && (\n          <Box\n            ml={2}\n          >\n            <Button\n              color=\"secondary\"\n              variant=\"contained\"\n              size=\"small\"\n              onClick={() => { newSubHeading(); }}\n            >\n              New SubHeading\n            </Button>\n          </Box>\n          )}\n        </Box>\n      </Container>\n      )}\n    </Box>\n  );\n}\n\nHeadingDetail.propTypes = {\n  data: PropTypes.object,\n  updateData: PropTypes.func,\n  removeData: PropTypes.func,\n};\n\nexport default HeadingDetail;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Card,\n  Box,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport TreeView from '@material-ui/lab/TreeView';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport TreeItem from '@material-ui/lab/TreeItem';\nimport HeadingDetail from './HeadingDetail';\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    maxWidth: 1024,\n    backgroundColor: 'white',\n  },\n  container: {\n\n  },\n  panel: {\n    minHeight: 500,\n  },\n  treeView: {\n    marginTop: 20,\n  },\n  treeItem: {\n    witdh: 300,\n  }\n});\n\nfunction Heading({ className, headings, updateHeadings }) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = useState([]);\n  const [selected, setSelected] = useState(null);\n  const [selHeading, setSelHeading] = useState(null);\n  const handleToggle = (event, nodeIds) => {\n    setExpanded(nodeIds);\n  };\n\n  const handleSelect = (event, nodeId) => {\n    setSelected(nodeId);\n    headings.some((heading) => {\n      if (heading.id === nodeId) {\n        setSelHeading(heading);\n      } else if (heading.children) {\n        heading.children.some((child) => {\n          if (child.id === nodeId) {\n            setSelHeading({ ...child, subHeading: true });\n          }\n        });\n      }\n    });\n  };\n\n  const updateHeading = (data) => {\n    const newHeadings = [...headings];\n    newHeadings.some((heading, index) => {\n      if (heading.id === data.id) {\n        newHeadings[index] = data;\n        updateHeadings(newHeadings);\n      } else if (heading.children) {\n        heading.children.some((child, indexChild) => {\n          if (child.id === data.id) {\n            newHeadings[index].children[indexChild] = data;\n            updateHeadings(newHeadings);\n          }\n        });\n      }\n    });\n    setSelHeading(data);\n  };\n\n  const removeHeading = () => {\n    const newHeadings = [...headings];\n    newHeadings.some((heading, index) => {\n      if (heading.id === selHeading.id) {\n        newHeadings.splice(index, 1);\n        updateHeadings(newHeadings);\n      } else if (heading.children) {\n        heading.children.some((child, indexChild) => {\n          if (child.id === selHeading.id) {\n            newHeadings[index].children.splice(indexChild, 1);\n            updateHeadings(newHeadings);\n          }\n        });\n      }\n    });\n    setSelHeading(null);\n  };\n\n  return (\n    <Box\n      className={clsx(classes.root, className)}\n    >\n      <Box\n        className={classes.panel}\n        mt={3}\n        ml={1}\n        display=\"flex\"\n      >\n        <Grid\n          variant=\"outlined\"\n        >\n          <Typography\n            variant=\"h5\"\n          >\n            Headings\n          </Typography>\n          <TreeView\n            className={classes.treeView}\n            defaultCollapseIcon={<ExpandMoreIcon />}\n            defaultExpandIcon={<ChevronRightIcon />}\n            expanded={expanded}\n            selected={selected}\n            onNodeToggle={handleToggle}\n            onNodeSelect={handleSelect}\n          >\n            {headings.map((heading) => (\n              <TreeItem\n                className={classes.treeItem}\n                key={heading.id}\n                nodeId={heading.id}\n                label={heading.label}\n              >\n                { heading.children && (heading.children.map((subheading) => (\n                  <TreeItem\n                    className={classes.treeItem}\n                    key={subheading.id}\n                    nodeId={subheading.id}\n                    label={subheading.label}\n                  />\n                )))}\n              </TreeItem>\n            ))}\n          </TreeView>\n        </Grid>\n        {selHeading && (\n          <Grid>\n            <HeadingDetail\n              data={selHeading}\n              updateData={updateHeading}\n              removeData={removeHeading}\n            />\n          </Grid>\n        )}\n      </Box>\n    </Box>\n  );\n}\n\nHeading.propTypes = {\n  className: PropTypes.string,\n  headings: PropTypes.array,\n  updateHeadings: PropTypes.func,\n};\n\n\nexport default Heading;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { v4 as uuidv4 } from 'uuid';\nimport axios from 'src/utils/axios';\nimport {\n  Box,\n  TextField,\n  Typography,\n  Grid,\n  Button,\n  makeStyles\n} from '@material-ui/core';\nimport { getReports } from 'src/actions/reportActions';\nimport { SET_HEADINGS } from 'src/actions/serviceActions';\nimport { API_BASE_URL } from 'src/config';\nimport { SERVICE } from 'src/config/endpoint';\nimport HeadingDetails from './HeadingDetails';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: 30,\n    paddingRight: 30,\n  },\n  container: {\n    minHeight: 500,\n  },\n  formButton: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nfunction ReportTemplate({\n  className,\n  serviceHeadings,\n  serviceId,\n}) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [headings, setHeadings] = useState(serviceHeadings);\n  const { enqueueSnackbar } = useSnackbar();\n\n  useEffect(() => {\n    dispatch(getReports());\n  }, []);\n\n  // const handleChangeTemplate = (event) => {\n  //   const index = event.target.value;\n  //   setSelTemplate(reports[index]);\n  // };\n\n  const handleCreateHeading = () => {\n    setHeadings([...headings, { id: uuidv4(), label: 'New Heading' }]);\n  };\n\n  const handleUpdate = () => {\n    axios.put(`${API_BASE_URL}/${SERVICE.UPDATE}/${serviceId}`, {\n      headings,\n    })\n      .then(() => {\n        enqueueSnackbar('Report updated', {\n          variant: 'success',\n        });\n        dispatch({\n          type: SET_HEADINGS,\n          payload: headings,\n        });\n      })\n      .catch((error) => {\n        console.log('error', error);\n      });\n  };\n\n  return (\n    <Box mt={2}>\n      <Box\n        className={classes.container}\n      >\n        {/* <Grid>\n            <TextField\n              fullWidth\n              name=\"template\"\n              onChange={handleChangeTemplate}\n              select\n              SelectProps={{ native: true }}\n              variant=\"outlined\"\n            >\n              {reports.map((template, index) => (\n                <option\n                  key={template._id}\n                  value={index}\n                >\n                  {`${template.title}`}\n                </option>\n              ))}\n            </TextField>\n          </Grid>\n          {selTemplate && (\n          <Grid>\n            <HeadingItem\n              headings={selTemplate.headings}\n            />\n          </Grid>\n          )} */}\n\n        <HeadingDetails\n          headings={headings}\n          updateHeadings={(newHeadings) => { setHeadings(newHeadings); }}\n        />\n        <Box\n          display=\"flex\"\n          flexDirection=\"row-reverse\"\n          maxWidth={1024}\n          mt={2}\n        >\n          <Button\n            className={classes.formButton}\n            color=\"secondary\"\n            variant=\"contained\"\n            size=\"small\"\n            onClick={handleUpdate}\n          >\n            Update\n          </Button>\n          <Button\n            className={classes.formButton}\n            color=\"secondary\"\n            variant=\"contained\"\n            size=\"small\"\n            onClick={handleCreateHeading}\n          >\n            Create Heading\n          </Button>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\nReportTemplate.propTypes = {\n  className: PropTypes.string,\n  serviceHeadings: PropTypes.array,\n  serviceId: PropTypes.string,\n};\n\nexport default ReportTemplate;\n","/* eslint-disable react/destructuring-assignment */\nimport React, {\n  useState,\n  useEffect\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Box,\n  Container,\n  Divider,\n  Tabs,\n  Tab,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport { getService } from 'src/actions/serviceActions';\nimport Overview from './Overview';\nimport CheckList from './CheckList';\nimport ReportTemplate from './ReportTemplate';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nfunction ProjectDetailsView(props) {\n  const classes = useStyles();\n  const [currentTab, setCurrentTab] = useState('overview');\n  const dispatch = useDispatch();\n  // eslint-disable-next-line react/prop-types\n  const { serviceId } = props.match.params;\n  const { service } = useSelector((state) => state.service);\n  const tabs = [\n    { value: 'overview', label: 'Overview' },\n    { value: 'checklist', label: 'Check List' },\n    { value: 'report', label: 'Report' },\n  ];\n\n  const handleTabsChange = (event, value) => {\n    setCurrentTab(value);\n  };\n\n  useEffect(() => {\n    dispatch(getService(serviceId));\n  }, [dispatch]);\n\n  if (!service) {\n    return null;\n  }\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Project Details\"\n    >\n      <Container maxWidth=\"lg\">\n        {/* <Header project={service} /> */}\n        <Box mt={3}>\n          <Tabs\n            onChange={handleTabsChange}\n            scrollButtons=\"auto\"\n            textColor=\"secondary\"\n            value={currentTab}\n            variant=\"scrollable\"\n          >\n            {tabs.map((tab) => (\n              <Tab\n                key={tab.value}\n                label={tab.label}\n                value={tab.value}\n              />\n            ))}\n          </Tabs>\n        </Box>\n        <Divider />\n        <Box mt={3}>\n          {currentTab === 'overview' && <Overview service={service} />}\n          {currentTab === 'checklist' && (\n          <CheckList\n            serviceId={service._id}\n            checkItems={service.check_list}\n            headings={service.headings}\n          />\n          )}\n          {currentTab === 'report' && (\n          <ReportTemplate\n            serviceId={service._id}\n            serviceHeadings={service.headings}\n          />\n          )}\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n\nexport default ProjectDetailsView;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { chainPropTypes } from '@material-ui/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `component=\"picture or img\"`. */\n  img: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = React.forwardRef(function CardMedia(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media, \"picture img\".indexOf(Component) !== -1 && classes.img),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('Material-UI: either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Component for rendering image.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Chip,\n  Divider,\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  ExpansionPanelDetails,\n  Grid as GridRow,\n  Input,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {\n  FORMS, FORM_DESCRIPTIONS, TABLE_COLUMNS, TABLE_DATA, CHIPS\n} from 'src/constants';\n\nimport { EditingState } from '@devexpress/dx-react-grid';\nimport {\n  Grid,\n  Table,\n  TableHeaderRow,\n  TableEditRow,\n  TableEditColumn,\n} from '@devexpress/dx-react-grid-material-ui';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    flexGrow: 1,\n  },\n  heading: {},\n  todo: {\n    backgroundColor: 'white'\n  },\n  panel: {\n    flexWrap: 'wrap'\n  },\n  panelBody: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    padding: '0px'\n  },\n  description: {\n    maxWidth: '600px',\n    marginLeft: '10px',\n    width: '100%',\n  }\n}));\n\n\nfunction CheckItem({\n  checkItem, updateItem, removeItem, headings\n}) {\n  const classes = useStyles();\n  const [description, setDescription] = useState(checkItem.description);\n  const [form, setForm] = useState(checkItem.form);\n  const [heading, setHeading] = useState(headings[0]);\n\n  const getOptionLabel = (option) => {\n    for (let i = 0; i < FORM_DESCRIPTIONS.length; i++) {\n      if (FORM_DESCRIPTIONS[i].title === option) {\n        return FORM_DESCRIPTIONS[i].content;\n      }\n    }\n    return FORM_DESCRIPTIONS[0].content;\n  };\n\n  const [columns, setColumns] = useState(TABLE_COLUMNS);\n\n  const [tableData, setTableData] = useState(TABLE_DATA);\n\n  const [tableColumnExtensions] = useState([\n    { columnName: 'id', width: 60 },\n  ]);\n\n  const [editingRowIds, setEditingRowIds] = useState([]);\n  const [addedRows, setAddedRows] = useState([]);\n  const [rowChanges, setRowChanges] = useState({});\n\n  const [inputValue, setInputValue] = useState('');\n  const [chips, setChips] = useState(CHIPS);\n\n  useEffect(() => {\n    if (form === 'table' && checkItem.table_columns) {\n      setChips(checkItem.table_columns);\n    }\n\n    if (form === 'table' && checkItem.table_data) {\n      const table_data = [];\n      for (let i = 0; i < checkItem.table_data.length; i++) {\n        const row = {\n          id: i,\n        };\n        for (let j = 0; j < checkItem.table_columns.length; j++) {\n          const column = checkItem.table_columns[j];\n          row[column] = checkItem.table_data[i][j];\n        }\n        table_data.push(row);\n      }\n      setTableData(table_data);\n    }\n    headings.some((item) => {\n      if (item.id === checkItem.heading) {\n        setHeading(item);\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    const columnArray = [];\n    for (let i = 0; i < chips.length; i++) {\n      columnArray.push({ title: chips[i], name: chips[i] },);\n    }\n    setColumns(columnArray);\n  }, [chips]);\n\n  const getRowId = (row) => row.id;\n\n  const handleInputChange = (event) => {\n    event.persist();\n    setInputValue(event.target.value);\n  };\n\n  const handleInputKeyup = (event) => {\n    event.persist();\n\n    if (event.keyCode === 13 && inputValue) {\n      if (!chips.includes(inputValue)) {\n        setChips((prevChips) => [...prevChips, inputValue]);\n        setInputValue('');\n      }\n    }\n  };\n\n  const handleChipDelete = (chip) => {\n    setChips((prevChips) => prevChips.filter((prevChip) => chip !== prevChip));\n  };\n\n\n  const changeAddedRows = (value) => {\n    const initialized = value.map((row) => (Object.keys(row).length ? row : {}));\n    setAddedRows(initialized);\n  };\n\n\n  const commitChanges = ({ added, changed, deleted }) => {\n    let changedRows;\n    if (added) {\n      const startingAddedId = tableData.length > 0 ? tableData[tableData.length - 1].id + 1 : 0;\n      changedRows = [\n        ...tableData,\n        ...added.map((row, index) => ({\n          id: startingAddedId + index,\n          ...row,\n        })),\n      ];\n    }\n    if (changed) {\n      changedRows = tableData.map((row) => (changed[row.id] ? { ...row, ...changed[row.id] } : row));\n    }\n    if (deleted) {\n      const deletedSet = new Set(deleted);\n      changedRows = tableData.filter((row) => !deletedSet.has(row.id));\n    }\n    setTableData(changedRows);\n  };\n\n  const onUpdateItem = () => {\n    checkItem.description = description;\n    checkItem.form = form;\n    checkItem.heading = heading.id;\n    checkItem.expanded = false;\n    if (form === 'table') {\n      if (chips) {\n        checkItem.table_columns = chips;\n      }\n      if (tableData) {\n        const table_data = [];\n        for (let i = 0; i < tableData.length; i++) {\n          const row = [];\n          for (let j = 0; j < chips.length; j++) {\n            const column = chips[j];\n            const newColumn = tableData[i][column] || '';\n            row.push(newColumn);\n          }\n          table_data.push(row);\n        }\n        checkItem.table_data = table_data;\n      }\n    }\n    updateItem(checkItem);\n  };\n\n  const onRemoveItem = () => {\n    removeItem(checkItem._id);\n  };\n\n  return (\n    <>\n      <ExpansionPanel\n        defaultExpanded={checkItem.expanded}\n      >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n        >\n          <Typography className={classes.heading}>{description}</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails\n          className={classes.panel}\n        >\n          <GridRow\n            xs={12}\n            item\n            className={classes.panelBody}\n          >\n            <Autocomplete\n              value={heading}\n              options={headings}\n              getOptionLabel={(option) => option.label}\n              style={{ width: 300 }}\n              renderInput={(params) => <TextField {...params} label=\"Heading\" variant=\"outlined\" />}\n              onChange={(event, value) => {\n                setHeading(value);\n              }}\n            />\n            <Autocomplete\n              value={form}\n              options={FORMS}\n              getOptionLabel={(option) => getOptionLabel(option)}\n              style={{ width: 300 }}\n              renderInput={(params) => <TextField {...params} label=\"Form Type\" variant=\"outlined\" />}\n              onChange={(event, value) => {\n                setForm(value);\n              }}\n            />\n            <TextField\n              placeholder=\"Description\"\n              variant=\"outlined\"\n              label=\"Description\"\n              className={classes.description}\n              defaultValue={description}\n              onChange={(e) => {\n                setDescription(e.target.value);\n              }}\n            />\n            <Button onClick={() => { onUpdateItem(); }}>\n              Update\n            </Button>\n            <Button onClick={() => { onRemoveItem(); }}>\n              Remove\n            </Button>\n          </GridRow>\n          {(form === 'table')\n          && (\n            <>\n              <>\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                >\n                  <Input\n                    disableUnderline\n                    fullWidth\n                    className={classes.searchInput}\n                    onChange={handleInputChange}\n                    onKeyUp={handleInputKeyup}\n                    placeholder=\"Enter a keyword\"\n                    value={inputValue}\n                  />\n                </Box>\n                <Divider />\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  flexWrap=\"wrap\"\n                >\n                  {chips.map((chip) => (\n                    <Chip\n                      className={classes.chip}\n                      key={chip}\n                      label={chip}\n                      onDelete={() => handleChipDelete(chip)}\n                    />\n                  ))}\n                </Box>\n                <Divider />\n              </>\n              <>\n                <Grid\n                  rows={tableData}\n                  columns={columns}\n                  getRowId={getRowId}\n                >\n                  <EditingState\n                    editingRowIds={editingRowIds}\n                    onEditingRowIdsChange={setEditingRowIds}\n                    rowChanges={rowChanges}\n                    onRowChangesChange={setRowChanges}\n                    addedRows={addedRows}\n                    onAddedRowsChange={changeAddedRows}\n                    onCommitChanges={commitChanges}\n                  />\n                  <Table\n                    columnExtensions={tableColumnExtensions}\n                  />\n                  <TableHeaderRow />\n                  <TableEditRow />\n                  <TableEditColumn\n                    showAddCommand={!addedRows.length}\n                    showEditCommand\n                    showDeleteCommand\n                  />\n                </Grid>\n              </>\n            </>\n          )}\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </>\n  );\n}\n\nCheckItem.propTypes = {\n  checkItem: PropTypes.object,\n  updateItem: PropTypes.func,\n  removeItem: PropTypes.func,\n  headings: PropTypes.array,\n};\n\nexport default CheckItem;\n"],"sourceRoot":""}