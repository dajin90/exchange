{"version":3,"sources":["views/projects/ServiceBrowseView/Header.js","components/ProjectCard.js","views/projects/ServiceBrowseView/Results.js","views/projects/ServiceBrowseView/index.js"],"names":["useStyles","makeStyles","theme","root","actionIcon","marginRight","spacing","Header","className","rest","classes","Grid","alignItems","container","justify","clsx","item","Breadcrumbs","separator","fontSize","aria-label","Link","variant","color","to","component","RouterLink","Typography","Button","SvgIcon","media","height","backgroundColor","palette","background","dark","likedButton","colors","red","subscribersIcon","marginLeft","editBox","justifyContent","ProjectCard","project","showRemoveDialog","Card","Box","p","CardMedia","image","cover","display","mt","ml","title","pb","px","description","py","customers","_id","onClick","position","bottom","left","content","width","primary","main","sortButton","textTransform","letterSpacing","Results","dispatch","useDispatch","enqueueSnackbar","useSnackbar","React","useState","open","setOpen","mode","setMode","selService","setSelService","useTheme","fullScreen","useMediaQuery","breakpoints","down","services","useSelector","state","service","page","setPage","limit","useEffect","getServices","handleClose","removeCard","a","removeService","paginatedServices","slice","applyPagination","flexWrap","mb","length","ToggleButtonGroup","exclusive","onChange","event","value","size","ToggleButton","map","key","md","sm","xs","service_id","Pagination","count","e","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","autoFocus","minHeight","paddingTop","paddingBottom","ProjectBrowseView","Page","Container","maxWidth"],"mappings":"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","file":"static/js/42.ff3f3c2e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Breadcrumbs,\r\n  Button,\r\n  Grid,\r\n  Link,\r\n  SvgIcon,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport { PlusCircle as PlusIcon } from 'react-feather';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  actionIcon: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nfunction Header({ className, ...rest }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid\r\n      alignItems=\"center\"\r\n      container\r\n      justify=\"space-between\"\r\n      spacing={3}\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Grid item>\r\n        <Breadcrumbs\r\n          separator={<NavigateNextIcon fontSize=\"small\" />}\r\n          aria-label=\"breadcrumb\"\r\n        >\r\n          <Link\r\n            variant=\"body1\"\r\n            color=\"inherit\"\r\n            to=\"/app\"\r\n            component={RouterLink}\r\n          >\r\n            Dashboard\r\n          </Link>\r\n          <Link\r\n            variant=\"body1\"\r\n            color=\"inherit\"\r\n            to=\"/app/services\"\r\n            component={RouterLink}\r\n          >\r\n            Services\r\n          </Link>\r\n        </Breadcrumbs>\r\n        <Typography\r\n          variant=\"h3\"\r\n          color=\"textPrimary\"\r\n        >\r\n          All Services\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <Button\r\n          color=\"secondary\"\r\n          component={RouterLink}\r\n          to=\"/app/services/create\"\r\n          variant=\"contained\"\r\n        >\r\n          <SvgIcon\r\n            fontSize=\"small\"\r\n            className={classes.actionIcon}\r\n          >\r\n            <PlusIcon />\r\n          </SvgIcon>\r\n          Create service\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  CardMedia,\n  Link,\n  SvgIcon,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  Users as UsersIcon,\n  Edit as EditIcon,\n  Trash as TrashIcon,\n} from 'react-feather';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  media: {\n    height: 200,\n    backgroundColor: theme.palette.background.dark\n  },\n  likedButton: {\n    color: colors.red[600]\n  },\n  subscribersIcon: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(1)\n  },\n  editBox: {\n    justifyContent: 'space-between'\n  }\n}));\n\nfunction ProjectCard({\n  project, showRemoveDialog, className, ...rest\n}) {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box p={3}>\n        <CardMedia\n          className={classes.media}\n          image={project.cover}\n        />\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          mt={2}\n        >\n          <Box ml={2}>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h5\"\n            >\n              {project.title}\n            </Typography>\n          </Box>\n        </Box>\n      </Box>\n      <Box\n        pb={2}\n        px={4}\n        display=\"flex\"\n      >\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body2\"\n        >\n          {project.description}\n        </Typography>\n      </Box>\n      <Box\n        py={2}\n        px={3}\n        display=\"flex\"\n        className={classes.editBox}\n      >\n        <Box\n          display=\"flex\"\n        >\n          <SvgIcon\n            fontSize=\"small\"\n            color=\"action\"\n            className={classes.subscribersIcon}\n          >\n            <UsersIcon />\n          </SvgIcon>\n          <Typography\n            variant=\"subtitle2\"\n            color=\"textSecondary\"\n          >\n            {project.customers || 0}\n          </Typography>\n        </Box>\n        <Box\n          display=\"flex\"\n        >\n          <Typography\n            variant=\"subtitle2\"\n            color=\"textSecondary\"\n          >\n            <Link\n              component={RouterLink}\n              to={`/app/services/${project._id}`}\n            >\n              <EditIcon\n                fontSize=\"small\"\n              />\n            </Link>\n          </Typography>\n          <Typography\n            color=\"textSecondary\"\n            onClick={() => {\n              showRemoveDialog(project._id);\n            }}\n          >\n            <TrashIcon\n              fontSize=\"small\"\n            />\n          </Typography>\n        </Box>\n      </Box>\n    </Card>\n  );\n}\n\nProjectCard.propTypes = {\n  className: PropTypes.string,\n  project: PropTypes.object.isRequired,\n  showRemoveDialog: PropTypes.func,\n};\n\nexport default ProjectCard;","import React, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Grid,\n  ListItemText,\n  Menu,\n  MenuItem,\n  Typography,\n  useTheme,\n  useMediaQuery,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  ToggleButtonGroup,\n  ToggleButton,\n  Pagination\n} from '@material-ui/lab';\nimport { getServices, removeService } from 'src/actions/serviceActions';\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ProjectCard from 'src/components/ProjectCard';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  title: {\n    position: 'relative',\n    '&:after': {\n      position: 'absolute',\n      bottom: -8,\n      left: 0,\n      content: '\" \"',\n      height: 3,\n      width: 48,\n      backgroundColor: theme.palette.primary.main\n    }\n  },\n  sortButton: {\n    textTransform: 'none',\n    letterSpacing: 0,\n    marginRight: theme.spacing(2)\n  }\n}));\n\nfunction applyPagination(customers, page, limit) {\n  return customers.slice(page * limit, page * limit + limit);\n}\nfunction Results({ className, ...rest }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [open, setOpen] = React.useState(false);\n  const [mode, setMode] = useState('grid');\n  const [selService, setSelService] = useState(null);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n  const { services } = useSelector((state) => state.service);\n  const [page, setPage] = useState(0);\n  const [limit] = useState(6);\n\n  useEffect(() => {\n    dispatch(getServices());\n  }, [dispatch]);\n\n  const handleModeChange = (event, value) => {\n    setMode(value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const removeCard = async () => {\n    try {\n      await dispatch(removeService(selService));\n    } catch (error) {\n      enqueueSnackbar('Ooops!', {\n        variant: 'error'\n      });\n    }\n    setOpen(false);\n  };\n\n  const paginatedServices = applyPagination(services, page, limit);\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        flexWrap=\"wrap\"\n        mb={2}\n      >\n        <Typography\n          className={classes.title}\n          variant=\"h5\"\n          color=\"textPrimary\"\n        >\n          Showing\n          {' '}\n          {services && (services.length)}\n          {' '}\n          services\n        </Typography>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <ToggleButtonGroup\n            exclusive\n            onChange={handleModeChange}\n            size=\"small\"\n            value={mode}\n          >\n            <ToggleButton value=\"grid\">\n              <ViewModuleIcon />\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </Box>\n      </Box>\n      <Grid\n        container\n        spacing={3}\n      >\n        {paginatedServices && (paginatedServices.map((service) => (\n          <Grid\n            item\n            key={service._id}\n            md={mode === 'grid' ? 4 : 12}\n            sm={mode === 'grid' ? 6 : 12}\n            xs={12}\n          >\n            <ProjectCard\n              project={service}\n              showRemoveDialog={(service_id) => {\n                setOpen(true);\n                setSelService(service_id);\n              }}\n            />\n          </Grid>\n        )))}\n      </Grid>\n      <Box\n        mt={6}\n        display=\"flex\"\n        justifyContent=\"center\"\n      >\n        <Pagination\n          count={3}\n          onChange={(e, value) => {\n            setPage(value - 1);\n          }}\n        />\n      </Box>\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">Remove</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            This will permanently delete this service. Are you sure?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={removeCard} color=\"primary\">\n            Yes\n          </Button>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            No\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nResults.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Results;\n","import React from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport Results from './Results';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nfunction ProjectBrowseView() {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Project List\"\n    >\n      <Container maxWidth=\"lg\">\n        <Header />\n        {/* <Box mt={3}>\n          <Filter />\n        </Box> */}\n        <Box mt={6}>\n          <Results />\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n\nexport default ProjectBrowseView;\n"],"sourceRoot":""}