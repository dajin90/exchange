{"version":3,"sources":["views/management/CustomerEditView/Header.js","views/management/CustomerEditView/CustomerEditForm.js","views/management/CustomerEditView/index.js","../node_modules/@material-ui/icons/NavigateNext.js","hooks/useIsMountedRef.js","../node_modules/@material-ui/core/esm/internal/svg-icons/MoreHoriz.js","../node_modules/@material-ui/core/esm/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@material-ui/core/esm/Breadcrumbs/Breadcrumbs.js"],"names":["useStyles","makeStyles","root","Header","className","rest","classes","clsx","Breadcrumbs","separator","fontSize","aria-label","Link","variant","color","to","component","RouterLink","Typography","CustomerEditForm","customer","enqueueSnackbar","useSnackbar","initialValues","address","email","first_name","last_name","phone","state","city","validationSchema","Yup","shape","max","required","verified","onSubmit","values","a","resetForm","setErrors","setStatus","setSubmitting","axios","put","API_BASE_URL","CUSTOMER","UPDATE","_id","then","success","action","Button","catch","error","submit","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Card","CardContent","Grid","container","spacing","item","md","xs","TextField","Boolean","fullWidth","helperText","label","name","onBlur","onChange","value","Box","mt","type","disabled","theme","backgroundColor","palette","background","dark","minHeight","paddingTop","paddingBottom","CustomerCreateView","props","isMountedRef","useIsMountedRef","useState","setCustomer","customerId","match","params","getCustomer","useCallback","get","GET","response","current","data","useEffect","Page","title","Container","maxWidth","_interopRequireDefault","require","Object","defineProperty","exports","default","_react","_default","createElement","d","isMounted","useRef","createSvgIcon","React","withStyles","display","marginLeft","marginRight","grey","borderRadius","cursor","boxShadow","shadows","emphasize","icon","width","height","other","_objectWithoutProperties","ButtonBase","_extends","focusRipple","MoreHorizIcon","ref","children","_props$component","Component","_props$expandText","expandText","_props$itemsAfterColl","itemsAfterCollapse","_props$itemsBeforeCol","itemsBeforeCollapse","_props$maxItems","maxItems","_props$separator","_React$useState","expanded","setExpanded","allItems","toArray","filter","child","map","index","li","key","concat","ol","items","reduce","acc","length","push","insertSeparators","_toConsumableArray","slice","BreadcrumbCollapsed","onClick","renderItemsBeforeAndAfter","flexWrap","alignItems","padding","margin","listStyle","userSelect"],"mappings":"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","file":"static/js/28.2d0ab80b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Breadcrumbs,\r\n  Link,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nfunction Header({ className, ...rest }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Breadcrumbs\r\n        separator={<NavigateNextIcon fontSize=\"small\" />}\r\n        aria-label=\"breadcrumb\"\r\n      >\r\n        <Link\r\n          variant=\"body1\"\r\n          color=\"inherit\"\r\n          to=\"/app\"\r\n          component={RouterLink}\r\n        >\r\n          Dashboard\r\n        </Link>\r\n        <Link\r\n          variant=\"body1\"\r\n          color=\"inherit\"\r\n          to=\"/app/customers\"\r\n          component={RouterLink}\r\n        >\r\n          Customers\r\n        </Link>\r\n        <Typography\r\n          variant=\"body1\"\r\n          color=\"textPrimary\"\r\n        >\r\n          Edit Customer\r\n        </Typography>\r\n      </Breadcrumbs>\r\n      <Typography\r\n        variant=\"h3\"\r\n        color=\"textPrimary\"\r\n      >\r\n        Edit customer\r\n      </Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport { useSnackbar } from 'notistack';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Switch,\r\n  TextField,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport axios from 'src/utils/axios';\r\nimport { API_BASE_URL } from 'src/config';\r\nimport { CUSTOMER } from 'src/config/endpoint';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nfunction CustomerEditForm({\r\n  className,\r\n  customer,\r\n  ...rest\r\n}) {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        address: customer.address || '',\r\n        email: customer.email || '',\r\n        first_name: customer.first_name || '',\r\n        last_name: customer.last_name || '',\r\n        phone: customer.phone || '',\r\n        state: customer.state || '',\r\n        city: customer.city || '',\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        address: Yup.string().max(255),\r\n        email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n        first_name: Yup.string().max(255).required('First Name is required'),\r\n        last_name: Yup.string().max(255).required('Last Name is required'),\r\n        phone: Yup.string().max(15),\r\n        state: Yup.string().max(255),\r\n        city: Yup.string().max(255),\r\n        verified: Yup.bool()\r\n      })}\r\n      onSubmit={async (values, {\r\n        resetForm,\r\n        setErrors,\r\n        setStatus,\r\n        setSubmitting\r\n      }) => {\r\n        const {\r\n          first_name,\r\n          last_name,\r\n          email,\r\n          phone,\r\n          state,\r\n          city,\r\n          address,\r\n          verified\r\n        } = values;\r\n        axios.put(`${API_BASE_URL}/${CUSTOMER.UPDATE}/${customer._id}`, {\r\n          first_name,\r\n          last_name,\r\n          email,\r\n          phone,\r\n          state,\r\n          city,\r\n          address,\r\n          verified\r\n        })\r\n          .then(() => {\r\n            setStatus({ success: true });\r\n            setSubmitting(false);\r\n            enqueueSnackbar('Customer updated', {\r\n              variant: 'success',\r\n              action: <Button>Customer updated</Button>\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            setStatus({ success: false });\r\n            setErrors({ submit: error.message });\r\n            setSubmitting(false);\r\n          });\r\n      }}\r\n    >\r\n      {({\r\n        errors,\r\n        handleBlur,\r\n        handleChange,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        touched,\r\n        values\r\n      }) => (\r\n        <form\r\n          className={clsx(classes.root, className)}\r\n          onSubmit={handleSubmit}\r\n          {...rest}\r\n        >\r\n\r\n          <Card>\r\n            <CardContent>\r\n\r\n              <Grid\r\n                container\r\n                spacing={3}\r\n              >\r\n                <Grid\r\n                  item\r\n                  md={6}\r\n                  xs={12}\r\n                >\r\n                  <TextField\r\n                    error={Boolean(touched.email && errors.email)}\r\n                    fullWidth\r\n                    helperText={touched.email && errors.email}\r\n                    label=\"Email address\"\r\n                    name=\"email\"\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    required\r\n                    value={values.email}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  md={3}\r\n                  xs={6}\r\n                >\r\n                  <TextField\r\n                    error={Boolean(touched.first_name && errors.first_name)}\r\n                    fullWidth\r\n                    helperText={touched.first_name && errors.first_name}\r\n                    label=\"First name\"\r\n                    name=\"first_name\"\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    required\r\n                    value={values.first_name}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  md={3}\r\n                  xs={6}\r\n                >\r\n                  <TextField\r\n                    error={Boolean(touched.last_name && errors.last_name)}\r\n                    fullWidth\r\n                    helperText={touched.last_name && errors.last_name}\r\n                    label=\"Last name\"\r\n                    name=\"last_name\"\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    required\r\n                    value={values.last_name}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  md={6}\r\n                  xs={12}\r\n                >\r\n                  <TextField\r\n                    error={Boolean(touched.phone && errors.phone)}\r\n                    fullWidth\r\n                    helperText={touched.phone && errors.phone}\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    value={values.phone}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  md={6}\r\n                  xs={12}\r\n                >\r\n                  <TextField\r\n                    error={Boolean(touched.state && errors.state)}\r\n                    fullWidth\r\n                    helperText={touched.state && errors.state}\r\n                    label=\"State/Region\"\r\n                    name=\"state\"\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    value={values.state}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  md={6}\r\n                  xs={12}\r\n                >\r\n                  <TextField\r\n                    error={Boolean(touched.city && errors.city)}\r\n                    fullWidth\r\n                    helperText={touched.city && errors.city}\r\n                    label=\"City\"\r\n                    name=\"city\"\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    value={values.city}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  md={6}\r\n                  xs={12}\r\n                >\r\n                  <TextField\r\n                    error={Boolean(touched.address && errors.address)}\r\n                    fullWidth\r\n                    helperText={touched.address && errors.address}\r\n                    label=\"Address\"\r\n                    name=\"address\"\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    value={values.address}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Box mt={2}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  type=\"submit\"\r\n                  disabled={isSubmitting}\r\n                >\r\n                  Update Customer\r\n                </Button>\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nCustomerEditForm.propTypes = {\r\n  className: PropTypes.string,\r\n  customer: PropTypes.object.isRequired\r\n};\r\n\r\nexport default CustomerEditForm;\r\n","/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/prop-types */\r\nimport React, {\r\n  useState,\r\n  useCallback,\r\n  useEffect\r\n} from 'react';\r\nimport { Box, Container, makeStyles } from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport axios from 'src/utils/axios';\r\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\r\nimport { API_BASE_URL } from 'src/config';\r\nimport { CUSTOMER } from 'src/config/endpoint';\r\nimport Header from './Header';\r\nimport CustomerEditForm from './CustomerEditForm';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingTop: theme.spacing(3),\r\n    paddingBottom: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nfunction CustomerCreateView(props) {\r\n  const classes = useStyles();\r\n  const isMountedRef = useIsMountedRef();\r\n  const [customer, setCustomer] = useState();\r\n  const { customerId } = props.match.params;\r\n\r\n  const getCustomer = useCallback(() => {\r\n    axios\r\n      .get(`${API_BASE_URL}/${CUSTOMER.GET}/${customerId}`)\r\n      .then((response) => {\r\n        if (isMountedRef.current) {\r\n          setCustomer(response.data.customer);\r\n        }\r\n      });\r\n  }, [isMountedRef]);\r\n\r\n  useEffect(() => {\r\n    getCustomer();\r\n  }, [getCustomer]);\r\n\r\n  if (!customer) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Customer Edit\"\r\n    >\r\n      <Container maxWidth=\"md\">\r\n        <Box mt={3}>\r\n          <Header />\r\n          <CustomerEditForm customer={customer} />\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n\r\nexport default CustomerCreateView;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'NavigateNext');\n\nexports.default = _default;","import { useRef, useEffect } from 'react';\r\n\r\nexport default function useIsMountedRef() {\r\n  const isMounted = useRef(true);\r\n\r\n  useEffect(() => () => {\r\n    isMounted.current = false;\r\n  }, []);\r\n\r\n  return isMounted;\r\n}\r\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(0.5),\n      backgroundColor: theme.palette.grey[100],\n      color: theme.palette.grey[700],\n      borderRadius: 2,\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: theme.palette.grey[200]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[0],\n        backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n      }\n    },\n    icon: {\n      width: 24,\n      height: 16\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction BreadcrumbCollapsed(props) {\n  var classes = props.classes,\n      other = _objectWithoutProperties(props, [\"classes\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    component: \"li\",\n    className: classes.root,\n    focusRipple: true\n  }, other), /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    className: classes.icon\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateBreadcrumbCollapsed'\n})(BreadcrumbCollapsed);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the li element. */\n  li: {},\n\n  /* Styles applied to the separator element. */\n  separator: {\n    display: 'flex',\n    userSelect: 'none',\n    marginLeft: 8,\n    marginRight: 8\n  }\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/React.createElement(\"li\", {\n        \"aria-hidden\": true,\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$expandText = props.expandText,\n      expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      expanded = _React$useState[0],\n      setExpanded = _React$useState[1];\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand() {\n      setExpanded(true);\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: you have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [/*#__PURE__*/React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: the Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return React.isValidElement(child);\n  }).map(function (child, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.li,\n      key: \"child-\".concat(index)\n    }, child);\n  });\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), /*#__PURE__*/React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   * By default, it maps the variant to a good default headline component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);"],"sourceRoot":""}