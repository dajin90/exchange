{"version":3,"sources":["../node_modules/@material-ui/icons/ReceiptOutlined.js","../node_modules/@material-ui/core/esm/CardActions/CardActions.js","views/management/JobDetailsView/Header.js","views/management/JobDetailsView/CustomerInfo.js","views/management/JobDetailsView/CheckList.js","views/management/JobDetailsView/OverView.js","views/management/JobDetailsView/index.js","../node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","../node_modules/react-feather/dist/icons/edit.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","CardActions","React","props","ref","_props$disableSpacing","disableSpacing","classes","className","other","_objectWithoutProperties","_extends","clsx","root","spacing","withStyles","display","alignItems","padding","marginLeft","name","makeStyles","theme","actionIcon","marginRight","Header","useStyles","marginTop","statusOptions","CustomerInfo","customer","rest","useState","Card","CardHeader","title","Divider","Table","TableBody","TableRow","TableCell","Link","component","RouterLink","to","_id","first_name","last_name","state","city","address","Button","CheckList","check_list","Box","minWidth","TableHead","map","item","key","description","currency","TablePagination","count","length","onChangePage","onChangeRowsPerPage","page","rowsPerPage","rowsPerPageOptions","OverView","job","history","useHistory","service","zip_code","moment","created_at","format","onClick","push","backgroundColor","palette","background","dark","minHeight","paddingTop","paddingBottom","JobDetailsView","jobId","useDispatch","match","params","setJob","useEffect","axios","get","API_BASE_URL","JOB","GET","then","res","data","Page","Container","maxWidth","mt","Grid","container","md","xl","xs","action","avatar","_props$component","Component","_props$disableTypogra","disableTypography","subheaderProp","subheader","subheaderTypographyProps","titleProp","titleTypographyProps","type","Typography","variant","color","content","flex","alignSelf","assign","target","i","arguments","source","prototype","hasOwnProperty","call","apply","this","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Edit","size","otherProps","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","propTypes","PropTypes","string","oneOfType","number","defaultProps"],"mappings":"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","file":"static/js/27.fe7c8dfb.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19.5 3.5L18 2l-1.5 1.5L15 2l-1.5 1.5L12 2l-1.5 1.5L9 2 7.5 3.5 6 2 4.5 3.5 3 2v20l1.5-1.5L6 22l1.5-1.5L9 22l1.5-1.5L12 22l1.5-1.5L15 22l1.5-1.5L18 22l1.5-1.5L21 22V2l-1.5 1.5zM19 19.09H5V4.91h14v14.18zM6 15h12v2H6zm0-4h12v2H6zm0-4h12v2H6z\"\n}), 'ReceiptOutlined');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Breadcrumbs,\r\n  Button,\r\n  Grid,\r\n  Link,\r\n  SvgIcon,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { Edit as EditIcon } from 'react-feather';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  actionIcon: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nfunction Header({ order, className, ...rest }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid\r\n      className={clsx(classes.root, className)}\r\n      container\r\n      justify=\"space-between\"\r\n      spacing={3}\r\n      {...rest}\r\n    >\r\n      <Grid item>\r\n        <Breadcrumbs\r\n          separator={<NavigateNextIcon fontSize=\"small\" />}\r\n          aria-label=\"breadcrumb\"\r\n        >\r\n          <Link\r\n            variant=\"body1\"\r\n            color=\"inherit\"\r\n            to=\"/app\"\r\n            component={RouterLink}\r\n          >\r\n            Dashboard\r\n          </Link>\r\n          <Link\r\n            variant=\"body1\"\r\n            color=\"inherit\"\r\n            to=\"/app/management\"\r\n            component={RouterLink}\r\n          >\r\n            Management\r\n          </Link>\r\n          <Typography\r\n            variant=\"body1\"\r\n            color=\"textPrimary\"\r\n          >\r\n            Orders\r\n          </Typography>\r\n        </Breadcrumbs>\r\n        <Typography\r\n          variant=\"h3\"\r\n          color=\"textPrimary\"\r\n        >\r\n          Order Details\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <Button\r\n          color=\"secondary\"\r\n          variant=\"contained\"\r\n        >\r\n          <SvgIcon\r\n            fontSize=\"small\"\r\n            className={classes.actionIcon}\r\n          >\r\n            <EditIcon />\r\n          </SvgIcon>\r\n          Edit\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string,\r\n  order: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardHeader,\n  Divider,\n  Link,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport ReceiptIcon from '@material-ui/icons/ReceiptOutlined';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst statusOptions = ['Canceled', 'Completed', 'Rejected'];\n\nfunction CustomerInfo({ customer, className, ...rest }) {\n  const classes = useStyles();\n  const [status, setStatus] = useState(statusOptions[0]);\n\n  if (!customer) {\n    return null;\n  }\n\n  const handleChange = (event) => {\n    event.persist();\n    setStatus(event.target.value);\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"Customer info\" />\n      <Divider />\n      <Table>\n        <TableBody>\n          <TableRow>\n            <TableCell>Customer</TableCell>\n            <TableCell>\n              <Link\n                component={RouterLink}\n                to={`/app/customers/${customer._id}/edit`}\n              >\n                {`${customer.first_name} ${customer.last_name}`}\n              </Link>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>State</TableCell>\n            <TableCell>\n              <div>{customer.state}</div>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>City</TableCell>\n            <TableCell>{customer.city}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>Address</TableCell>\n            <TableCell>\n              {customer.address}\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n      {/* <CardActions>\n        <Button>\n          <ReceiptIcon className={classes.actionIcon} />\n          Resend invoice\n        </Button>\n      </CardActions> */}\n      <CardActions>\n        <Button>\n          <ReceiptIcon className={classes.actionIcon} />\n          Edit\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nCustomerInfo.propTypes = {\n  className: PropTypes.string,\n  customer: PropTypes.object.isRequired\n};\n\nexport default CustomerInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction CheckList({ check_list, className, ...rest }) {\n  const classes = useStyles();\n\n  if (!check_list) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"Check List\" />\n      <Divider />\n      <PerfectScrollbar>\n        <Box minWidth={700}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  Description\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {check_list && check_list.map((item) => (\n                <TableRow key={item._id}>\n                  <TableCell>\n                    {item.description}\n                  </TableCell>\n                  <TableCell>\n                    {item.currency}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={check_list.length}\n        onChangePage={() => {}}\n        onChangeRowsPerPage={() => {}}\n        page={0}\n        rowsPerPage={5}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n}\n\nCheckList.propTypes = {\n  className: PropTypes.string,\n  check_list: PropTypes.array.isRequired\n};\n\nexport default CheckList;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { useHistory } from 'react-router';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardHeader,\n  Divider,\n  Link,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport ReceiptIcon from '@material-ui/icons/ReceiptOutlined';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n  },\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst statusOptions = ['Canceled', 'Completed', 'Rejected'];\n\nfunction OverView({ job, className, ...rest }) {\n  const classes = useStyles();\n  const history = useHistory();\n  const [status, setStatus] = useState(statusOptions[0]);\n\n  if (!job) {\n    return null;\n  }\n\n  const handleChange = (event) => {\n    event.persist();\n    setStatus(event.target.value);\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"Overview\" />\n      <Divider />\n      <Table>\n        <TableBody>\n          <TableRow>\n            <TableCell>Title</TableCell>\n            <TableCell>\n              {/* <Link\n                component={RouterLink}\n                to=\"/app/management/customers/1\"\n              > */}\n              <div>\n                {job.title}\n              </div>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>Description</TableCell>\n            <TableCell>\n              <div>\n                {job.description}\n              </div>\n            </TableCell>\n          </TableRow>\n          { job.service && (\n          <TableRow>\n            <TableCell>Service</TableCell>\n            <TableCell>\n              <Link\n                component={RouterLink}\n                to={`/app/services/${job.service._id}`}\n              >\n                {job.service ? job.service.title : ''}\n              </Link>\n            </TableCell>\n          </TableRow>\n          )}\n          <TableRow>\n            <TableCell>Location</TableCell>\n            <TableCell>\n              <div>{job.address}</div>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>Zip Code</TableCell>\n            <TableCell>\n              <div>{job.zip_code}</div>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>Created Date</TableCell>\n            <TableCell>\n              {moment(job.created_at).format('DD/MM/YYYY HH:MM')}\n            </TableCell>\n          </TableRow>\n          {/* <TableRow>\n            <TableCell>Status</TableCell>\n            <TableCell>\n              <TextField\n                fullWidth\n                name=\"option\"\n                onChange={handleChange}\n                select\n                SelectProps={{ native: true }}\n                value={status}\n                variant=\"outlined\"\n              >\n                {statusOptions.map((option) => (\n                  <option\n                    key={option}\n                    value={option}\n                  >\n                    {option}\n                  </option>\n                ))}\n              </TextField>\n            </TableCell>\n          </TableRow> */}\n        </TableBody>\n      </Table>\n      <CardActions>\n        <Button\n          onClick={() => {\n            history.push(`/app/jobs/${job._id}/edit`);\n          }}\n        >\n          <ReceiptIcon className={classes.actionIcon} />\n          Edit\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nOverView.propTypes = {\n  className: PropTypes.string,\n  job: PropTypes.object.isRequired\n};\n\nexport default OverView;\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/prop-types */\nimport React, {\n  useEffect,\n  useState\n} from 'react';\nimport {\n  useDispatch,\n  useSelector\n} from 'react-redux';\nimport axios from 'src/utils/axios';\nimport { API_BASE_URL } from 'src/config';\nimport { JOB } from 'src/config/endpoint';\nimport {\n  Box,\n  Container,\n  Divider,\n  Grid,\n  Tabs,\n  Tab,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport CustomerInfo from './CustomerInfo';\nimport CheckList from './CheckList';\nimport OverView from './OverView';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nfunction JobDetailsView(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { jobId } = props.match.params;\n  const [job, setJob] = useState(null);\n\n  const getJob = () => {\n    axios.get(`${API_BASE_URL}/${JOB.GET}/${jobId}`,)\n      .then((res) => {\n        setJob(res.data.job);\n      });\n  };\n\n  useEffect(() => {\n    getJob();\n  }, []);\n\n  if (!job) {\n    return null;\n  }\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Job Detail\"\n    >\n      <Container maxWidth={false}>\n        {/* <Header order={job} /> */}\n        <Box mt={2}>\n          <Grid\n            container\n            spacing={3}\n            mt={2}\n          >\n            { job.customer && (\n            <Grid\n              item\n              md={4}\n              xl={3}\n              xs={12}\n            >\n              <OverView job={job} />\n              <CustomerInfo customer={job.customer} />\n            </Grid>\n            )}\n            <Grid\n              item\n              md={8}\n              xl={9}\n              xs={12}\n            >\n              <CheckList check_list={job.check_list} />\n            </Grid>\n          </Grid>\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n\nexport default JobDetailsView;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar Edit = function Edit(props) {\n  var color = props.color,\n      size = props.size,\n      otherProps = _objectWithoutProperties(props, [\"color\", \"size\"]);\n\n  return React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, otherProps), React.createElement(\"path\", {\n    d: \"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"\n  }), React.createElement(\"path\", {\n    d: \"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"\n  }));\n};\n\nEdit.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nEdit.defaultProps = {\n  color: 'currentColor',\n  size: '24'\n};\nexport default Edit;"],"sourceRoot":""}