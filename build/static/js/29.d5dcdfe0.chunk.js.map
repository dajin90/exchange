{"version":3,"sources":["views/management/JobDetailEditView/Header.js","views/management/JobDetailEditView/JobEditForm.js","views/management/JobDetailEditView/index.js","../node_modules/@material-ui/icons/NavigateNext.js","hooks/useIsMountedRef.js","../node_modules/@material-ui/core/esm/internal/svg-icons/MoreHoriz.js","../node_modules/@material-ui/core/esm/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@material-ui/core/esm/Breadcrumbs/Breadcrumbs.js"],"names":["useStyles","makeStyles","root","Header","className","rest","classes","clsx","Breadcrumbs","separator","fontSize","aria-label","Link","variant","color","to","component","RouterLink","Typography","JobEditForm","job","enqueueSnackbar","useSnackbar","initialValues","title","description","state","city","address","zip_code","onSubmit","values","a","resetForm","setErrors","setStatus","setSubmitting","axios","put","API_BASE_URL","JOB","UPDATE","_id","then","success","action","Button","catch","error","submit","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Card","CardContent","Grid","container","spacing","item","md","xs","TextField","fullWidth","label","name","onBlur","onChange","required","value","multiline","rows","Boolean","helperText","Box","mt","type","disabled","theme","backgroundColor","palette","background","dark","minHeight","paddingTop","paddingBottom","JobDetailEditView","props","isMountedRef","useIsMountedRef","useState","setJob","jobId","match","params","getJob","useCallback","get","GET","response","current","data","useEffect","Page","Container","maxWidth","_interopRequireDefault","require","Object","defineProperty","exports","default","_react","_default","createElement","d","isMounted","useRef","createSvgIcon","React","withStyles","display","marginLeft","marginRight","grey","borderRadius","cursor","boxShadow","shadows","emphasize","icon","width","height","other","_objectWithoutProperties","ButtonBase","_extends","focusRipple","MoreHorizIcon","ref","children","_props$component","Component","_props$expandText","expandText","_props$itemsAfterColl","itemsAfterCollapse","_props$itemsBeforeCol","itemsBeforeCollapse","_props$maxItems","maxItems","_props$separator","_React$useState","expanded","setExpanded","allItems","toArray","filter","child","map","index","li","key","concat","ol","items","reduce","acc","length","push","insertSeparators","_toConsumableArray","slice","BreadcrumbCollapsed","onClick","renderItemsBeforeAndAfter","flexWrap","alignItems","padding","margin","listStyle","userSelect"],"mappings":"yRAYMA,EAAYC,aAAW,iBAAO,CAClCC,KAAM,OAoDOC,MAjDf,YAAyC,IAAvBC,EAAsB,EAAtBA,UAAcC,EAAQ,6BAChCC,EAAUN,IAEhB,OACE,uCACEI,UAAWG,YAAKD,EAAQJ,KAAME,IAC1BC,GAEJ,kBAACG,EAAA,EAAD,CACEC,UAAW,kBAAC,IAAD,CAAkBC,SAAS,UACtCC,aAAW,cAEX,kBAACC,EAAA,EAAD,CACEC,QAAQ,QACRC,MAAM,UACNC,GAAG,OACHC,UAAWC,KAJb,aAQA,kBAACL,EAAA,EAAD,CACEC,QAAQ,QACRC,MAAM,UACNC,GAAG,YACHC,UAAWC,KAJb,QAQA,kBAACC,EAAA,EAAD,CACEL,QAAQ,QACRC,MAAM,eAFR,aAOF,kBAACI,EAAA,EAAD,CACEL,QAAQ,KACRC,MAAM,eAFR,qB,kGC9BAd,EAAYC,aAAW,iBAAO,CAClCC,KAAM,OAwMOiB,MArMf,YAII,IAHFf,EAGC,EAHDA,UACAgB,EAEC,EAFDA,IACGf,EACF,mCACKC,EAAUN,IACRqB,EAAoBC,wBAApBD,gBAER,OACE,kBAAC,IAAD,CACEE,cAAe,CACbC,MAAOJ,EAAII,OAAS,GACpBC,YAAaL,EAAIK,aAAe,GAChCC,MAAON,EAAIM,OAAS,GACpBC,KAAMP,EAAIO,MAAQ,GAClBC,QAASR,EAAIQ,SAAW,GACxBC,SAAUT,EAAIS,UAAY,IAE5BC,SAAQ,uCAAE,WAAOC,EAAP,kCAAAC,EAAA,wDACRC,UACAC,EAFQ,EAERA,UACAC,EAHQ,EAGRA,UACAC,EAJQ,EAIRA,cAGEZ,EAMEO,EANFP,MACAC,EAKEM,EALFN,YACAC,EAIEK,EAJFL,MACAC,EAGEI,EAHFJ,KACAC,EAEEG,EAFFH,QACAC,EACEE,EADFF,SAEFQ,IAAMC,IAAN,UAAaC,IAAb,YAA6BC,IAAIC,OAAjC,YAA2CrB,EAAIsB,KAAO,CACpDlB,QACAC,cACAC,QACAC,OACAC,UACAC,aAECc,MAAK,WACJR,EAAU,CAAES,SAAS,IACrBR,GAAc,GACdf,EAAgB,cAAe,CAC7BR,QAAS,UACTgC,OAAQ,kBAACC,EAAA,EAAD,yBAGXC,OAAM,SAACC,GACNb,EAAU,CAAES,SAAS,IACrBV,EAAU,CAAEe,OAAQD,EAAME,UAC1Bd,GAAc,MAjCV,2CAAF,0DAqCP,gBACCe,EADD,EACCA,OACAC,EAFD,EAECA,WACAC,EAHD,EAGCA,aACAC,EAJD,EAICA,aACAC,EALD,EAKCA,aACAC,EAND,EAMCA,QACAzB,EAPD,EAOCA,OAPD,OASC,wCACE3B,UAAWG,YAAKD,EAAQJ,KAAME,GAC9B0B,SAAUwB,GACNjD,GAGJ,kBAACoD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,QAAS,GAET,kBAACF,EAAA,EAAD,CACEG,MAAI,EACJC,GAAI,GACJC,GAAI,IAEJ,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,MAAM,QACNC,KAAK,QACLC,OAAQjB,EACRkB,SAAUjB,EACVkB,UAAQ,EACRC,MAAOzC,EAAOP,MACdX,QAAQ,cAGZ,kBAAC8C,EAAA,EAAD,CACEG,MAAI,EACJC,GAAI,GACJC,GAAI,IAEJ,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTO,WAAS,EACTC,KAAM,EACNP,MAAM,cACNC,KAAK,eACLC,OAAQjB,EACRkB,SAAUjB,EACVmB,MAAOzC,EAAON,YACdZ,QAAQ,cAGZ,kBAAC8C,EAAA,EAAD,CACEG,MAAI,EACJC,GAAI,EACJC,GAAI,IAEJ,kBAACC,EAAA,EAAD,CACEjB,MAAO2B,QAAQnB,EAAQ9B,OAASyB,EAAOzB,OACvCwC,WAAS,EACTU,WAAYpB,EAAQ9B,OAASyB,EAAOzB,MACpCyC,MAAM,eACNC,KAAK,QACLC,OAAQjB,EACRkB,SAAUjB,EACVmB,MAAOzC,EAAOL,MACdb,QAAQ,cAGZ,kBAAC8C,EAAA,EAAD,CACEG,MAAI,EACJC,GAAI,EACJC,GAAI,IAEJ,kBAACC,EAAA,EAAD,CACEjB,MAAO2B,QAAQnB,EAAQ7B,MAAQwB,EAAOxB,MACtCuC,WAAS,EACTU,WAAYpB,EAAQ7B,MAAQwB,EAAOxB,KACnCwC,MAAM,OACNC,KAAK,OACLC,OAAQjB,EACRkB,SAAUjB,EACVmB,MAAOzC,EAAOJ,KACdd,QAAQ,cAGZ,kBAAC8C,EAAA,EAAD,CACEG,MAAI,EACJC,GAAI,EACJC,GAAI,IAEJ,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,MAAM,UACNC,KAAK,UACLC,OAAQjB,EACRkB,SAAUjB,EACVmB,MAAOzC,EAAOH,QACdf,QAAQ,cAGZ,kBAAC8C,EAAA,EAAD,CACEG,MAAI,EACJC,GAAI,EACJC,GAAI,IAEJ,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,MAAM,WACNC,KAAK,WACLC,OAAQjB,EACRkB,SAAUjB,EACVmB,MAAOzC,EAAOF,SACdhB,QAAQ,eAId,kBAACgE,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAChC,EAAA,EAAD,CACEjC,QAAQ,YACRC,MAAM,YACNiE,KAAK,SACLC,SAAUzB,GAJZ,sBCxLVvD,EAAYC,aAAW,SAACgF,GAAD,MAAY,CACvC/E,KAAM,CACJgF,gBAAiBD,EAAME,QAAQC,WAAWC,KAC1CC,UAAW,OACXC,WAAYN,EAAMpB,QAAQ,GAC1B2B,cAAeP,EAAMpB,QAAQ,QA2ClB4B,UAvCf,SAA2BC,GACzB,IAAMpF,EAAUN,IACV2F,EAAeC,cAFW,EAGVC,qBAHU,mBAGzBzE,EAHyB,KAGpB0E,EAHoB,KAIxBC,EAAUL,EAAMM,MAAMC,OAAtBF,MAEFG,EAASC,uBAAY,WACzB9D,IACG+D,IADH,UACU7D,IADV,YAC0BC,IAAI6D,IAD9B,YACqCN,IAClCpD,MAAK,SAAC2D,GACDX,EAAaY,SACfT,EAAOQ,EAASE,KAAKpF,UAG1B,CAACuE,IAMJ,OAJAc,qBAAU,WACRP,MACC,CAACA,IAEC9E,EAKH,kBAACsF,EAAA,EAAD,CACEtG,UAAWE,EAAQJ,KACnBsB,MAAM,iBAEN,kBAACmF,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAAC/B,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAa1D,IAAKA,OAXjB,O,iCC5CX,IAAIyF,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CzC,OAAO,IAETyC,EAAQC,aAAU,EAElB,IAAIC,EAASN,EAAuBC,EAAQ,IAIxCM,GAAW,EAFMP,EAAuBC,EAAQ,KAElBI,SAASC,EAAOD,QAAQG,cAAc,OAAQ,CAC9EC,EAAG,mDACD,gBAEJL,EAAQC,QAAUE,G,iCCjBlB,6CAEe,SAASxB,IACtB,IAAM2B,EAAYC,kBAAO,GAMzB,OAJAf,qBAAU,kBAAM,WACdc,EAAUhB,SAAU,KACnB,IAEIgB,I,uHCHME,cAA4BC,gBAAoB,OAAQ,CACrEJ,EAAG,wJACD,a,SCiDWK,mBAhDF,SAAgB1C,GAC3B,MAAO,CACL/E,KAAM,CACJ0H,QAAS,OACTC,WAAY5C,EAAMpB,QAAQ,IAC1BiE,YAAa7C,EAAMpB,QAAQ,IAC3BqB,gBAAiBD,EAAME,QAAQ4C,KAAK,KACpCjH,MAAOmE,EAAME,QAAQ4C,KAAK,KAC1BC,aAAc,EACdC,OAAQ,UACR,mBAAoB,CAClB/C,gBAAiBD,EAAME,QAAQ4C,KAAK,MAEtC,WAAY,CACVG,UAAWjD,EAAMkD,QAAQ,GACzBjD,gBAAiBkD,YAAUnD,EAAME,QAAQ4C,KAAK,KAAM,OAGxDM,KAAM,CACJC,MAAO,GACPC,OAAQ,OA4BoB,CAChCnE,KAAM,8BADOuD,EAnBf,SAA6BjC,GAC3B,IAAIpF,EAAUoF,EAAMpF,QAChBkI,EAAQC,YAAyB/C,EAAO,CAAC,YAE7C,OAAoBgC,gBAAoBgB,IAAYC,YAAS,CAC3D3H,UAAW,KACXZ,UAAWE,EAAQJ,KACnB0I,aAAa,GACZJ,GAAqBd,gBAAoBmB,EAAe,CACzDzI,UAAWE,EAAQ+H,WCKvB,IAAI7H,EAAckH,cAAiB,SAAqBhC,EAAOoD,GAC7D,IAAIC,EAAWrD,EAAMqD,SACjBzI,EAAUoF,EAAMpF,QAChBF,EAAYsF,EAAMtF,UAClB4I,EAAmBtD,EAAM1E,UACzBiI,OAAiC,IAArBD,EAA8B,MAAQA,EAClDE,EAAoBxD,EAAMyD,WAC1BA,OAAmC,IAAtBD,EAA+B,YAAcA,EAC1DE,EAAwB1D,EAAM2D,mBAC9BA,OAA+C,IAA1BD,EAAmC,EAAIA,EAC5DE,EAAwB5D,EAAM6D,oBAC9BA,OAAgD,IAA1BD,EAAmC,EAAIA,EAC7DE,EAAkB9D,EAAM+D,SACxBA,OAA+B,IAApBD,EAA6B,EAAIA,EAC5CE,EAAmBhE,EAAMjF,UACzBA,OAAiC,IAArBiJ,EAA8B,IAAMA,EAChDlB,EAAQC,YAAyB/C,EAAO,CAAC,WAAY,UAAW,YAAa,YAAa,aAAc,qBAAsB,sBAAuB,WAAY,cAEjKiE,EAAkBjC,YAAe,GACjCkC,EAAWD,EAAgB,GAC3BE,EAAcF,EAAgB,GAwB9BG,EAAWpC,WAAeqC,QAAQhB,GAAUiB,QAAO,SAAUC,GAO/D,OAAOvC,iBAAqBuC,MAC3BC,KAAI,SAAUD,EAAOE,GACtB,OAAoBzC,gBAAoB,KAAM,CAC5CtH,UAAWE,EAAQ8J,GACnBC,IAAK,SAASC,OAAOH,IACpBF,MAEL,OAAoBvC,gBAAoBxG,IAAYyH,YAAS,CAC3DG,IAAKA,EACL9H,UAAWiI,EACXnI,MAAO,gBACPV,UAAWG,YAAKD,EAAQJ,KAAME,IAC7BoI,GAAqBd,gBAAoB,KAAM,CAChDtH,UAAWE,EAAQiK,IAhFvB,SAA0BC,EAAOpK,EAAWK,GAC1C,OAAO+J,EAAMC,QAAO,SAAUC,EAAKnE,EAAS4D,GAW1C,OAVIA,EAAQK,EAAMG,OAAS,EACzBD,EAAMA,EAAIJ,OAAO/D,EAAsBmB,gBAAoB,KAAM,CAC/D,eAAe,EACf2C,IAAK,aAAaC,OAAOH,GACzB/J,UAAWA,GACVK,IAEHiK,EAAIE,KAAKrE,GAGJmE,IACN,IAoEAG,CAAiBjB,GAAYH,GAAYK,EAASa,QAAUlB,EAAWK,EA3C1C,SAAmCA,GAOjE,OAAIP,EAAsBF,GAAsBS,EAASa,OAKhDb,EAGF,GAAGQ,OAAOQ,YAAmBhB,EAASiB,MAAM,EAAGxB,IAAuB,CAAc7B,gBAAoBsD,EAAqB,CAClI,aAAc7B,EACdkB,IAAK,WACLY,QAjBsB,WACtBpB,GAAY,OAiBTiB,YAAmBhB,EAASiB,MAAMjB,EAASa,OAAStB,EAAoBS,EAASa,UAwBHO,CAA0BpB,GAAWxJ,EAAQG,UAAWA,QAuDhIkH,gBAlKK,CAElBzH,KAAM,GAGNqK,GAAI,CACF3C,QAAS,OACTuD,SAAU,OACVC,WAAY,SACZC,QAAS,EACTC,OAAQ,EACRC,UAAW,QAIbnB,GAAI,GAGJ3J,UAAW,CACTmH,QAAS,OACT4D,WAAY,OACZ3D,WAAY,EACZC,YAAa,IA4IiB,CAChC1D,KAAM,kBADOuD,CAEZnH","file":"static/js/29.d5dcdfe0.chunk.js","sourcesContent":["import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Breadcrumbs,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Breadcrumbs\n        separator={<NavigateNextIcon fontSize=\"small\" />}\n        aria-label=\"breadcrumb\"\n      >\n        <Link\n          variant=\"body1\"\n          color=\"inherit\"\n          to=\"/app\"\n          component={RouterLink}\n        >\n          Dashboard\n        </Link>\n        <Link\n          variant=\"body1\"\n          color=\"inherit\"\n          to=\"/app/jobs\"\n          component={RouterLink}\n        >\n          Jobs\n        </Link>\n        <Typography\n          variant=\"body1\"\n          color=\"textPrimary\"\n        >\n          Edit Job\n        </Typography>\n      </Breadcrumbs>\n      <Typography\n        variant=\"h3\"\n        color=\"textPrimary\"\n      >\n        Edit Job Detail\n      </Typography>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Grid,\n  Switch,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport { API_BASE_URL } from 'src/config';\nimport { JOB } from 'src/config/endpoint';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction JobEditForm({\n  className,\n  job,\n  ...rest\n}) {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n\n  return (\n    <Formik\n      initialValues={{\n        title: job.title || '',\n        description: job.description || '',\n        state: job.state || '',\n        city: job.city || '',\n        address: job.address || '',\n        zip_code: job.zip_code || '',\n      }}\n      onSubmit={async (values, {\n        resetForm,\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        const {\n          title,\n          description,\n          state,\n          city,\n          address,\n          zip_code,\n        } = values;\n        axios.put(`${API_BASE_URL}/${JOB.UPDATE}/${job._id}`, {\n          title,\n          description,\n          state,\n          city,\n          address,\n          zip_code,\n        })\n          .then(() => {\n            setStatus({ success: true });\n            setSubmitting(false);\n            enqueueSnackbar('Job updated', {\n              variant: 'success',\n              action: <Button>Job updated</Button>\n            });\n          })\n          .catch((error) => {\n            setStatus({ success: false });\n            setErrors({ submit: error.message });\n            setSubmitting(false);\n          });\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => (\n        <form\n          className={clsx(classes.root, className)}\n          onSubmit={handleSubmit}\n          {...rest}\n        >\n\n          <Card>\n            <CardContent>\n              <Grid\n                container\n                spacing={3}\n              >\n                <Grid\n                  item\n                  md={12}\n                  xs={12}\n                >\n                  <TextField\n                    fullWidth\n                    label=\"Title\"\n                    name=\"title\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.title}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={12}\n                  xs={12}\n                >\n                  <TextField\n                    fullWidth\n                    multiline\n                    rows={6}\n                    label=\"Description\"\n                    name=\"descaription\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.description}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.state && errors.state)}\n                    fullWidth\n                    helperText={touched.state && errors.state}\n                    label=\"State/Region\"\n                    name=\"state\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.state}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.city && errors.city)}\n                    fullWidth\n                    helperText={touched.city && errors.city}\n                    label=\"City\"\n                    name=\"city\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.city}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    fullWidth\n                    label=\"Address\"\n                    name=\"address\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.address}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    fullWidth\n                    label=\"Zip Code\"\n                    name=\"zip_code\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.zip_code}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n              </Grid>\n              <Box mt={2}>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  type=\"submit\"\n                  disabled={isSubmitting}\n                >\n                  Update Job\n                </Button>\n              </Box>\n            </CardContent>\n          </Card>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nJobEditForm.propTypes = {\n  className: PropTypes.string,\n  job: PropTypes.object.isRequired\n};\n\nexport default JobEditForm;\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/prop-types */\nimport React, {\n  useState,\n  useCallback,\n  useEffect\n} from 'react';\nimport { Box, Container, makeStyles } from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport { API_BASE_URL } from 'src/config';\nimport { JOB } from 'src/config/endpoint';\nimport Header from './Header';\nimport JobEditForm from './JobEditForm';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nfunction JobDetailEditView(props) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [job, setJob] = useState();\n  const { jobId } = props.match.params;\n\n  const getJob = useCallback(() => {\n    axios\n      .get(`${API_BASE_URL}/${JOB.GET}/${jobId}`)\n      .then((response) => {\n        if (isMountedRef.current) {\n          setJob(response.data.job);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getJob();\n  }, [getJob]);\n\n  if (!job) {\n    return null;\n  }\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Customer Edit\"\n    >\n      <Container maxWidth=\"md\">\n        <Box mt={3}>\n          <Header />\n          <JobEditForm job={job} />\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n\nexport default JobDetailEditView;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'NavigateNext');\n\nexports.default = _default;","import { useRef, useEffect } from 'react';\r\n\r\nexport default function useIsMountedRef() {\r\n  const isMounted = useRef(true);\r\n\r\n  useEffect(() => () => {\r\n    isMounted.current = false;\r\n  }, []);\r\n\r\n  return isMounted;\r\n}\r\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(0.5),\n      backgroundColor: theme.palette.grey[100],\n      color: theme.palette.grey[700],\n      borderRadius: 2,\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: theme.palette.grey[200]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[0],\n        backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n      }\n    },\n    icon: {\n      width: 24,\n      height: 16\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction BreadcrumbCollapsed(props) {\n  var classes = props.classes,\n      other = _objectWithoutProperties(props, [\"classes\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    component: \"li\",\n    className: classes.root,\n    focusRipple: true\n  }, other), /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    className: classes.icon\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateBreadcrumbCollapsed'\n})(BreadcrumbCollapsed);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the li element. */\n  li: {},\n\n  /* Styles applied to the separator element. */\n  separator: {\n    display: 'flex',\n    userSelect: 'none',\n    marginLeft: 8,\n    marginRight: 8\n  }\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/React.createElement(\"li\", {\n        \"aria-hidden\": true,\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$expandText = props.expandText,\n      expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      expanded = _React$useState[0],\n      setExpanded = _React$useState[1];\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand() {\n      setExpanded(true);\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: you have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [/*#__PURE__*/React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: the Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return React.isValidElement(child);\n  }).map(function (child, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.li,\n      key: \"child-\".concat(index)\n    }, child);\n  });\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), /*#__PURE__*/React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   * By default, it maps the variant to a good default headline component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);"],"sourceRoot":""}