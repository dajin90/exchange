{"version":3,"sources":["views/projects/OverviewView/ProjectCard.js","views/projects/OverviewView/Todos.js","views/projects/OverviewView/index.js","hooks/useIsMountedRef.js","../node_modules/@material-ui/core/esm/Card/Card.js","theme/images.js","../node_modules/@material-ui/core/esm/CardMedia/CardMedia.js","assets/images/plus.svg","assets/images/add_file.svg","components/CheckItem.js"],"names":["useStyles","makeStyles","theme","root","media","height","backgroundColor","palette","background","dark","likedButton","color","colors","red","subscribersIcon","marginLeft","spacing","marginRight","editBox","justifyContent","ProjectCard","className","project","setProject","setFile","rest","pickerInput","useRef","classes","useState","saving","setSaving","cover","setCover","useEffect","console","log","Card","clsx","Box","p","ref","type","style","display","onChange","e","event","preventDefault","file","target","files","url","URL","createObjectURL","_onFileInputHandler","onClick","current","click","CardMedia","image","Images","AddFileIcon","alignItems","mt","px","TextField","title","value","defaultValue","Typography","variant","pb","fullWidth","description","py","SvgIcon","fontSize","customers","Button","Sortable","mount","MultiDrag","Swap","heading","todo","maxWidth","width","Todos","checkList","setCheckList","Container","multiDrag","swap","list","setList","map","index","CheckItem","key","_id","checkItem","updateItem","newTodo","paddingTop","paddingBottom","actionGroup","flexDirection","marginTop","actionButton","OverviewView","props","enqueueSnackbar","useSnackbar","isMountedRef","useIsMountedRef","service","setService","serviceId","match","params","getService","useCallback","axios","get","API_BASE_URL","SERVICE","GET","then","response","data","Page","converFile","check_list","Grid","container","justify","item","add_check_list","uuidv4","form","expanded","formData","FormData","append","JSON","stringify","put","UPDATE","updateService","isMounted","React","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","elevation","withStyles","overflow","name","PlusIcon","require","MEDIA_COMPONENTS","children","_props$component","component","Component","src","isMediaComponent","indexOf","composedStyle","backgroundImage","concat","img","undefined","backgroundSize","backgroundRepeat","backgroundPosition","objectFit","module","exports","flexGrow","panel","flexWrap","panelBody","padding","removeItem","headings","setDescription","setForm","setHeading","TABLE_COLUMNS","columns","setColumns","TABLE_DATA","tableData","setTableData","columnName","tableColumnExtensions","editingRowIds","setEditingRowIds","addedRows","setAddedRows","rowChanges","setRowChanges","inputValue","setInputValue","CHIPS","chips","setChips","table_columns","table_data","i","length","row","id","j","push","some","columnArray","defaultExpanded","expandIcon","aria-controls","xs","options","getOptionLabel","option","label","renderInput","FORMS","FORM_DESCRIPTIONS","content","placeholder","column","newColumn","onUpdateItem","disableUnderline","searchInput","persist","onKeyUp","keyCode","includes","prevChips","chip","onDelete","filter","prevChip","handleChipDelete","rows","getRowId","onEditingRowIdsChange","onRowChangesChange","onAddedRowsChange","initialized","Object","keys","onCommitChanges","changedRows","added","changed","deleted","startingAddedId","deletedSet","Set","has","columnExtensions","showAddCommand","showEditCommand","showDeleteCommand"],"mappings":"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","file":"static/js/22.ffa47436.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardMedia,\r\n  Button,\r\n  SvgIcon,\r\n  TextField,\r\n  Typography,\r\n  colors,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { Users as UsersIcon } from 'react-feather';\r\nimport Images from 'src/theme/images';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  media: {\r\n    height: 200,\r\n    backgroundColor: theme.palette.background.dark\r\n  },\r\n  likedButton: {\r\n    color: colors.red[600]\r\n  },\r\n  subscribersIcon: {\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  editBox: {\r\n    justifyContent: 'space-between'\r\n  }\r\n}));\r\n\r\nfunction ProjectCard({\r\n  className, project, setProject, setFile, ...rest\r\n}) {\r\n  const pickerInput = useRef();\r\n  const classes = useStyles();\r\n  const [saving, setSaving] = useState(false);\r\n  const [cover, setCover] = useState(project.cover);\r\n\r\n  useEffect(() => {\r\n    if (!saving) {\r\n      setProject(project);\r\n    }\r\n  }, [saving]);\r\n\r\n  const _onFileInputHandler = (event) => {\r\n    event.preventDefault();\r\n    const file = event.target.files[0];\r\n    const url = URL.createObjectURL(file);\r\n    setCover(url);\r\n    setFile(file);\r\n  };\r\n\r\n  console.log('cover', cover);\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Box p={3}>\r\n        <Box>\r\n          <input\r\n            ref={pickerInput}\r\n            type=\"file\"\r\n            style={{\r\n              display: 'none'\r\n            }}\r\n            onChange={(e) => { _onFileInputHandler(e); }}\r\n          />\r\n          <Box\r\n            onClick={() => {\r\n              pickerInput.current.click();\r\n            }}\r\n          >\r\n            { cover ? (\r\n              <CardMedia\r\n                className={classes.media}\r\n                image={cover}\r\n              />\r\n            ) : (\r\n              <CardMedia\r\n                className={classes.media}\r\n                image={Images.AddFileIcon}\r\n              />\r\n            )}\r\n          </Box>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          mt={2}\r\n        >\r\n          <Box px={1}>\r\n            {saving\r\n              ? (\r\n                <TextField\r\n                  onChange={(e) => { project.title = e.target.value; }}\r\n                  defaultValue={project.title}\r\n                />\r\n              ) : (\r\n                <Typography\r\n                  color=\"textPrimary\"\r\n                  variant=\"h5\"\r\n                >\r\n                  {project.title}\r\n                </Typography>\r\n              )}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <Box\r\n        pb={2}\r\n        px={4}\r\n        display=\"flex\"\r\n      >\r\n        {saving\r\n          ? (\r\n            <TextField\r\n              fullWidth\r\n              onChange={(e) => { project.description = e.target.value; }}\r\n              defaultValue={project.description}\r\n            />\r\n          ) : (\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              variant=\"body2\"\r\n            >\r\n              {project.description}\r\n            </Typography>\r\n          )}\r\n      </Box>\r\n      <Box\r\n        py={2}\r\n        px={3}\r\n        display=\"flex\"\r\n        className={classes.editBox}\r\n      >\r\n        <Box\r\n          display=\"flex\"\r\n        >\r\n          <SvgIcon\r\n            fontSize=\"small\"\r\n            color=\"action\"\r\n            className={classes.subscribersIcon}\r\n          >\r\n            <UsersIcon />\r\n          </SvgIcon>\r\n          <Typography\r\n            variant=\"subtitle2\"\r\n            color=\"textSecondary\"\r\n          >\r\n            {project.customers || 0}\r\n          </Typography>\r\n        </Box>\r\n        {saving ? <Button onClick={() => { setSaving(false); }}>Save</Button>\r\n          : <Button onClick={() => { setSaving(true); }}>Edit</Button>}\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\n\r\nProjectCard.propTypes = {\r\n  className: PropTypes.string,\r\n  project: PropTypes.object.isRequired,\r\n  setProject: PropTypes.func,\r\n  setFile: PropTypes.func,\r\n};\r\n\r\nexport default ProjectCard;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  ReactSortable, Sortable, MultiDrag, Swap\r\n} from 'react-sortablejs';\r\nimport {\r\n  Container,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport CheckItem from 'src/components/CheckItem';\r\n\r\nSortable.mount(new MultiDrag(), new Swap());\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  heading: {},\r\n  todo: {\r\n    backgroundColor: 'white'\r\n  },\r\n  description: {\r\n    maxWidth: '400px',\r\n    marginLeft: '20px',\r\n    width: '100%',\r\n  }\r\n}));\r\n\r\nfunction Todos({ className, checkList, setCheckList }) {\r\n  const classes = useStyles();\r\n\r\n  if (!checkList) {\r\n    return null;\r\n  }\r\n  return (\r\n    <Container>\r\n      <ReactSortable\r\n        multiDrag\r\n        swap\r\n        list={checkList}\r\n        setList={setCheckList}\r\n        className={clsx(classes.root, className)}\r\n      >\r\n        {checkList.map((todo, index) => (\r\n          <CheckItem\r\n            key={todo._id}\r\n            checkItem={todo}\r\n            updateItem={(newTodo) => {\r\n              checkList[index] = newTodo;\r\n              setCheckList(checkList);\r\n            }}\r\n          />\r\n        ))}\r\n      </ReactSortable>\r\n    </Container>\r\n  );\r\n}\r\n\r\nTodos.propTypes = {\r\n  className: PropTypes.string,\r\n  checkList: PropTypes.array,\r\n  setCheckList: PropTypes.func\r\n};\r\n\r\nexport default Todos;\r\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/prop-types */\nimport React, {\n  useState,\n  useCallback,\n  useEffect\n} from 'react';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Button,\n  Container,\n  Grid,\n  makeStyles,\n} from '@material-ui/core';\nimport { v4 as uuidv4 } from 'uuid';\nimport Page from 'src/components/Page';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport { API_BASE_URL } from 'src/config';\nimport { SERVICE } from 'src/config/endpoint';\nimport ProjectCard from './ProjectCard';\nimport Todos from './Todos';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  },\n  actionGroup: {\n    flexDirection: 'row-reverse',\n    marginTop: '20px'\n  },\n  actionButton: {\n    marginRight: '20px'\n  }\n}));\n\nfunction OverviewView(props) {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n  const isMountedRef = useIsMountedRef();\n  const [service, setService] = useState(null);\n  const { serviceId } = props.match.params;\n  const [file, setFile] = useState(null);\n\n  const getService = useCallback(() => {\n    axios\n      .get(`${API_BASE_URL}/${SERVICE.GET}/${serviceId}`)\n      .then((response) => {\n        if (isMountedRef.current) {\n          setService(response.data.service);\n        }\n      });\n  }, [isMountedRef]);\n\n  const updateService = () => {\n    if (file) {\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('service', JSON.stringify(service));\n      axios\n        .put(`${API_BASE_URL}/${SERVICE.UPDATE}/${serviceId}`, formData)\n        .then(() => {\n          enqueueSnackbar('Service Updated', {\n            variant: 'success',\n          });\n        });\n    } else {\n      axios\n        .put(`${API_BASE_URL}/${SERVICE.UPDATE}/${serviceId}`, service)\n        .then(() => {\n          enqueueSnackbar('Service Updated', {\n            variant: 'success',\n          });\n        });\n    }\n  };\n\n  useEffect(() => {\n    getService();\n  }, [getService]);\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Overview\"\n    >\n      <Container maxWidth=\"lg\">\n        {/* <Header /> */}\n        {/* <Box mt={3}>\n          <Statistics />\n        </Box>\n        <Box mt={6}>\n          <Notifications />\n        </Box> */}\n        <Box mt={6}>\n          {service && (\n          <ProjectCard\n            project={{\n              cover: service.cover,\n              title: service.title,\n              description: service.description\n            }}\n            setProject={(project) => {\n              setService({ ...service, ...project });\n            }}\n            setFile={(converFile) => {\n              setFile(converFile);\n            }}\n          />\n          )}\n        </Box>\n        <Box mt={6}>\n          {service && (\n          <Todos\n            checkList={service.check_list}\n            setCheckList={(check_list) => {\n              setService({ ...service, check_list });\n            }}\n          />\n          )}\n        </Box>\n        <Grid\n          alignItems=\"center\"\n          container\n          justify=\"space-between\"\n          spacing={3}\n          className={classes.actionGroup}\n        >\n          <Grid\n            item\n          >\n            <Button\n              className={classes.actionButton}\n              color=\"secondary\"\n              variant=\"contained\"\n              onClick={() => {\n                if (service.check_list) {\n                  const add_check_list = [...service.check_list, {\n                    _id: uuidv4(),\n                    form: '',\n                    description: '',\n                    expanded: true\n                  }];\n                  setService({ ...service, check_list: add_check_list });\n                } else {\n                  setService({\n                    ...service,\n                    check_list: [{\n                      _id: uuidv4(),\n                      form: 'input',\n                      description: '',\n                      expanded: true\n                    }]\n                  });\n                }\n              }}\n            >\n              Add To Do\n            </Button>\n            <Button\n              className={classes.actionButton}\n              color=\"secondary\"\n              variant=\"contained\"\n              onClick={() => { updateService(); }}\n            >\n              Save\n            </Button>\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n}\n\nexport default OverviewView;\n","import { useRef, useEffect } from 'react';\r\n\r\nexport default function useIsMountedRef() {\r\n  const isMounted = useRef(true);\r\n\r\n  useEffect(() => () => {\r\n    isMounted.current = false;\r\n  }, []);\r\n\r\n  return isMounted;\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","/* eslint-disable global-require */\r\n/* eslint-disable import/prefer-default-export */\r\nconst Images = {\r\n  PlusIcon: require('../assets/images/plus.svg'),\r\n  AddFileIcon: require('../assets/images/add_file.svg')\r\n};\r\n\r\nexport default Images;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { chainPropTypes } from '@material-ui/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `component=\"picture or img\"`. */\n  img: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = React.forwardRef(function CardMedia(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media, \"picture img\".indexOf(Component) !== -1 && classes.img),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('Material-UI: either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Component for rendering image.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);","module.exports = __webpack_public_path__ + \"static/media/plus.be237ea4.svg\";","module.exports = __webpack_public_path__ + \"static/media/add_file.84371f25.svg\";","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Chip,\n  Divider,\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  ExpansionPanelDetails,\n  Grid as GridRow,\n  Input,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {\n  FORMS, FORM_DESCRIPTIONS, TABLE_COLUMNS, TABLE_DATA, CHIPS\n} from 'src/constants';\n\nimport { EditingState } from '@devexpress/dx-react-grid';\nimport {\n  Grid,\n  Table,\n  TableHeaderRow,\n  TableEditRow,\n  TableEditColumn,\n} from '@devexpress/dx-react-grid-material-ui';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    flexGrow: 1,\n  },\n  heading: {},\n  todo: {\n    backgroundColor: 'white'\n  },\n  panel: {\n    flexWrap: 'wrap'\n  },\n  panelBody: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    padding: '0px'\n  },\n  description: {\n    maxWidth: '600px',\n    marginLeft: '10px',\n    width: '100%',\n  }\n}));\n\n\nfunction CheckItem({\n  checkItem, updateItem, removeItem, headings\n}) {\n  const classes = useStyles();\n  const [description, setDescription] = useState(checkItem.description);\n  const [form, setForm] = useState(checkItem.form);\n  const [heading, setHeading] = useState(headings[0]);\n\n  const getOptionLabel = (option) => {\n    for (let i = 0; i < FORM_DESCRIPTIONS.length; i++) {\n      if (FORM_DESCRIPTIONS[i].title === option) {\n        return FORM_DESCRIPTIONS[i].content;\n      }\n    }\n    return FORM_DESCRIPTIONS[0].content;\n  };\n\n  const [columns, setColumns] = useState(TABLE_COLUMNS);\n\n  const [tableData, setTableData] = useState(TABLE_DATA);\n\n  const [tableColumnExtensions] = useState([\n    { columnName: 'id', width: 60 },\n  ]);\n\n  const [editingRowIds, setEditingRowIds] = useState([]);\n  const [addedRows, setAddedRows] = useState([]);\n  const [rowChanges, setRowChanges] = useState({});\n\n  const [inputValue, setInputValue] = useState('');\n  const [chips, setChips] = useState(CHIPS);\n\n  useEffect(() => {\n    if (form === 'table' && checkItem.table_columns) {\n      setChips(checkItem.table_columns);\n    }\n\n    if (form === 'table' && checkItem.table_data) {\n      const table_data = [];\n      for (let i = 0; i < checkItem.table_data.length; i++) {\n        const row = {\n          id: i,\n        };\n        for (let j = 0; j < checkItem.table_columns.length; j++) {\n          const column = checkItem.table_columns[j];\n          row[column] = checkItem.table_data[i][j];\n        }\n        table_data.push(row);\n      }\n      setTableData(table_data);\n    }\n    headings.some((item) => {\n      if (item.id === checkItem.heading) {\n        setHeading(item);\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    const columnArray = [];\n    for (let i = 0; i < chips.length; i++) {\n      columnArray.push({ title: chips[i], name: chips[i] },);\n    }\n    setColumns(columnArray);\n  }, [chips]);\n\n  const getRowId = (row) => row.id;\n\n  const handleInputChange = (event) => {\n    event.persist();\n    setInputValue(event.target.value);\n  };\n\n  const handleInputKeyup = (event) => {\n    event.persist();\n\n    if (event.keyCode === 13 && inputValue) {\n      if (!chips.includes(inputValue)) {\n        setChips((prevChips) => [...prevChips, inputValue]);\n        setInputValue('');\n      }\n    }\n  };\n\n  const handleChipDelete = (chip) => {\n    setChips((prevChips) => prevChips.filter((prevChip) => chip !== prevChip));\n  };\n\n\n  const changeAddedRows = (value) => {\n    const initialized = value.map((row) => (Object.keys(row).length ? row : {}));\n    setAddedRows(initialized);\n  };\n\n\n  const commitChanges = ({ added, changed, deleted }) => {\n    let changedRows;\n    if (added) {\n      const startingAddedId = tableData.length > 0 ? tableData[tableData.length - 1].id + 1 : 0;\n      changedRows = [\n        ...tableData,\n        ...added.map((row, index) => ({\n          id: startingAddedId + index,\n          ...row,\n        })),\n      ];\n    }\n    if (changed) {\n      changedRows = tableData.map((row) => (changed[row.id] ? { ...row, ...changed[row.id] } : row));\n    }\n    if (deleted) {\n      const deletedSet = new Set(deleted);\n      changedRows = tableData.filter((row) => !deletedSet.has(row.id));\n    }\n    setTableData(changedRows);\n  };\n\n  const onUpdateItem = () => {\n    checkItem.description = description;\n    checkItem.form = form;\n    checkItem.heading = heading.id;\n    checkItem.expanded = false;\n    if (form === 'table') {\n      if (chips) {\n        checkItem.table_columns = chips;\n      }\n      if (tableData) {\n        const table_data = [];\n        for (let i = 0; i < tableData.length; i++) {\n          const row = [];\n          for (let j = 0; j < chips.length; j++) {\n            const column = chips[j];\n            const newColumn = tableData[i][column] || '';\n            row.push(newColumn);\n          }\n          table_data.push(row);\n        }\n        checkItem.table_data = table_data;\n      }\n    }\n    updateItem(checkItem);\n  };\n\n  const onRemoveItem = () => {\n    removeItem(checkItem._id);\n  };\n\n  return (\n    <>\n      <ExpansionPanel\n        defaultExpanded={checkItem.expanded}\n      >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n        >\n          <Typography className={classes.heading}>{description}</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails\n          className={classes.panel}\n        >\n          <GridRow\n            xs={12}\n            item\n            className={classes.panelBody}\n          >\n            <Autocomplete\n              value={heading}\n              options={headings}\n              getOptionLabel={(option) => option.label}\n              style={{ width: 300 }}\n              renderInput={(params) => <TextField {...params} label=\"Heading\" variant=\"outlined\" />}\n              onChange={(event, value) => {\n                setHeading(value);\n              }}\n            />\n            <Autocomplete\n              value={form}\n              options={FORMS}\n              getOptionLabel={(option) => getOptionLabel(option)}\n              style={{ width: 300 }}\n              renderInput={(params) => <TextField {...params} label=\"Form Type\" variant=\"outlined\" />}\n              onChange={(event, value) => {\n                setForm(value);\n              }}\n            />\n            <TextField\n              placeholder=\"Description\"\n              variant=\"outlined\"\n              label=\"Description\"\n              className={classes.description}\n              defaultValue={description}\n              onChange={(e) => {\n                setDescription(e.target.value);\n              }}\n            />\n            <Button onClick={() => { onUpdateItem(); }}>\n              Update\n            </Button>\n            <Button onClick={() => { onRemoveItem(); }}>\n              Remove\n            </Button>\n          </GridRow>\n          {(form === 'table')\n          && (\n            <>\n              <>\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                >\n                  <Input\n                    disableUnderline\n                    fullWidth\n                    className={classes.searchInput}\n                    onChange={handleInputChange}\n                    onKeyUp={handleInputKeyup}\n                    placeholder=\"Enter a keyword\"\n                    value={inputValue}\n                  />\n                </Box>\n                <Divider />\n                <Box\n                  p={1}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  flexWrap=\"wrap\"\n                >\n                  {chips.map((chip) => (\n                    <Chip\n                      className={classes.chip}\n                      key={chip}\n                      label={chip}\n                      onDelete={() => handleChipDelete(chip)}\n                    />\n                  ))}\n                </Box>\n                <Divider />\n              </>\n              <>\n                <Grid\n                  rows={tableData}\n                  columns={columns}\n                  getRowId={getRowId}\n                >\n                  <EditingState\n                    editingRowIds={editingRowIds}\n                    onEditingRowIdsChange={setEditingRowIds}\n                    rowChanges={rowChanges}\n                    onRowChangesChange={setRowChanges}\n                    addedRows={addedRows}\n                    onAddedRowsChange={changeAddedRows}\n                    onCommitChanges={commitChanges}\n                  />\n                  <Table\n                    columnExtensions={tableColumnExtensions}\n                  />\n                  <TableHeaderRow />\n                  <TableEditRow />\n                  <TableEditColumn\n                    showAddCommand={!addedRows.length}\n                    showEditCommand\n                    showDeleteCommand\n                  />\n                </Grid>\n              </>\n            </>\n          )}\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </>\n  );\n}\n\nCheckItem.propTypes = {\n  checkItem: PropTypes.object,\n  updateItem: PropTypes.func,\n  removeItem: PropTypes.func,\n  headings: PropTypes.array,\n};\n\nexport default CheckItem;\n"],"sourceRoot":""}